; Listing generated by Microsoft (R) Optimizing Compiler Version 19.23.28106.4 

	TITLE	D:\Réseau neuronnes - Projet Raven\Réseau\solution_lab_apprentissage_a_partir_bot\solution_lab_apprentissage_a_partir_bot\Buckland_Chapter7 to 10_Raven_apprentissage\goals\Goal_FollowPath.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMTD
INCLUDELIB OLDNAMES

CONST	SEGMENT
$SG172189 DB	'<Goal_FollowPath::Activate>: Unrecognized edge type', 00H
$SG183185 DB	'invalid argument', 00H
	ORG $+3
$SG183186 DB	'%s', 00H
	ORG $+5
$SG183187 DB	'C:\Program Files (x86)\Microsoft Visual Studio\2019\Comm'
	DB	'unity\VC\Tools\MSVC\14.23.28105\include\xmemory', 00H
$SG183188 DB	'C', 00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H
	DB	'g', 00H, 'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i'
	DB	00H, 'l', 00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H
	DB	'8', 00H, '6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c'
	DB	00H, 'r', 00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H
	DB	' ', 00H, 'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l'
	DB	00H, ' ', 00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H
	DB	'o', 00H, '\', 00H, '2', 00H, '0', 00H, '1', 00H, '9', 00H, '\'
	DB	00H, 'C', 00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H
	DB	'i', 00H, 't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\'
	DB	00H, 'T', 00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H
	DB	'M', 00H, 'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4'
	DB	00H, '.', 00H, '2', 00H, '3', 00H, '.', 00H, '2', 00H, '8', 00H
	DB	'1', 00H, '0', 00H, '5', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c'
	DB	00H, 'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'x', 00H
	DB	'm', 00H, 'e', 00H, 'm', 00H, 'o', 00H, 'r', 00H, 'y', 00H, 00H
	DB	00H
$SG183189 DB	's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H
	DB	'A', 00H, 'l', 00H, 'l', 00H, 'o', 00H, 'c', 00H, 'a', 00H, 't'
	DB	00H, 'e', 00H, '_', 00H, 'm', 00H, 'a', 00H, 'n', 00H, 'u', 00H
	DB	'a', 00H, 'l', 00H, 'l', 00H, 'y', 00H, '_', 00H, 'v', 00H, 'e'
	DB	00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, '_', 00H, 'a', 00H
	DB	'l', 00H, 'i', 00H, 'g', 00H, 'n', 00H, 'e', 00H, 'd', 00H, 00H
	DB	00H
	ORG $+2
$SG183190 DB	'"', 00H, 'i', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H
	DB	'i', 00H, 'd', 00H, ' ', 00H, 'a', 00H, 'r', 00H, 'g', 00H, 'u'
	DB	00H, 'm', 00H, 'e', 00H, 'n', 00H, 't', 00H, '"', 00H, 00H, 00H
	ORG $+2
$SG183634 DB	'C:\Program Files (x86)\Microsoft Visual Studio\2019\Comm'
	DB	'unity\VC\Tools\MSVC\14.23.28105\include\xlocale', 00H
?colors@@3QBKB DD 0ffH					; colors
	DD	0ff0000H
	DD	0ff00H
	DD	00H
	DD	0c8c8ffH
	DD	0c8c8c8H
	DD	0ffffH
	DD	0aaffH
	DD	0aa00ffH
	DD	05a85H
	DD	0ffffffH
	DD	06400H
	DD	0ffff00H
	DD	0c8c8c8H
	DD	0e6e6ffH
CONST	ENDS
PUBLIC	?__empty_global_delete@@YAXPAX@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPAXI@Z		; __empty_global_delete
PUBLIC	??2@YAPAXIPAX@Z					; operator new
PUBLIC	?max@?$numeric_limits@H@std@@SAHXZ		; std::numeric_limits<int>::max
PUBLIC	?min@?$numeric_limits@M@std@@SAMXZ		; std::numeric_limits<float>::min
PUBLIC	?max@?$numeric_limits@M@std@@SAMXZ		; std::numeric_limits<float>::max
PUBLIC	?min@?$numeric_limits@N@std@@SANXZ		; std::numeric_limits<double>::min
PUBLIC	?max@?$numeric_limits@N@std@@SANXZ		; std::numeric_limits<double>::max
PUBLIC	?epsilon@?$numeric_limits@N@std@@SANXZ		; std::numeric_limits<double>::epsilon
PUBLIC	??0exception@std@@QAE@QBD@Z			; std::exception::exception
PUBLIC	??0exception@std@@QAE@QBDH@Z			; std::exception::exception
PUBLIC	??0exception@std@@QAE@ABV01@@Z			; std::exception::exception
PUBLIC	??1exception@std@@UAE@XZ			; std::exception::~exception
PUBLIC	?what@exception@std@@UBEPBDXZ			; std::exception::what
PUBLIC	??_Gexception@std@@UAEPAXI@Z			; std::exception::`scalar deleting destructor'
PUBLIC	??0bad_alloc@std@@AAE@QBD@Z			; std::bad_alloc::bad_alloc
PUBLIC	??1bad_alloc@std@@UAE@XZ			; std::bad_alloc::~bad_alloc
PUBLIC	??0bad_alloc@std@@QAE@ABV01@@Z			; std::bad_alloc::bad_alloc
PUBLIC	??_Gbad_alloc@std@@UAEPAXI@Z			; std::bad_alloc::`scalar deleting destructor'
PUBLIC	??0bad_array_new_length@std@@QAE@XZ		; std::bad_array_new_length::bad_array_new_length
PUBLIC	??1bad_array_new_length@std@@UAE@XZ		; std::bad_array_new_length::~bad_array_new_length
PUBLIC	??0bad_array_new_length@std@@QAE@ABV01@@Z	; std::bad_array_new_length::bad_array_new_length
PUBLIC	??_Gbad_array_new_length@std@@UAEPAXI@Z		; std::bad_array_new_length::`scalar deleting destructor'
PUBLIC	?_Throw_bad_array_new_length@std@@YAXXZ		; std::_Throw_bad_array_new_length
PUBLIC	?_Allocate@_Default_allocate_traits@std@@SAPAXI@Z ; std::_Default_allocate_traits::_Allocate
PUBLIC	?_Adjust_manually_vector_aligned@std@@YAXAAPAXAAI@Z ; std::_Adjust_manually_vector_aligned
PUBLIC	?_Adopt@_Iterator_base0@std@@QAEXPBX@Z		; std::_Iterator_base0::_Adopt
PUBLIC	??0_Container_proxy@std@@QAE@PAU_Container_base12@1@@Z ; std::_Container_proxy::_Container_proxy
PUBLIC	??0_Container_base12@std@@QAE@XZ		; std::_Container_base12::_Container_base12
PUBLIC	?_Orphan_all@_Container_base12@std@@QAEXXZ	; std::_Container_base12::_Orphan_all
PUBLIC	??0_Iterator_base12@std@@QAE@XZ			; std::_Iterator_base12::_Iterator_base12
PUBLIC	??0_Iterator_base12@std@@QAE@ABU01@@Z		; std::_Iterator_base12::_Iterator_base12
PUBLIC	??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z	; std::_Iterator_base12::operator=
PUBLIC	??1_Iterator_base12@std@@QAE@XZ			; std::_Iterator_base12::~_Iterator_base12
PUBLIC	?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z ; std::_Iterator_base12::_Adopt
PUBLIC	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
PUBLIC	?_Orphan_me@_Iterator_base12@std@@QAEXXZ	; std::_Iterator_base12::_Orphan_me
PUBLIC	?_Release@_Basic_container_proxy_ptr12@std@@QAEXXZ ; std::_Basic_container_proxy_ptr12::_Release
PUBLIC	?assign@?$_Narrow_char_traits@DH@std@@SAXAADABD@Z ; std::_Narrow_char_traits<char,int>::assign
PUBLIC	?deallocate@?$allocator@D@std@@QAEXQADI@Z	; std::allocator<char>::deallocate
PUBLIC	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
PUBLIC	?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QBE_NXZ ; std::_String_val<std::_Simple_types<char> >::_Large_string_engaged
PUBLIC	??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<char> >::_Bxty::~_Bxty
PUBLIC	??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<char> >::~_String_val<std::_Simple_types<char> >
PUBLIC	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
PUBLIC	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
PUBLIC	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
PUBLIC	?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEAAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAEAAV?$allocator@D@2@XZ ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_first
PUBLIC	??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAE@XZ ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::~_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>
PUBLIC	??0runtime_error@std@@QAE@PBD@Z			; std::runtime_error::runtime_error
PUBLIC	??1runtime_error@std@@UAE@XZ			; std::runtime_error::~runtime_error
PUBLIC	??0runtime_error@std@@QAE@ABV01@@Z		; std::runtime_error::runtime_error
PUBLIC	??_Gruntime_error@std@@UAEPAXI@Z		; std::runtime_error::`scalar deleting destructor'
PUBLIC	??0id@locale@std@@QAE@I@Z			; std::locale::id::id
PUBLIC	??0Vector2D@@QAE@NN@Z				; Vector2D::Vector2D
PUBLIC	?Length@Vector2D@@QBENXZ			; Vector2D::Length
PUBLIC	?Perp@Vector2D@@QBE?AU1@XZ			; Vector2D::Perp
PUBLIC	??XVector2D@@QAEABU0@ABN@Z			; Vector2D::operator*=
PUBLIC	??D@YA?AUVector2D@@ABU0@N@Z			; operator*
PUBLIC	??G@YA?AUVector2D@@ABU0@0@Z			; operator-
PUBLIC	??H@YA?AUVector2D@@ABU0@0@Z			; operator+
PUBLIC	?Vec2DNormalize@@YA?AUVector2D@@ABU1@@Z		; Vec2DNormalize
PUBLIC	?VectorToPOINT@@YA?AUtagPOINT@@ABUVector2D@@@Z	; VectorToPOINT
PUBLIC	?BlackPen@Cgdi@@QAEXXZ				; Cgdi::BlackPen
PUBLIC	?RedBrush@Cgdi@@QAEXXZ				; Cgdi::RedBrush
PUBLIC	?TextAtPos@Cgdi@@QAEXNNABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; Cgdi::TextAtPos
PUBLIC	?TransparentText@Cgdi@@QAEXXZ			; Cgdi::TransparentText
PUBLIC	?TextColor@Cgdi@@QAEXHHH@Z			; Cgdi::TextColor
PUBLIC	?LineWithArrow@Cgdi@@QAEXUVector2D@@0N@Z	; Cgdi::LineWithArrow
PUBLIC	?Circle@Cgdi@@QAEXUVector2D@@N@Z		; Cgdi::Circle
PUBLIC	?Destination@PathEdge@@QBE?AUVector2D@@XZ	; PathEdge::Destination
PUBLIC	?Source@PathEdge@@QBE?AUVector2D@@XZ		; PathEdge::Source
PUBLIC	?Behavior@PathEdge@@QBEHXZ			; PathEdge::Behavior
PUBLIC	?ActivateIfInactive@?$Goal@VRaven_Bot@@@@IAEXXZ	; Goal<Raven_Bot>::ActivateIfInactive
PUBLIC	??0?$Goal@VRaven_Bot@@@@QAE@PAVRaven_Bot@@H@Z	; Goal<Raven_Bot>::Goal<Raven_Bot>
PUBLIC	??1?$Goal@VRaven_Bot@@@@UAE@XZ			; Goal<Raven_Bot>::~Goal<Raven_Bot>
PUBLIC	?HandleMessage@?$Goal@VRaven_Bot@@@@UAE_NABUTelegram@@@Z ; Goal<Raven_Bot>::HandleMessage
PUBLIC	?AddSubgoal@?$Goal@VRaven_Bot@@@@UAEXPAV1@@Z	; Goal<Raven_Bot>::AddSubgoal
PUBLIC	?isComplete@?$Goal@VRaven_Bot@@@@QBE_NXZ	; Goal<Raven_Bot>::isComplete
PUBLIC	?isActive@?$Goal@VRaven_Bot@@@@QBE_NXZ		; Goal<Raven_Bot>::isActive
PUBLIC	?isInactive@?$Goal@VRaven_Bot@@@@QBE_NXZ	; Goal<Raven_Bot>::isInactive
PUBLIC	?hasFailed@?$Goal@VRaven_Bot@@@@QBE_NXZ		; Goal<Raven_Bot>::hasFailed
PUBLIC	?GetType@?$Goal@VRaven_Bot@@@@QBEHXZ		; Goal<Raven_Bot>::GetType
PUBLIC	?RenderAtPos@?$Goal@VRaven_Bot@@@@UBEXAAUVector2D@@PAVTypeToString@@@Z ; Goal<Raven_Bot>::RenderAtPos
PUBLIC	?Render@?$Goal@VRaven_Bot@@@@UAEXXZ		; Goal<Raven_Bot>::Render
PUBLIC	??_G?$Goal@VRaven_Bot@@@@UAEPAXI@Z		; Goal<Raven_Bot>::`scalar deleting destructor'
PUBLIC	??0?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@std@@QAE@XZ ; std::allocator<std::_List_node<Goal<Raven_Bot> *,void *> >::allocator<std::_List_node<Goal<Raven_Bot> *,void *> >
PUBLIC	?deallocate@?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@std@@QAEXQAU?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@2@I@Z ; std::allocator<std::_List_node<Goal<Raven_Bot> *,void *> >::deallocate
PUBLIC	?allocate@?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@std@@QAEPAU?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@2@I@Z ; std::allocator<std::_List_node<Goal<Raven_Bot> *,void *> >::allocate
PUBLIC	?deallocate@?$_Default_allocator_traits@V?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@2@QAU?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@2@I@Z ; std::_Default_allocator_traits<std::allocator<std::_List_node<Goal<Raven_Bot> *,void *> > >::deallocate
PUBLIC	?max_size@?$_Default_allocator_traits@V?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@std@@@std@@SAIABV?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@2@@Z ; std::_Default_allocator_traits<std::allocator<std::_List_node<Goal<Raven_Bot> *,void *> > >::max_size
PUBLIC	??0?$list@PAV?$Goal@VRaven_Bot@@@@V?$allocator@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@QAE@XZ ; std::list<Goal<Raven_Bot> *,std::allocator<Goal<Raven_Bot> *> >::list<Goal<Raven_Bot> *,std::allocator<Goal<Raven_Bot> *> >
PUBLIC	??1?$list@PAV?$Goal@VRaven_Bot@@@@V?$allocator@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@QAE@XZ ; std::list<Goal<Raven_Bot> *,std::allocator<Goal<Raven_Bot> *> >::~list<Goal<Raven_Bot> *,std::allocator<Goal<Raven_Bot> *> >
PUBLIC	?begin@?$list@PAV?$Goal@VRaven_Bot@@@@V?$allocator@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@2@XZ ; std::list<Goal<Raven_Bot> *,std::allocator<Goal<Raven_Bot> *> >::begin
PUBLIC	?begin@?$list@PAV?$Goal@VRaven_Bot@@@@V?$allocator@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@QBE?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@2@XZ ; std::list<Goal<Raven_Bot> *,std::allocator<Goal<Raven_Bot> *> >::begin
PUBLIC	?end@?$list@PAV?$Goal@VRaven_Bot@@@@V?$allocator@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@2@XZ ; std::list<Goal<Raven_Bot> *,std::allocator<Goal<Raven_Bot> *> >::end
PUBLIC	?end@?$list@PAV?$Goal@VRaven_Bot@@@@V?$allocator@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@QBE?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@2@XZ ; std::list<Goal<Raven_Bot> *,std::allocator<Goal<Raven_Bot> *> >::end
PUBLIC	?rbegin@?$list@PAV?$Goal@VRaven_Bot@@@@V?$allocator@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@QBE?AV?$reverse_iterator@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@@2@XZ ; std::list<Goal<Raven_Bot> *,std::allocator<Goal<Raven_Bot> *> >::rbegin
PUBLIC	?rend@?$list@PAV?$Goal@VRaven_Bot@@@@V?$allocator@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@QBE?AV?$reverse_iterator@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@@2@XZ ; std::list<Goal<Raven_Bot> *,std::allocator<Goal<Raven_Bot> *> >::rend
PUBLIC	?size@?$list@PAV?$Goal@VRaven_Bot@@@@V?$allocator@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@QBEIXZ ; std::list<Goal<Raven_Bot> *,std::allocator<Goal<Raven_Bot> *> >::size
PUBLIC	?max_size@?$list@PAV?$Goal@VRaven_Bot@@@@V?$allocator@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@QBEIXZ ; std::list<Goal<Raven_Bot> *,std::allocator<Goal<Raven_Bot> *> >::max_size
PUBLIC	?empty@?$list@PAV?$Goal@VRaven_Bot@@@@V?$allocator@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@QBE_NXZ ; std::list<Goal<Raven_Bot> *,std::allocator<Goal<Raven_Bot> *> >::empty
PUBLIC	?front@?$list@PAV?$Goal@VRaven_Bot@@@@V?$allocator@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@QAEAAPAV?$Goal@VRaven_Bot@@@@XZ ; std::list<Goal<Raven_Bot> *,std::allocator<Goal<Raven_Bot> *> >::front
PUBLIC	?push_front@?$list@PAV?$Goal@VRaven_Bot@@@@V?$allocator@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@QAEXABQAV?$Goal@VRaven_Bot@@@@@Z ; std::list<Goal<Raven_Bot> *,std::allocator<Goal<Raven_Bot> *> >::push_front
PUBLIC	?pop_front@?$list@PAV?$Goal@VRaven_Bot@@@@V?$allocator@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@QAEXXZ ; std::list<Goal<Raven_Bot> *,std::allocator<Goal<Raven_Bot> *> >::pop_front
PUBLIC	?_Unchecked_erase@?$list@PAV?$Goal@VRaven_Bot@@@@V?$allocator@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@AAEPAU?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@2@QAU32@@Z ; std::list<Goal<Raven_Bot> *,std::allocator<Goal<Raven_Bot> *> >::_Unchecked_erase
PUBLIC	?clear@?$list@PAV?$Goal@VRaven_Bot@@@@V?$allocator@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@QAEXXZ ; std::list<Goal<Raven_Bot> *,std::allocator<Goal<Raven_Bot> *> >::clear
PUBLIC	?_Tidy@?$list@PAV?$Goal@VRaven_Bot@@@@V?$allocator@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@AAEXXZ ; std::list<Goal<Raven_Bot> *,std::allocator<Goal<Raven_Bot> *> >::_Tidy
PUBLIC	?_Alloc_sentinel_and_proxy@?$list@PAV?$Goal@VRaven_Bot@@@@V?$allocator@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@AAEXXZ ; std::list<Goal<Raven_Bot> *,std::allocator<Goal<Raven_Bot> *> >::_Alloc_sentinel_and_proxy
PUBLIC	?_Getal@?$list@PAV?$Goal@VRaven_Bot@@@@V?$allocator@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@AAEAAV?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@2@XZ ; std::list<Goal<Raven_Bot> *,std::allocator<Goal<Raven_Bot> *> >::_Getal
PUBLIC	?_Getal@?$list@PAV?$Goal@VRaven_Bot@@@@V?$allocator@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@ABEABV?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@2@XZ ; std::list<Goal<Raven_Bot> *,std::allocator<Goal<Raven_Bot> *> >::_Getal
PUBLIC	??0?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@QAE@XZ ; std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> >::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> >
PUBLIC	?_Orphan_non_end@?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@QAEXXZ ; std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> >::_Orphan_non_end
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@std@@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@2@$00@std@@QAEAAV?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@2@XZ ; std::_Compressed_pair<std::allocator<std::_List_node<Goal<Raven_Bot> *,void *> >,std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> >,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@std@@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@2@$00@std@@QBEABV?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@2@XZ ; std::_Compressed_pair<std::allocator<std::_List_node<Goal<Raven_Bot> *,void *> >,std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> >,1>::_Get_first
PUBLIC	?ProcessSubgoals@?$Goal_Composite@VRaven_Bot@@@@IAEHXZ ; Goal_Composite<Raven_Bot>::ProcessSubgoals
PUBLIC	?ForwardMessageToFrontMostSubgoal@?$Goal_Composite@VRaven_Bot@@@@IAE_NABUTelegram@@@Z ; Goal_Composite<Raven_Bot>::ForwardMessageToFrontMostSubgoal
PUBLIC	??0?$Goal_Composite@VRaven_Bot@@@@QAE@PAVRaven_Bot@@H@Z ; Goal_Composite<Raven_Bot>::Goal_Composite<Raven_Bot>
PUBLIC	??1?$Goal_Composite@VRaven_Bot@@@@UAE@XZ	; Goal_Composite<Raven_Bot>::~Goal_Composite<Raven_Bot>
PUBLIC	?HandleMessage@?$Goal_Composite@VRaven_Bot@@@@UAE_NABUTelegram@@@Z ; Goal_Composite<Raven_Bot>::HandleMessage
PUBLIC	?AddSubgoal@?$Goal_Composite@VRaven_Bot@@@@UAEXPAV?$Goal@VRaven_Bot@@@@@Z ; Goal_Composite<Raven_Bot>::AddSubgoal
PUBLIC	?RemoveAllSubgoals@?$Goal_Composite@VRaven_Bot@@@@QAEXXZ ; Goal_Composite<Raven_Bot>::RemoveAllSubgoals
PUBLIC	?RenderAtPos@?$Goal_Composite@VRaven_Bot@@@@UBEXAAUVector2D@@PAVTypeToString@@@Z ; Goal_Composite<Raven_Bot>::RenderAtPos
PUBLIC	?Render@?$Goal_Composite@VRaven_Bot@@@@UAEXXZ	; Goal_Composite<Raven_Bot>::Render
PUBLIC	??_G?$Goal_Composite@VRaven_Bot@@@@UAEPAXI@Z	; Goal_Composite<Raven_Bot>::`scalar deleting destructor'
PUBLIC	?deallocate@?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@std@@QAEXQAU?$_List_node@VPathEdge@@PAX@2@I@Z ; std::allocator<std::_List_node<PathEdge,void *> >::deallocate
PUBLIC	?allocate@?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@std@@QAEPAU?$_List_node@VPathEdge@@PAX@2@I@Z ; std::allocator<std::_List_node<PathEdge,void *> >::allocate
PUBLIC	?deallocate@?$_Default_allocator_traits@V?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@2@QAU?$_List_node@VPathEdge@@PAX@2@I@Z ; std::_Default_allocator_traits<std::allocator<std::_List_node<PathEdge,void *> > >::deallocate
PUBLIC	?select_on_container_copy_construction@?$_Default_allocator_traits@V?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@std@@@std@@SA?AV?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@2@ABV32@@Z ; std::_Default_allocator_traits<std::allocator<std::_List_node<PathEdge,void *> > >::select_on_container_copy_construction
PUBLIC	??0?$list@VPathEdge@@V?$allocator@VPathEdge@@@std@@@std@@QAE@ABV01@@Z ; std::list<PathEdge,std::allocator<PathEdge> >::list<PathEdge,std::allocator<PathEdge> >
PUBLIC	??1?$list@VPathEdge@@V?$allocator@VPathEdge@@@std@@@std@@QAE@XZ ; std::list<PathEdge,std::allocator<PathEdge> >::~list<PathEdge,std::allocator<PathEdge> >
PUBLIC	?begin@?$list@VPathEdge@@V?$allocator@VPathEdge@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@@2@XZ ; std::list<PathEdge,std::allocator<PathEdge> >::begin
PUBLIC	?end@?$list@VPathEdge@@V?$allocator@VPathEdge@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@@2@XZ ; std::list<PathEdge,std::allocator<PathEdge> >::end
PUBLIC	?_Unchecked_begin@?$list@VPathEdge@@V?$allocator@VPathEdge@@@std@@@std@@QBE?AV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@U_Iterator_base0@2@@2@XZ ; std::list<PathEdge,std::allocator<PathEdge> >::_Unchecked_begin
PUBLIC	?_Unchecked_end@?$list@VPathEdge@@V?$allocator@VPathEdge@@@std@@@std@@QBE?AV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@U_Iterator_base0@2@@2@XZ ; std::list<PathEdge,std::allocator<PathEdge> >::_Unchecked_end
PUBLIC	?empty@?$list@VPathEdge@@V?$allocator@VPathEdge@@@std@@@std@@QBE_NXZ ; std::list<PathEdge,std::allocator<PathEdge> >::empty
PUBLIC	?front@?$list@VPathEdge@@V?$allocator@VPathEdge@@@std@@@std@@QAEAAVPathEdge@@XZ ; std::list<PathEdge,std::allocator<PathEdge> >::front
PUBLIC	?pop_front@?$list@VPathEdge@@V?$allocator@VPathEdge@@@std@@@std@@QAEXXZ ; std::list<PathEdge,std::allocator<PathEdge> >::pop_front
PUBLIC	?_Unchecked_erase@?$list@VPathEdge@@V?$allocator@VPathEdge@@@std@@@std@@AAEPAU?$_List_node@VPathEdge@@PAX@2@QAU32@@Z ; std::list<PathEdge,std::allocator<PathEdge> >::_Unchecked_erase
PUBLIC	?_Tidy@?$list@VPathEdge@@V?$allocator@VPathEdge@@@std@@@std@@AAEXXZ ; std::list<PathEdge,std::allocator<PathEdge> >::_Tidy
PUBLIC	?_Getal@?$list@VPathEdge@@V?$allocator@VPathEdge@@@std@@@std@@AAEAAV?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@2@XZ ; std::list<PathEdge,std::allocator<PathEdge> >::_Getal
PUBLIC	?_Getal@?$list@VPathEdge@@V?$allocator@VPathEdge@@@std@@@std@@ABEABV?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@2@XZ ; std::list<PathEdge,std::allocator<PathEdge> >::_Getal
PUBLIC	??0?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@QAE@XZ ; std::_List_val<std::_List_simple_types<PathEdge> >::_List_val<std::_List_simple_types<PathEdge> >
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@std@@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@2@$00@std@@QAEAAV?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@2@XZ ; std::_Compressed_pair<std::allocator<std::_List_node<PathEdge,void *> >,std::_List_val<std::_List_simple_types<PathEdge> >,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@std@@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@2@$00@std@@QBEABV?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@2@XZ ; std::_Compressed_pair<std::allocator<std::_List_node<PathEdge,void *> >,std::_List_val<std::_List_simple_types<PathEdge> >,1>::_Get_first
PUBLIC	??0Goal_FollowPath@@QAE@PAVRaven_Bot@@V?$list@VPathEdge@@V?$allocator@VPathEdge@@@std@@@std@@@Z ; Goal_FollowPath::Goal_FollowPath
PUBLIC	?Activate@Goal_FollowPath@@UAEXXZ		; Goal_FollowPath::Activate
PUBLIC	?Process@Goal_FollowPath@@UAEHXZ		; Goal_FollowPath::Process
PUBLIC	?Render@Goal_FollowPath@@UAEXXZ			; Goal_FollowPath::Render
PUBLIC	?Terminate@Goal_FollowPath@@UAEXXZ		; Goal_FollowPath::Terminate
PUBLIC	??1Goal_FollowPath@@UAE@XZ			; Goal_FollowPath::~Goal_FollowPath
PUBLIC	??_GGoal_FollowPath@@UAEPAXI@Z			; Goal_FollowPath::`scalar deleting destructor'
PUBLIC	??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@XZ ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<PathEdge> >,std::_Iterator_base12>::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<PathEdge> >,std::_Iterator_base12>
PUBLIC	??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU?$_List_node@VPathEdge@@PAX@1@PBV?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@1@@Z ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<PathEdge> >,std::_Iterator_base12>::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<PathEdge> >,std::_Iterator_base12>
PUBLIC	??1?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@XZ ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<PathEdge> >,std::_Iterator_base12>::~_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<PathEdge> >,std::_Iterator_base12>
PUBLIC	??4?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@U_Iterator_base12@2@@std@@QAEAAV01@$$QAV01@@Z ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<PathEdge> >,std::_Iterator_base12>::operator=
PUBLIC	??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@@std@@QAE@XZ ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<PathEdge> > >::_List_const_iterator<std::_List_val<std::_List_simple_types<PathEdge> > >
PUBLIC	??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@@std@@QAE@PAU?$_List_node@VPathEdge@@PAX@1@PBV?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@1@@Z ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<PathEdge> > >::_List_const_iterator<std::_List_val<std::_List_simple_types<PathEdge> > >
PUBLIC	??D?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@@std@@QBEABVPathEdge@@XZ ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<PathEdge> > >::operator*
PUBLIC	??E?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<PathEdge> > >::operator++
PUBLIC	??8?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<PathEdge> > >::operator==
PUBLIC	??9?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<PathEdge> > >::operator!=
PUBLIC	??1?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@@std@@QAE@XZ ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<PathEdge> > >::~_List_const_iterator<std::_List_val<std::_List_simple_types<PathEdge> > >
PUBLIC	??4?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@@std@@QAEAAV01@$$QAV01@@Z ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<PathEdge> > >::operator=
PUBLIC	??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@@std@@QAE@XZ ; std::_List_iterator<std::_List_val<std::_List_simple_types<PathEdge> > >::_List_iterator<std::_List_val<std::_List_simple_types<PathEdge> > >
PUBLIC	??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@@std@@QAE@PAU?$_List_node@VPathEdge@@PAX@1@PBV?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@1@@Z ; std::_List_iterator<std::_List_val<std::_List_simple_types<PathEdge> > >::_List_iterator<std::_List_val<std::_List_simple_types<PathEdge> > >
PUBLIC	??D?$_List_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@@std@@QBEAAVPathEdge@@XZ ; std::_List_iterator<std::_List_val<std::_List_simple_types<PathEdge> > >::operator*
PUBLIC	??C?$_List_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@@std@@QBEPAVPathEdge@@XZ ; std::_List_iterator<std::_List_val<std::_List_simple_types<PathEdge> > >::operator->
PUBLIC	??E?$_List_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_List_iterator<std::_List_val<std::_List_simple_types<PathEdge> > >::operator++
PUBLIC	??1?$_List_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@@std@@QAE@XZ ; std::_List_iterator<std::_List_val<std::_List_simple_types<PathEdge> > >::~_List_iterator<std::_List_val<std::_List_simple_types<PathEdge> > >
PUBLIC	??4?$_List_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@@std@@QAEAAV01@$$QAV01@@Z ; std::_List_iterator<std::_List_val<std::_List_simple_types<PathEdge> > >::operator=
PUBLIC	?pointer_to@?$pointer_traits@PAVPathEdge@@@std@@SAPAVPathEdge@@AAV3@@Z ; std::pointer_traits<PathEdge *>::pointer_to
PUBLIC	?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z ; std::allocator<std::_Container_proxy>::allocate
PUBLIC	??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@QAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
PUBLIC	??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@AAV?$allocator@U_Container_proxy@std@@@1@AAU_Container_base12@1@@Z ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
PUBLIC	??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
PUBLIC	??$addressof@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@@std@@YAPAV?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@0@AAV10@@Z ; std::addressof<std::_List_val<std::_List_simple_types<PathEdge> > >
PUBLIC	??$?0U?$_List_node@VPathEdge@@PAX@std@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::_List_node<PathEdge,void *> >
PUBLIC	??$?0V?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@std@@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@$$QAV?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@1@@Z ; std::_Compressed_pair<std::allocator<std::_List_node<PathEdge,void *> >,std::_List_val<std::_List_simple_types<PathEdge> >,1>::_Compressed_pair<std::allocator<std::_List_node<PathEdge,void *> >,std::_List_val<std::_List_simple_types<PathEdge> >,1><std::allocator<std::_List_node<PathEdge,void *> > >
PUBLIC	??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU?$_List_node@VPathEdge@@PAX@1@PBV?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@1@@Z ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<PathEdge> >,std::_Iterator_base0>::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<PathEdge> >,std::_Iterator_base0>
PUBLIC	??D?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@U_Iterator_base0@2@@std@@QBEABVPathEdge@@XZ ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<PathEdge> >,std::_Iterator_base0>::operator*
PUBLIC	??E?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<PathEdge> >,std::_Iterator_base0>::operator++
PUBLIC	??8?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@U_Iterator_base0@2@@std@@QBE_NABV01@@Z ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<PathEdge> >,std::_Iterator_base0>::operator==
PUBLIC	??9?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@U_Iterator_base0@2@@std@@QBE_NABV01@@Z ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<PathEdge> >,std::_Iterator_base0>::operator!=
PUBLIC	??$_Construct_range_unchecked@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@U_Iterator_base0@2@@std@@@?$list@VPathEdge@@V?$allocator@VPathEdge@@@std@@@std@@AAEXV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@U_Iterator_base0@2@@1@0@Z ; std::list<PathEdge,std::allocator<PathEdge> >::_Construct_range_unchecked<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<PathEdge> >,std::_Iterator_base0> >
PUBLIC	??$_Min_value@I@std@@YAABIABI0@Z		; std::_Min_value<unsigned int>
PUBLIC	??$_Unfancy@D@std@@YAPADPAD@Z			; std::_Unfancy<char>
PUBLIC	??$?0D@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@D@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char>
PUBLIC	??$_Unfancy@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@PAU10@@Z ; std::_Unfancy<std::_Container_proxy>
PUBLIC	??$addressof@U_Container_base12@std@@@std@@YAPAU_Container_base12@0@AAU10@@Z ; std::addressof<std::_Container_base12>
PUBLIC	??$_Construct_in_place@U_Container_proxy@std@@PAU_Container_base12@2@@std@@YAXAAU_Container_proxy@0@$$QAPAU_Container_base12@0@@Z ; std::_Construct_in_place<std::_Container_proxy,std::_Container_base12 *>
PUBLIC	??$addressof@VPathEdge@@@std@@YAPAVPathEdge@@AAV1@@Z ; std::addressof<PathEdge>
PUBLIC	??$_Free_non_head@V?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@std@@@?$_List_node@VPathEdge@@PAX@std@@SAXAAV?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@1@PAU01@@Z ; std::_List_node<PathEdge,void *>::_Free_non_head<std::allocator<std::_List_node<PathEdge,void *> > >
PUBLIC	??$_Freenode0@V?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@std@@@?$_List_node@VPathEdge@@PAX@std@@SAXAAV?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@1@PAU01@@Z ; std::_List_node<PathEdge,void *>::_Freenode0<std::allocator<std::_List_node<PathEdge,void *> > >
PUBLIC	??$_Freenode@V?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@std@@@?$_List_node@VPathEdge@@PAX@std@@SAXAAV?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@1@PAU01@@Z ; std::_List_node<PathEdge,void *>::_Freenode<std::allocator<std::_List_node<PathEdge,void *> > >
PUBLIC	??$?0U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::_List_node<Goal<Raven_Bot> *,void *> >
PUBLIC	??$?0$$V@?$_Compressed_pair@V?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@std@@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<std::_List_node<Goal<Raven_Bot> *,void *> >,std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> >,1>::_Compressed_pair<std::allocator<std::_List_node<Goal<Raven_Bot> *,void *> >,std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> >,1><>
PUBLIC	??$_Destroy_in_place@PAD@std@@YAXAAPAD@Z	; std::_Destroy_in_place<char *>
PUBLIC	??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
PUBLIC	??$_Deallocate@$07$0A@@std@@YAXPAXI@Z		; std::_Deallocate<8,0>
PUBLIC	??$_Get_size_of_n@$07@std@@YAII@Z		; std::_Get_size_of_n<8>
PUBLIC	??$_Construct_in_place@PAU?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@0@0@Z ; std::_Construct_in_place<std::_List_node<Goal<Raven_Bot> *,void *> *,std::_List_node<Goal<Raven_Bot> *,void *> * &>
PUBLIC	??$_Free_non_head@V?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@std@@@?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@SAXAAV?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@1@PAU01@@Z ; std::_List_node<Goal<Raven_Bot> *,void *>::_Free_non_head<std::allocator<std::_List_node<Goal<Raven_Bot> *,void *> > >
PUBLIC	??$_Freenode0@V?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@std@@@?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@SAXAAV?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@1@PAU01@@Z ; std::_List_node<Goal<Raven_Bot> *,void *>::_Freenode0<std::allocator<std::_List_node<Goal<Raven_Bot> *,void *> > >
PUBLIC	??$_Get_size_of_n@$0M@@std@@YAII@Z		; std::_Get_size_of_n<12>
PUBLIC	??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@XZ ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> >,std::_Iterator_base12>::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> >,std::_Iterator_base12>
PUBLIC	??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@1@PBV?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@1@@Z ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> >,std::_Iterator_base12>::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> >,std::_Iterator_base12>
PUBLIC	??1?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@XZ ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> >,std::_Iterator_base12>::~_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> >,std::_Iterator_base12>
PUBLIC	??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@ABV01@@Z ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> >,std::_Iterator_base12>::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> >,std::_Iterator_base12>
PUBLIC	??4?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@U_Iterator_base12@2@@std@@QAEAAV01@$$QAV01@@Z ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> >,std::_Iterator_base12>::operator=
PUBLIC	??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@QAE@XZ ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> > >::_List_const_iterator<std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> > >
PUBLIC	??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@QAE@PAU?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@1@PBV?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@1@@Z ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> > >::_List_const_iterator<std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> > >
PUBLIC	??D?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@QBEABQAV?$Goal@VRaven_Bot@@@@XZ ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> > >::operator*
PUBLIC	??E?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> > >::operator++
PUBLIC	??F?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> > >::operator--
PUBLIC	??8?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> > >::operator==
PUBLIC	??9?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> > >::operator!=
PUBLIC	??1?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@QAE@XZ ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> > >::~_List_const_iterator<std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> > >
PUBLIC	??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@QAE@ABV01@@Z ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> > >::_List_const_iterator<std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> > >
PUBLIC	??4?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@QAEAAV01@$$QAV01@@Z ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> > >::operator=
PUBLIC	??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@QAE@PAU?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@1@PBV?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@1@@Z ; std::_List_iterator<std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> > >::_List_iterator<std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> > >
PUBLIC	??D?$_List_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@QBEAAPAV?$Goal@VRaven_Bot@@@@XZ ; std::_List_iterator<std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> > >::operator*
PUBLIC	??E?$_List_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_List_iterator<std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> > >::operator++
PUBLIC	??1?$_List_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@QAE@XZ ; std::_List_iterator<std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> > >::~_List_iterator<std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> > >
PUBLIC	??0?$reverse_iterator@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@@std@@QAE@XZ ; std::reverse_iterator<std::_List_const_iterator<std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> > > >::reverse_iterator<std::_List_const_iterator<std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> > > >
PUBLIC	??0?$reverse_iterator@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@@std@@QAE@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@1@@Z ; std::reverse_iterator<std::_List_const_iterator<std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> > > >::reverse_iterator<std::_List_const_iterator<std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> > > >
PUBLIC	?base@?$reverse_iterator@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@@std@@QBE?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@2@XZ ; std::reverse_iterator<std::_List_const_iterator<std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> > > >::base
PUBLIC	??D?$reverse_iterator@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@@std@@QBEABQAV?$Goal@VRaven_Bot@@@@XZ ; std::reverse_iterator<std::_List_const_iterator<std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> > > >::operator*
PUBLIC	??E?$reverse_iterator@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::reverse_iterator<std::_List_const_iterator<std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> > > >::operator++
PUBLIC	??1?$reverse_iterator@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@@std@@QAE@XZ ; std::reverse_iterator<std::_List_const_iterator<std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> > > >::~reverse_iterator<std::_List_const_iterator<std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> > > >
PUBLIC	??4?$reverse_iterator@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@@std@@QAEAAV01@$$QAV01@@Z ; std::reverse_iterator<std::_List_const_iterator<std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> > > >::operator=
PUBLIC	??$?9V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@V01@@std@@YA_NABV?$reverse_iterator@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@@0@0@Z ; std::operator!=<std::_List_const_iterator<std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> > >,std::_List_const_iterator<std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> > > >
PUBLIC	??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@QAU_Container_proxy@0@@Z ; std::_Deallocate_plain<std::allocator<std::_Container_proxy> >
PUBLIC	??$forward@V?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@std@@@std@@YA$$QAV?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@0@AAV10@@Z ; std::forward<std::allocator<std::_List_node<PathEdge,void *> > >
PUBLIC	??0?$_List_node_insert_op@V?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@1@@Z ; std::_List_node_insert_op<std::allocator<std::_List_node<PathEdge,void *> > >::_List_node_insert_op<std::allocator<std::_List_node<PathEdge,void *> > >
PUBLIC	??1?$_List_node_insert_op@V?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@std@@@std@@QAE@XZ ; std::_List_node_insert_op<std::allocator<std::_List_node<PathEdge,void *> > >::~_List_node_insert_op<std::allocator<std::_List_node<PathEdge,void *> > >
PUBLIC	??$_Append_range_unchecked@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@U_Iterator_base0@2@@std@@V12@@?$_List_node_insert_op@V?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@std@@@std@@QAEXV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@U_Iterator_base0@2@@1@V21@@Z ; std::_List_node_insert_op<std::allocator<std::_List_node<PathEdge,void *> > >::_Append_range_unchecked<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<PathEdge> >,std::_Iterator_base0>,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<PathEdge> >,std::_Iterator_base0> >
PUBLIC	??$_Attach_head@U?$_List_simple_types@VPathEdge@@@std@@@?$_List_node_insert_op@V?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@std@@@std@@QAEXAAV?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@1@@Z ; std::_List_node_insert_op<std::allocator<std::_List_node<PathEdge,void *> > >::_Attach_head<std::_List_simple_types<PathEdge> >
PUBLIC	??$addressof@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@AAU10@@Z ; std::addressof<std::_Container_proxy>
PUBLIC	??$forward@PAU_Container_base12@std@@@std@@YA$$QAPAU_Container_base12@0@AAPAU10@@Z ; std::forward<std::_Container_base12 *>
PUBLIC	??$_Destroy_in_place@PAU?$_List_node@VPathEdge@@PAX@std@@@std@@YAXAAPAU?$_List_node@VPathEdge@@PAX@0@@Z ; std::_Destroy_in_place<std::_List_node<PathEdge,void *> *>
PUBLIC	??$destroy@VPathEdge@@@?$_Default_allocator_traits@V?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@1@QAVPathEdge@@@Z ; std::_Default_allocator_traits<std::allocator<std::_List_node<PathEdge,void *> > >::destroy<PathEdge>
PUBLIC	??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
PUBLIC	??$addressof@PAU?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@std@@YAPAPAU?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@0@AAPAU10@@Z ; std::addressof<std::_List_node<Goal<Raven_Bot> *,void *> *>
PUBLIC	??$forward@AAPAU?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@std@@YAAAPAU?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@0@AAPAU10@@Z ; std::forward<std::_List_node<Goal<Raven_Bot> *,void *> * &>
PUBLIC	??$_Freenode@V?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@std@@@?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@SAXAAV?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@1@PAU01@@Z ; std::_List_node<Goal<Raven_Bot> *,void *>::_Freenode<std::allocator<std::_List_node<Goal<Raven_Bot> *,void *> > >
PUBLIC	??$_Destroy_in_place@PAU?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@std@@YAXAAPAU?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@0@@Z ; std::_Destroy_in_place<std::_List_node<Goal<Raven_Bot> *,void *> *>
PUBLIC	??$_Construct_in_place@PAU?$_List_node@VPathEdge@@PAX@std@@$$T@std@@YAXAAPAU?$_List_node@VPathEdge@@PAX@0@$$QA$$T@Z ; std::_Construct_in_place<std::_List_node<PathEdge,void *> *,std::nullptr_t>
PUBLIC	??$exchange@PAU?$_List_node@VPathEdge@@PAX@std@@AAPAU12@@std@@YAPAU?$_List_node@VPathEdge@@PAX@0@AAPAU10@0@Z ; std::exchange<std::_List_node<PathEdge,void *> *,std::_List_node<PathEdge,void *> * &>
PUBLIC	?pointer_to@?$pointer_traits@PAU?$_List_node@VPathEdge@@PAX@std@@@std@@SAPAU?$_List_node@VPathEdge@@PAX@2@AAU32@@Z ; std::pointer_traits<std::_List_node<PathEdge,void *> *>::pointer_to
PUBLIC	??$_Emplace@ABQAV?$Goal@VRaven_Bot@@@@@?$list@PAV?$Goal@VRaven_Bot@@@@V?$allocator@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@QAEPAU?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@1@QAU21@ABQAV?$Goal@VRaven_Bot@@@@@Z ; std::list<Goal<Raven_Bot> *,std::allocator<Goal<Raven_Bot> *> >::_Emplace<Goal<Raven_Bot> * const &>
PUBLIC	??$addressof@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@YAPAV?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@0@AAV10@@Z ; std::addressof<std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> > >
PUBLIC	??$addressof@U?$_List_node@VPathEdge@@PAX@std@@@std@@YAPAU?$_List_node@VPathEdge@@PAX@0@AAU10@@Z ; std::addressof<std::_List_node<PathEdge,void *> >
PUBLIC	??$addressof@$$CBV?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@YAPBV?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@0@ABV10@@Z ; std::addressof<std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> > const >
PUBLIC	??$?8V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@V01@@std@@YA_NABV?$reverse_iterator@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@@0@0@Z ; std::operator==<std::_List_const_iterator<std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> > >,std::_List_const_iterator<std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> > > >
PUBLIC	?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@2@QAU_Container_proxy@2@I@Z ; std::_Default_allocator_traits<std::allocator<std::_Container_proxy> >::deallocate
PUBLIC	??0?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@1@@Z ; std::_Alloc_construct_ptr<std::allocator<std::_List_node<PathEdge,void *> > >::_Alloc_construct_ptr<std::allocator<std::_List_node<PathEdge,void *> > >
PUBLIC	?_Release@?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@std@@@std@@QAEPAU?$_List_node@VPathEdge@@PAX@2@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_List_node<PathEdge,void *> > >::_Release
PUBLIC	?_Allocate@?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@std@@@std@@QAEXXZ ; std::_Alloc_construct_ptr<std::allocator<std::_List_node<PathEdge,void *> > >::_Allocate
PUBLIC	??1?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@std@@@std@@QAE@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_List_node<PathEdge,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_List_node<PathEdge,void *> > >
PUBLIC	??$construct@VPathEdge@@ABV1@@?$_Default_allocator_traits@V?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@1@QAVPathEdge@@ABV3@@Z ; std::_Default_allocator_traits<std::allocator<std::_List_node<PathEdge,void *> > >::construct<PathEdge,PathEdge const &>
PUBLIC	??$_Construct_in_place@PAU?$_List_node@VPathEdge@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_List_node@VPathEdge@@PAX@0@0@Z ; std::_Construct_in_place<std::_List_node<PathEdge,void *> *,std::_List_node<PathEdge,void *> * &>
PUBLIC	??$exchange@II@std@@YAIAAI$$QAI@Z		; std::exchange<unsigned int,unsigned int>
PUBLIC	??$addressof@PAV?$Goal@VRaven_Bot@@@@@std@@YAPAPAV?$Goal@VRaven_Bot@@@@AAPAV1@@Z ; std::addressof<Goal<Raven_Bot> *>
PUBLIC	??$destroy@PAV?$Goal@VRaven_Bot@@@@@?$_Default_allocator_traits@V?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@1@QAPAV?$Goal@VRaven_Bot@@@@@Z ; std::_Default_allocator_traits<std::allocator<std::_List_node<Goal<Raven_Bot> *,void *> > >::destroy<Goal<Raven_Bot> *>
PUBLIC	??$addressof@PAU?$_List_node@VPathEdge@@PAX@std@@@std@@YAPAPAU?$_List_node@VPathEdge@@PAX@0@AAPAU10@@Z ; std::addressof<std::_List_node<PathEdge,void *> *>
PUBLIC	??$forward@$$T@std@@YA$$QA$$TAA$$T@Z		; std::forward<std::nullptr_t>
PUBLIC	??0?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@1@@Z ; std::_Alloc_construct_ptr<std::allocator<std::_List_node<Goal<Raven_Bot> *,void *> > >::_Alloc_construct_ptr<std::allocator<std::_List_node<Goal<Raven_Bot> *,void *> > >
PUBLIC	?_Allocate@?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@std@@@std@@QAEXXZ ; std::_Alloc_construct_ptr<std::allocator<std::_List_node<Goal<Raven_Bot> *,void *> > >::_Allocate
PUBLIC	??1?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@std@@@std@@QAE@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_List_node<Goal<Raven_Bot> *,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_List_node<Goal<Raven_Bot> *,void *> > >
PUBLIC	??1?$_List_node_emplace_op2@V?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@std@@@std@@QAE@XZ ; std::_List_node_emplace_op2<std::allocator<std::_List_node<Goal<Raven_Bot> *,void *> > >::~_List_node_emplace_op2<std::allocator<std::_List_node<Goal<Raven_Bot> *,void *> > >
PUBLIC	?_Transfer_before@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@std@@@std@@QAEPAU?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@2@QAU32@@Z ; std::_List_node_emplace_op2<std::allocator<std::_List_node<Goal<Raven_Bot> *,void *> > >::_Transfer_before
PUBLIC	??$forward@ABQAV?$Goal@VRaven_Bot@@@@@std@@YAABQAV?$Goal@VRaven_Bot@@@@ABQAV1@@Z ; std::forward<Goal<Raven_Bot> * const &>
PUBLIC	??$?0ABQAV?$Goal@VRaven_Bot@@@@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@1@ABQAV?$Goal@VRaven_Bot@@@@@Z ; std::_List_node_emplace_op2<std::allocator<std::_List_node<Goal<Raven_Bot> *,void *> > >::_List_node_emplace_op2<std::allocator<std::_List_node<Goal<Raven_Bot> *,void *> > ><Goal<Raven_Bot> * const &>
PUBLIC	??$_Construct_in_place@PAU?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@0@ABQAU10@@Z ; std::_Construct_in_place<std::_List_node<Goal<Raven_Bot> *,void *> *,std::_List_node<Goal<Raven_Bot> *,void *> * const &>
PUBLIC	??$exchange@PAU?$_List_node@VPathEdge@@PAX@std@@$$T@std@@YAPAU?$_List_node@VPathEdge@@PAX@0@AAPAU10@$$QA$$T@Z ; std::exchange<std::_List_node<PathEdge,void *> *,std::nullptr_t>
PUBLIC	??$_Get_size_of_n@$0DA@@std@@YAII@Z		; std::_Get_size_of_n<48>
PUBLIC	??$forward@ABVPathEdge@@@std@@YAABVPathEdge@@ABV1@@Z ; std::forward<PathEdge const &>
PUBLIC	??$forward@AAPAU?$_List_node@VPathEdge@@PAX@std@@@std@@YAAAPAU?$_List_node@VPathEdge@@PAX@0@AAPAU10@@Z ; std::forward<std::_List_node<PathEdge,void *> * &>
PUBLIC	??$construct@PAV?$Goal@VRaven_Bot@@@@ABQAV1@@?$_Default_allocator_traits@V?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@1@QAPAV?$Goal@VRaven_Bot@@@@ABQAV3@@Z ; std::_Default_allocator_traits<std::allocator<std::_List_node<Goal<Raven_Bot> *,void *> > >::construct<Goal<Raven_Bot> *,Goal<Raven_Bot> * const &>
PUBLIC	??$forward@ABQAU?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@std@@YAABQAU?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@0@ABQAU10@@Z ; std::forward<std::_List_node<Goal<Raven_Bot> *,void *> * const &>
PUBLIC	??_7exception@std@@6B@				; std::exception::`vftable'
PUBLIC	??_C@_0BC@EOODALEL@Unknown?5exception@		; `string'
PUBLIC	??_7bad_alloc@std@@6B@				; std::bad_alloc::`vftable'
PUBLIC	??_7bad_array_new_length@std@@6B@		; std::bad_array_new_length::`vftable'
PUBLIC	??_C@_0BF@KINCDENJ@bad?5array?5new?5length@	; `string'
PUBLIC	__TI3?AVbad_array_new_length@std@@
PUBLIC	__CTA3?AVbad_array_new_length@std@@
PUBLIC	??_R0?AVbad_array_new_length@std@@@8		; std::bad_array_new_length `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVbad_alloc@std@@@8			; std::bad_alloc `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
PUBLIC	??_C@_0BB@FCMFBGOM@invalid?5argument@		; `string'
PUBLIC	??_C@_02DKCKIIND@?$CFs@				; `string'
PUBLIC	??_C@_0GI@FJIKDGOA@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@ ; `string'
PUBLIC	??_C@_1NA@CDBIFGMM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	??_C@_1EK@NIFDJFDG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAd?$AAj?$AAu?$AAs?$AAt?$AA_?$AAm?$AAa@ ; `string'
PUBLIC	??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@ ; `string'
PUBLIC	??_C@_0BJ@LFDBABJJ@ITERATOR?5LIST?5CORRUPTED?$CB@ ; `string'
PUBLIC	??_C@_1EE@KLDMFDFL@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAI?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA_@ ; `string'
PUBLIC	??_C@_1DG@PLBPCAEM@?$AA?$CC?$AAI?$AAT?$AAE?$AAR?$AAA?$AAT?$AAO?$AAR?$AA?5?$AAL?$AAI?$AAS?$AAT?$AA?5@ ; `string'
PUBLIC	??_7runtime_error@std@@6B@			; std::runtime_error::`vftable'
PUBLIC	??_R0?AVruntime_error@std@@@8			; std::runtime_error `RTTI Type Descriptor'
PUBLIC	__CT??_R0?AVruntime_error@std@@@8??0runtime_error@std@@QAE@ABV01@@Z12
PUBLIC	??_7?$Goal@VRaven_Bot@@@@6B@			; Goal<Raven_Bot>::`vftable'
PUBLIC	??_7?$Goal_Composite@VRaven_Bot@@@@6B@		; Goal_Composite<Raven_Bot>::`vftable'
PUBLIC	??_7Goal_FollowPath@@6B@			; Goal_FollowPath::`vftable'
PUBLIC	__TI2?AVruntime_error@std@@
PUBLIC	__CTA2?AVruntime_error@std@@
PUBLIC	??_C@_0CC@BNIKFPII@pop_front?5called?5on?5empty?5list?$DM@ ; `string'
PUBLIC	??_C@_0GF@GNCHBLDJ@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@ ; `string'
PUBLIC	??_C@_1MK@DPPFMAIA@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	??_C@_1JG@GEBLOLD@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAl?$AAi?$AAs?$AAt?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs@ ; `string'
PUBLIC	??_C@_1EI@LCNEIDGO@?$AA?$CC?$AAp?$AAo?$AAp?$AA_?$AAf?$AAr?$AAo?$AAn?$AAt?$AA?5?$AAc?$AAa?$AAl?$AAl@ ; `string'
PUBLIC	??_C@_0CB@OHIHCHGJ@Cannot?5add?5goals?5to?5atomic?5goal@ ; `string'
PUBLIC	?id@?$codecvt@DDU_Mbstatet@@@std@@2V0locale@2@A	; std::codecvt<char,char,_Mbstatet>::id
PUBLIC	?id@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@2V0locale@2@A ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::id
PUBLIC	?id@?$numpunct@D@std@@2V0locale@2@A		; std::numpunct<char>::id
PUBLIC	??_C@_0BM@BALDKKHE@list?5iterators?5incompatible@ ; `string'
PUBLIC	??_C@_1NO@HMALCLJG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAL?$AAi?$AAs?$AAt?$AA_?$AAc?$AAo?$AAn?$AAs@ ; `string'
PUBLIC	??_C@_1DM@KDLJAKOP@?$AA?$CC?$AAl?$AAi?$AAs?$AAt?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AAs@ ; `string'
PUBLIC	??_C@_0DB@ENBCPNKO@cannot?5increment?5value?9initiali@ ; `string'
PUBLIC	??_C@_1NO@NMPGMCFD@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAL?$AAi?$AAs?$AAt?$AA_?$AAc?$AAo?$AAn?$AAs@ ; `string'
PUBLIC	??_C@_1GG@JLMAGPNK@?$AA?$CC?$AAc?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAi?$AAn?$AAc?$AAr?$AAe?$AAm?$AAe@ ; `string'
PUBLIC	??_C@_0CD@PMFMCEG@cannot?5increment?5end?5list?5itera@ ; `string'
PUBLIC	??_C@_1EK@OKKCFDJN@?$AA?$CC?$AAc?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAi?$AAn?$AAc?$AAr?$AAe?$AAm?$AAe@ ; `string'
PUBLIC	??_C@_0DD@MBIHGLJE@cannot?5dereference?5value?9initia@ ; `string'
PUBLIC	??_C@_1NM@GONFAHHJ@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAL?$AAi?$AAs?$AAt?$AA_?$AAc?$AAo?$AAn?$AAs@ ; `string'
PUBLIC	??_C@_1GK@NKIMOCIG@?$AA?$CC?$AAc?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr@ ; `string'
PUBLIC	??_C@_0CF@JCBFHMPL@cannot?5dereference?5end?5list?5ite@ ; `string'
PUBLIC	??_C@_1EO@CNEFBDCF@?$AA?$CC?$AAc?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr@ ; `string'
PUBLIC	?id@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@2V0locale@2@A ; std::num_get<char,std::istreambuf_iterator<char,std::char_traits<char> > >::id
PUBLIC	??_C@_1NC@NFPCHBHP@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAl?$AAi?$AAs?$AAt?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs@ ; `string'
PUBLIC	??_C@_1PM@NGMJNEOB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAL?$AAi?$AAs?$AAt?$AA_?$AAc?$AAo?$AAn?$AAs@ ; `string'
PUBLIC	??_C@_0DB@MCPEHPCC@cannot?5decrement?5value?9initiali@ ; `string'
PUBLIC	??_C@_1PM@IFAGIBOF@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAL?$AAi?$AAs?$AAt?$AA_?$AAc?$AAo?$AAn?$AAs@ ; `string'
PUBLIC	??_C@_1GG@FLDKPFOH@?$AA?$CC?$AAc?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAc?$AAr?$AAe?$AAm?$AAe@ ; `string'
PUBLIC	??_C@_0CF@BAAFPBMN@cannot?5decrement?5begin?5list?5ite@ ; `string'
PUBLIC	??_C@_1EO@PPPLIDNC@?$AA?$CC?$AAc?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAc?$AAr?$AAe?$AAm?$AAe@ ; `string'
PUBLIC	??_C@_1PM@HGDEDNCE@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAL?$AAi?$AAs?$AAt?$AA_?$AAc?$AAo?$AAn?$AAs@ ; `string'
PUBLIC	??_C@_1PK@KKMOJEL@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAL?$AAi?$AAs?$AAt?$AA_?$AAc?$AAo?$AAn?$AAs@ ; `string'
PUBLIC	??_C@_0BB@MOGOBHAF@list?$DMT?$DO?5too?5long@	; `string'
PUBLIC	??_R4exception@std@@6B@				; std::exception::`RTTI Complete Object Locator'
PUBLIC	??_R3exception@std@@8				; std::exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2exception@std@@8				; std::exception::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_alloc@std@@6B@				; std::bad_alloc::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_alloc@std@@8				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_alloc@std@@8				; std::bad_alloc::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_alloc@std@@8			; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_array_new_length@std@@6B@		; std::bad_array_new_length::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_array_new_length@std@@8	; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4runtime_error@std@@6B@			; std::runtime_error::`RTTI Complete Object Locator'
PUBLIC	??_R3runtime_error@std@@8			; std::runtime_error::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2runtime_error@std@@8			; std::runtime_error::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@runtime_error@std@@8		; std::runtime_error::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4Goal_FollowPath@@6B@			; Goal_FollowPath::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVGoal_FollowPath@@@8			; Goal_FollowPath `RTTI Type Descriptor'
PUBLIC	??_R3Goal_FollowPath@@8				; Goal_FollowPath::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2Goal_FollowPath@@8				; Goal_FollowPath::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@Goal_FollowPath@@8		; Goal_FollowPath::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@?$Goal_Composite@VRaven_Bot@@@@8	; Goal_Composite<Raven_Bot>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$Goal_Composite@VRaven_Bot@@@@@8	; Goal_Composite<Raven_Bot> `RTTI Type Descriptor'
PUBLIC	??_R3?$Goal_Composite@VRaven_Bot@@@@8		; Goal_Composite<Raven_Bot>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$Goal_Composite@VRaven_Bot@@@@8		; Goal_Composite<Raven_Bot>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$Goal@VRaven_Bot@@@@8		; Goal<Raven_Bot>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$Goal@VRaven_Bot@@@@@8			; Goal<Raven_Bot> `RTTI Type Descriptor'
PUBLIC	??_R3?$Goal@VRaven_Bot@@@@8			; Goal<Raven_Bot>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$Goal@VRaven_Bot@@@@8			; Goal<Raven_Bot>::`RTTI Base Class Array'
PUBLIC	??_R4?$Goal_Composite@VRaven_Bot@@@@6B@		; Goal_Composite<Raven_Bot>::`RTTI Complete Object Locator'
PUBLIC	??_R4?$Goal@VRaven_Bot@@@@6B@			; Goal<Raven_Bot>::`RTTI Complete Object Locator'
PUBLIC	__real@0010000000000000
PUBLIC	__real@00800000
PUBLIC	__real@3cb0000000000000
PUBLIC	__real@3fd99999a0000000
PUBLIC	__real@3ff0000000000000
PUBLIC	__real@4008000000000000
PUBLIC	__real@4014000000000000
PUBLIC	__real@4024000000000000
PUBLIC	__real@402e000000000000
PUBLIC	__real@7f7fffff
PUBLIC	__real@7fefffffffffffff
PUBLIC	__xmm@80000000000000008000000000000000
EXTRN	__purecall:PROC
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	__invalid_parameter:PROC
EXTRN	__CrtDbgReport:PROC
EXTRN	??0_Lockit@std@@QAE@H@Z:PROC			; std::_Lockit::_Lockit
EXTRN	??1_Lockit@std@@QAE@XZ:PROC			; std::_Lockit::~_Lockit
EXTRN	_sqrt:PROC
EXTRN	___std_exception_copy:PROC
EXTRN	___std_exception_destroy:PROC
EXTRN	??_Eexception@std@@UAEPAXI@Z:PROC		; std::exception::`vector deleting destructor'
EXTRN	??_Ebad_alloc@std@@UAEPAXI@Z:PROC		; std::bad_alloc::`vector deleting destructor'
EXTRN	??_Ebad_array_new_length@std@@UAEPAXI@Z:PROC	; std::bad_array_new_length::`vector deleting destructor'
EXTRN	?_Xlength_error@std@@YAXPBD@Z:PROC		; std::_Xlength_error
EXTRN	__imp__Ellipse@20:PROC
EXTRN	__imp__LineTo@12:PROC
EXTRN	__imp__SelectObject@8:PROC
EXTRN	__imp__SetBkMode@8:PROC
EXTRN	__imp__SetPolyFillMode@8:PROC
EXTRN	__imp__SetTextColor@8:PROC
EXTRN	__imp__MoveToEx@16:PROC
EXTRN	__imp__TextOutA@20:PROC
EXTRN	__imp__Polygon@12:PROC
EXTRN	??_Eruntime_error@std@@UAEPAXI@Z:PROC		; std::runtime_error::`vector deleting destructor'
EXTRN	?Instance@Cgdi@@SAPAV1@XZ:PROC			; Cgdi::Instance
EXTRN	??_E?$Goal@VRaven_Bot@@@@UAEPAXI@Z:PROC		; Goal<Raven_Bot>::`vector deleting destructor'
EXTRN	??_E?$Goal_Composite@VRaven_Bot@@@@UAEPAXI@Z:PROC ; Goal_Composite<Raven_Bot>::`vector deleting destructor'
EXTRN	??_EGoal_FollowPath@@UAEPAXI@Z:PROC		; Goal_FollowPath::`vector deleting destructor'
EXTRN	??0Goal_TraverseEdge@@QAE@PAVRaven_Bot@@VPathEdge@@_N@Z:PROC ; Goal_TraverseEdge::Goal_TraverseEdge
EXTRN	??0Goal_NegotiateDoor@@QAE@PAVRaven_Bot@@VPathEdge@@_N@Z:PROC ; Goal_NegotiateDoor::Goal_NegotiateDoor
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__CxxThrowException@8:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_InitBase:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
_BSS	SEGMENT
?MaxInt@@3HB DD	01H DUP (?)				; MaxInt
	ALIGN	8

?MaxDouble@@3NB DQ 01H DUP (?)				; MaxDouble
?MinDouble@@3NB DQ 01H DUP (?)				; MinDouble
?MaxFloat@@3MB DD 01H DUP (?)				; MaxFloat
?MinFloat@@3MB DD 01H DUP (?)				; MinFloat
_BSS	ENDS
;	COMDAT ?id@?$codecvt@DDU_Mbstatet@@@std@@2V0locale@2@A
_BSS	SEGMENT
?id@?$codecvt@DDU_Mbstatet@@@std@@2V0locale@2@A DD 01H DUP (?) ; std::codecvt<char,char,_Mbstatet>::id
_BSS	ENDS
;	COMDAT ?id@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@2V0locale@2@A
_BSS	SEGMENT
?id@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@2V0locale@2@A DD 01H DUP (?) ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::id
_BSS	ENDS
;	COMDAT ?id@?$numpunct@D@std@@2V0locale@2@A
_BSS	SEGMENT
?id@?$numpunct@D@std@@2V0locale@2@A DD 01H DUP (?)	; std::numpunct<char>::id
_BSS	ENDS
;	COMDAT ?id@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@2V0locale@2@A
_BSS	SEGMENT
?id@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@2V0locale@2@A DD 01H DUP (?) ; std::num_get<char,std::istreambuf_iterator<char,std::char_traits<char> > >::id
_BSS	ENDS
CRT$XCU	SEGMENT
?MaxInt$initializer$@@3P6AXXZA DD FLAT:??__EMaxInt@@YAXXZ ; MaxInt$initializer$
CRT$XCU	ENDS
;	COMDAT __xmm@80000000000000008000000000000000
CONST	SEGMENT
__xmm@80000000000000008000000000000000 DB 00H, 00H, 00H, 00H, 00H, 00H, 00H
	DB	080H, 00H, 00H, 00H, 00H, 00H, 00H, 00H, 080H
CONST	ENDS
;	COMDAT __real@7fefffffffffffff
CONST	SEGMENT
__real@7fefffffffffffff DQ 07fefffffffffffffr	; 1.79769e+308
CONST	ENDS
;	COMDAT __real@7f7fffff
CONST	SEGMENT
__real@7f7fffff DD 07f7fffffr			; 3.40282e+38
CONST	ENDS
;	COMDAT __real@402e000000000000
CONST	SEGMENT
__real@402e000000000000 DQ 0402e000000000000r	; 15
CONST	ENDS
;	COMDAT __real@4024000000000000
CONST	SEGMENT
__real@4024000000000000 DQ 04024000000000000r	; 10
CONST	ENDS
;	COMDAT __real@4014000000000000
CONST	SEGMENT
__real@4014000000000000 DQ 04014000000000000r	; 5
CONST	ENDS
;	COMDAT __real@4008000000000000
CONST	SEGMENT
__real@4008000000000000 DQ 04008000000000000r	; 3
CONST	ENDS
;	COMDAT __real@3ff0000000000000
CONST	SEGMENT
__real@3ff0000000000000 DQ 03ff0000000000000r	; 1
CONST	ENDS
;	COMDAT __real@3fd99999a0000000
CONST	SEGMENT
__real@3fd99999a0000000 DQ 03fd99999a0000000r	; 0.4
CONST	ENDS
;	COMDAT __real@3cb0000000000000
CONST	SEGMENT
__real@3cb0000000000000 DQ 03cb0000000000000r	; 2.22045e-16
CONST	ENDS
;	COMDAT __real@00800000
CONST	SEGMENT
__real@00800000 DD 000800000r			; 1.17549e-38
CONST	ENDS
;	COMDAT __real@0010000000000000
CONST	SEGMENT
__real@0010000000000000 DQ 00010000000000000r	; 2.22507e-308
CONST	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT ??_R4?$Goal@VRaven_Bot@@@@6B@
rdata$r	SEGMENT
??_R4?$Goal@VRaven_Bot@@@@6B@ DD 00H			; Goal<Raven_Bot>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$Goal@VRaven_Bot@@@@@8
	DD	FLAT:??_R3?$Goal@VRaven_Bot@@@@8
rdata$r	ENDS
;	COMDAT ??_R4?$Goal_Composite@VRaven_Bot@@@@6B@
rdata$r	SEGMENT
??_R4?$Goal_Composite@VRaven_Bot@@@@6B@ DD 00H		; Goal_Composite<Raven_Bot>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AV?$Goal_Composite@VRaven_Bot@@@@@8
	DD	FLAT:??_R3?$Goal_Composite@VRaven_Bot@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$Goal@VRaven_Bot@@@@8
rdata$r	SEGMENT
??_R2?$Goal@VRaven_Bot@@@@8 DD FLAT:??_R1A@?0A@EA@?$Goal@VRaven_Bot@@@@8 ; Goal<Raven_Bot>::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3?$Goal@VRaven_Bot@@@@8
rdata$r	SEGMENT
??_R3?$Goal@VRaven_Bot@@@@8 DD 00H			; Goal<Raven_Bot>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2?$Goal@VRaven_Bot@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$Goal@VRaven_Bot@@@@@8
data$r	SEGMENT
??_R0?AV?$Goal@VRaven_Bot@@@@@8 DD FLAT:??_7type_info@@6B@ ; Goal<Raven_Bot> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$Goal@VRaven_Bot@@@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$Goal@VRaven_Bot@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$Goal@VRaven_Bot@@@@8 DD FLAT:??_R0?AV?$Goal@VRaven_Bot@@@@@8 ; Goal<Raven_Bot>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$Goal@VRaven_Bot@@@@8
rdata$r	ENDS
;	COMDAT ??_R2?$Goal_Composite@VRaven_Bot@@@@8
rdata$r	SEGMENT
??_R2?$Goal_Composite@VRaven_Bot@@@@8 DD FLAT:??_R1A@?0A@EA@?$Goal_Composite@VRaven_Bot@@@@8 ; Goal_Composite<Raven_Bot>::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$Goal@VRaven_Bot@@@@8
rdata$r	ENDS
;	COMDAT ??_R3?$Goal_Composite@VRaven_Bot@@@@8
rdata$r	SEGMENT
??_R3?$Goal_Composite@VRaven_Bot@@@@8 DD 00H		; Goal_Composite<Raven_Bot>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2?$Goal_Composite@VRaven_Bot@@@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$Goal_Composite@VRaven_Bot@@@@@8
data$r	SEGMENT
??_R0?AV?$Goal_Composite@VRaven_Bot@@@@@8 DD FLAT:??_7type_info@@6B@ ; Goal_Composite<Raven_Bot> `RTTI Type Descriptor'
	DD	00H
	DB	'.?AV?$Goal_Composite@VRaven_Bot@@@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$Goal_Composite@VRaven_Bot@@@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$Goal_Composite@VRaven_Bot@@@@8 DD FLAT:??_R0?AV?$Goal_Composite@VRaven_Bot@@@@@8 ; Goal_Composite<Raven_Bot>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3?$Goal_Composite@VRaven_Bot@@@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@Goal_FollowPath@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@Goal_FollowPath@@8 DD FLAT:??_R0?AVGoal_FollowPath@@@8 ; Goal_FollowPath::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3Goal_FollowPath@@8
rdata$r	ENDS
;	COMDAT ??_R2Goal_FollowPath@@8
rdata$r	SEGMENT
??_R2Goal_FollowPath@@8 DD FLAT:??_R1A@?0A@EA@Goal_FollowPath@@8 ; Goal_FollowPath::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@?$Goal_Composite@VRaven_Bot@@@@8
	DD	FLAT:??_R1A@?0A@EA@?$Goal@VRaven_Bot@@@@8
rdata$r	ENDS
;	COMDAT ??_R3Goal_FollowPath@@8
rdata$r	SEGMENT
??_R3Goal_FollowPath@@8 DD 00H				; Goal_FollowPath::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2Goal_FollowPath@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVGoal_FollowPath@@@8
data$r	SEGMENT
??_R0?AVGoal_FollowPath@@@8 DD FLAT:??_7type_info@@6B@	; Goal_FollowPath `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVGoal_FollowPath@@', 00H
data$r	ENDS
;	COMDAT ??_R4Goal_FollowPath@@6B@
rdata$r	SEGMENT
??_R4Goal_FollowPath@@6B@ DD 00H			; Goal_FollowPath::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVGoal_FollowPath@@@8
	DD	FLAT:??_R3Goal_FollowPath@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@runtime_error@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@runtime_error@std@@8 DD FLAT:??_R0?AVruntime_error@std@@@8 ; std::runtime_error::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3runtime_error@std@@8
rdata$r	ENDS
;	COMDAT ??_R2runtime_error@std@@8
rdata$r	SEGMENT
??_R2runtime_error@std@@8 DD FLAT:??_R1A@?0A@EA@runtime_error@std@@8 ; std::runtime_error::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3runtime_error@std@@8
rdata$r	SEGMENT
??_R3runtime_error@std@@8 DD 00H			; std::runtime_error::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2runtime_error@std@@8
rdata$r	ENDS
;	COMDAT ??_R4runtime_error@std@@6B@
rdata$r	SEGMENT
??_R4runtime_error@std@@6B@ DD 00H			; std::runtime_error::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVruntime_error@std@@@8
	DD	FLAT:??_R3runtime_error@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_array_new_length@std@@8 DD FLAT:??_R0?AVbad_array_new_length@std@@@8 ; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R2bad_array_new_length@std@@8 DD FLAT:??_R1A@?0A@EA@bad_array_new_length@std@@8 ; std::bad_array_new_length::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@bad_alloc@std@@8
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R3bad_array_new_length@std@@8 DD 00H			; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_array_new_length@std@@6B@
rdata$r	SEGMENT
??_R4bad_array_new_length@std@@6B@ DD 00H		; std::bad_array_new_length::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_array_new_length@std@@@8
	DD	FLAT:??_R3bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_alloc@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_alloc@std@@8 DD FLAT:??_R0?AVbad_alloc@std@@@8 ; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_alloc@std@@8
rdata$r	SEGMENT
??_R2bad_alloc@std@@8 DD FLAT:??_R1A@?0A@EA@bad_alloc@std@@8 ; std::bad_alloc::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R3bad_alloc@std@@8
rdata$r	SEGMENT
??_R3bad_alloc@std@@8 DD 00H				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_alloc@std@@6B@
rdata$r	SEGMENT
??_R4bad_alloc@std@@6B@ DD 00H				; std::bad_alloc::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	FLAT:??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@exception@std@@8 DD FLAT:??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R2exception@std@@8
rdata$r	SEGMENT
??_R2exception@std@@8 DD FLAT:??_R1A@?0A@EA@exception@std@@8 ; std::exception::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3exception@std@@8
rdata$r	SEGMENT
??_R3exception@std@@8 DD 00H				; std::exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R4exception@std@@6B@
rdata$r	SEGMENT
??_R4exception@std@@6B@ DD 00H				; std::exception::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	FLAT:??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_C@_0BB@MOGOBHAF@list?$DMT?$DO?5too?5long@
CONST	SEGMENT
??_C@_0BB@MOGOBHAF@list?$DMT?$DO?5too?5long@ DB 'list<T> too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1PK@KKMOJEL@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAL?$AAi?$AAs?$AAt?$AA_?$AAc?$AAo?$AAn?$AAs@
CONST	SEGMENT
??_C@_1PK@KKMOJEL@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAL?$AAi?$AAs?$AAt?$AA_?$AAc?$AAo?$AAn?$AAs@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'L', 00H
	DB	'i', 00H, 's', 00H, 't', 00H, '_', 00H, 'c', 00H, 'o', 00H, 'n'
	DB	00H, 's', 00H, 't', 00H, '_', 00H, 'i', 00H, 't', 00H, 'e', 00H
	DB	'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<', 00H, 'c'
	DB	00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'L', 00H, 'i'
	DB	00H, 's', 00H, 't', 00H, '_', 00H, 'v', 00H, 'a', 00H, 'l', 00H
	DB	'<', 00H, 's', 00H, 't', 00H, 'r', 00H, 'u', 00H, 'c', 00H, 't'
	DB	00H, ' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H
	DB	'_', 00H, 'L', 00H, 'i', 00H, 's', 00H, 't', 00H, '_', 00H, 's'
	DB	00H, 'i', 00H, 'm', 00H, 'p', 00H, 'l', 00H, 'e', 00H, '_', 00H
	DB	't', 00H, 'y', 00H, 'p', 00H, 'e', 00H, 's', 00H, '<', 00H, 'c'
	DB	00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 'G', 00H
	DB	'o', 00H, 'a', 00H, 'l', 00H, '<', 00H, 'c', 00H, 'l', 00H, 'a'
	DB	00H, 's', 00H, 's', 00H, ' ', 00H, 'R', 00H, 'a', 00H, 'v', 00H
	DB	'e', 00H, 'n', 00H, '_', 00H, 'B', 00H, 'o', 00H, 't', 00H, '>'
	DB	00H, ' ', 00H, '*', 00H, '>', 00H, ' ', 00H, '>', 00H, ' ', 00H
	DB	'>', 00H, ':', 00H, ':', 00H, 'o', 00H, 'p', 00H, 'e', 00H, 'r'
	DB	00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, ' ', 00H, '*', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1PM@HGDEDNCE@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAL?$AAi?$AAs?$AAt?$AA_?$AAc?$AAo?$AAn?$AAs@
CONST	SEGMENT
??_C@_1PM@HGDEDNCE@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAL?$AAi?$AAs?$AAt?$AA_?$AAc?$AAo?$AAn?$AAs@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'L', 00H
	DB	'i', 00H, 's', 00H, 't', 00H, '_', 00H, 'c', 00H, 'o', 00H, 'n'
	DB	00H, 's', 00H, 't', 00H, '_', 00H, 'i', 00H, 't', 00H, 'e', 00H
	DB	'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<', 00H, 'c'
	DB	00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'L', 00H, 'i'
	DB	00H, 's', 00H, 't', 00H, '_', 00H, 'v', 00H, 'a', 00H, 'l', 00H
	DB	'<', 00H, 's', 00H, 't', 00H, 'r', 00H, 'u', 00H, 'c', 00H, 't'
	DB	00H, ' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H
	DB	'_', 00H, 'L', 00H, 'i', 00H, 's', 00H, 't', 00H, '_', 00H, 's'
	DB	00H, 'i', 00H, 'm', 00H, 'p', 00H, 'l', 00H, 'e', 00H, '_', 00H
	DB	't', 00H, 'y', 00H, 'p', 00H, 'e', 00H, 's', 00H, '<', 00H, 'c'
	DB	00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 'G', 00H
	DB	'o', 00H, 'a', 00H, 'l', 00H, '<', 00H, 'c', 00H, 'l', 00H, 'a'
	DB	00H, 's', 00H, 's', 00H, ' ', 00H, 'R', 00H, 'a', 00H, 'v', 00H
	DB	'e', 00H, 'n', 00H, '_', 00H, 'B', 00H, 'o', 00H, 't', 00H, '>'
	DB	00H, ' ', 00H, '*', 00H, '>', 00H, ' ', 00H, '>', 00H, ' ', 00H
	DB	'>', 00H, ':', 00H, ':', 00H, 'o', 00H, 'p', 00H, 'e', 00H, 'r'
	DB	00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, ' ', 00H, '+', 00H
	DB	'+', 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1EO@PPPLIDNC@?$AA?$CC?$AAc?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAc?$AAr?$AAe?$AAm?$AAe@
CONST	SEGMENT
??_C@_1EO@PPPLIDNC@?$AA?$CC?$AAc?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAc?$AAr?$AAe?$AAm?$AAe@ DB '"'
	DB	00H, 'c', 00H, 'a', 00H, 'n', 00H, 'n', 00H, 'o', 00H, 't', 00H
	DB	' ', 00H, 'd', 00H, 'e', 00H, 'c', 00H, 'r', 00H, 'e', 00H, 'm'
	DB	00H, 'e', 00H, 'n', 00H, 't', 00H, ' ', 00H, 'b', 00H, 'e', 00H
	DB	'g', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'l', 00H, 'i', 00H, 's'
	DB	00H, 't', 00H, ' ', 00H, 'i', 00H, 't', 00H, 'e', 00H, 'r', 00H
	DB	'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '"', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@BAAFPBMN@cannot?5decrement?5begin?5list?5ite@
CONST	SEGMENT
??_C@_0CF@BAAFPBMN@cannot?5decrement?5begin?5list?5ite@ DB 'cannot decrem'
	DB	'ent begin list iterator', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1GG@FLDKPFOH@?$AA?$CC?$AAc?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAc?$AAr?$AAe?$AAm?$AAe@
CONST	SEGMENT
??_C@_1GG@FLDKPFOH@?$AA?$CC?$AAc?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAc?$AAr?$AAe?$AAm?$AAe@ DB '"'
	DB	00H, 'c', 00H, 'a', 00H, 'n', 00H, 'n', 00H, 'o', 00H, 't', 00H
	DB	' ', 00H, 'd', 00H, 'e', 00H, 'c', 00H, 'r', 00H, 'e', 00H, 'm'
	DB	00H, 'e', 00H, 'n', 00H, 't', 00H, ' ', 00H, 'v', 00H, 'a', 00H
	DB	'l', 00H, 'u', 00H, 'e', 00H, '-', 00H, 'i', 00H, 'n', 00H, 'i'
	DB	00H, 't', 00H, 'i', 00H, 'a', 00H, 'l', 00H, 'i', 00H, 'z', 00H
	DB	'e', 00H, 'd', 00H, ' ', 00H, 'l', 00H, 'i', 00H, 's', 00H, 't'
	DB	00H, ' ', 00H, 'i', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'a', 00H
	DB	't', 00H, 'o', 00H, 'r', 00H, '"', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1PM@IFAGIBOF@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAL?$AAi?$AAs?$AAt?$AA_?$AAc?$AAo?$AAn?$AAs@
CONST	SEGMENT
??_C@_1PM@IFAGIBOF@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAL?$AAi?$AAs?$AAt?$AA_?$AAc?$AAo?$AAn?$AAs@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'L', 00H
	DB	'i', 00H, 's', 00H, 't', 00H, '_', 00H, 'c', 00H, 'o', 00H, 'n'
	DB	00H, 's', 00H, 't', 00H, '_', 00H, 'i', 00H, 't', 00H, 'e', 00H
	DB	'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<', 00H, 'c'
	DB	00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'L', 00H, 'i'
	DB	00H, 's', 00H, 't', 00H, '_', 00H, 'v', 00H, 'a', 00H, 'l', 00H
	DB	'<', 00H, 's', 00H, 't', 00H, 'r', 00H, 'u', 00H, 'c', 00H, 't'
	DB	00H, ' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H
	DB	'_', 00H, 'L', 00H, 'i', 00H, 's', 00H, 't', 00H, '_', 00H, 's'
	DB	00H, 'i', 00H, 'm', 00H, 'p', 00H, 'l', 00H, 'e', 00H, '_', 00H
	DB	't', 00H, 'y', 00H, 'p', 00H, 'e', 00H, 's', 00H, '<', 00H, 'c'
	DB	00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 'G', 00H
	DB	'o', 00H, 'a', 00H, 'l', 00H, '<', 00H, 'c', 00H, 'l', 00H, 'a'
	DB	00H, 's', 00H, 's', 00H, ' ', 00H, 'R', 00H, 'a', 00H, 'v', 00H
	DB	'e', 00H, 'n', 00H, '_', 00H, 'B', 00H, 'o', 00H, 't', 00H, '>'
	DB	00H, ' ', 00H, '*', 00H, '>', 00H, ' ', 00H, '>', 00H, ' ', 00H
	DB	'>', 00H, ':', 00H, ':', 00H, 'o', 00H, 'p', 00H, 'e', 00H, 'r'
	DB	00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, ' ', 00H, '-', 00H
	DB	'-', 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0DB@MCPEHPCC@cannot?5decrement?5value?9initiali@
CONST	SEGMENT
??_C@_0DB@MCPEHPCC@cannot?5decrement?5value?9initiali@ DB 'cannot decreme'
	DB	'nt value-initialized list iterator', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1PM@NGMJNEOB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAL?$AAi?$AAs?$AAt?$AA_?$AAc?$AAo?$AAn?$AAs@
CONST	SEGMENT
??_C@_1PM@NGMJNEOB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAL?$AAi?$AAs?$AAt?$AA_?$AAc?$AAo?$AAn?$AAs@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'L', 00H
	DB	'i', 00H, 's', 00H, 't', 00H, '_', 00H, 'c', 00H, 'o', 00H, 'n'
	DB	00H, 's', 00H, 't', 00H, '_', 00H, 'i', 00H, 't', 00H, 'e', 00H
	DB	'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<', 00H, 'c'
	DB	00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'L', 00H, 'i'
	DB	00H, 's', 00H, 't', 00H, '_', 00H, 'v', 00H, 'a', 00H, 'l', 00H
	DB	'<', 00H, 's', 00H, 't', 00H, 'r', 00H, 'u', 00H, 'c', 00H, 't'
	DB	00H, ' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H
	DB	'_', 00H, 'L', 00H, 'i', 00H, 's', 00H, 't', 00H, '_', 00H, 's'
	DB	00H, 'i', 00H, 'm', 00H, 'p', 00H, 'l', 00H, 'e', 00H, '_', 00H
	DB	't', 00H, 'y', 00H, 'p', 00H, 'e', 00H, 's', 00H, '<', 00H, 'c'
	DB	00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 'G', 00H
	DB	'o', 00H, 'a', 00H, 'l', 00H, '<', 00H, 'c', 00H, 'l', 00H, 'a'
	DB	00H, 's', 00H, 's', 00H, ' ', 00H, 'R', 00H, 'a', 00H, 'v', 00H
	DB	'e', 00H, 'n', 00H, '_', 00H, 'B', 00H, 'o', 00H, 't', 00H, '>'
	DB	00H, ' ', 00H, '*', 00H, '>', 00H, ' ', 00H, '>', 00H, ' ', 00H
	DB	'>', 00H, ':', 00H, ':', 00H, 'o', 00H, 'p', 00H, 'e', 00H, 'r'
	DB	00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, ' ', 00H, '=', 00H
	DB	'=', 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1NC@NFPCHBHP@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAl?$AAi?$AAs?$AAt?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs@
CONST	SEGMENT
??_C@_1NC@NFPCHBHP@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAl?$AAi?$AAs?$AAt?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'l', 00H, 'i', 00H
	DB	's', 00H, 't', 00H, '<', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's'
	DB	00H, 's', 00H, ' ', 00H, 'G', 00H, 'o', 00H, 'a', 00H, 'l', 00H
	DB	'<', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' '
	DB	00H, 'R', 00H, 'a', 00H, 'v', 00H, 'e', 00H, 'n', 00H, '_', 00H
	DB	'B', 00H, 'o', 00H, 't', 00H, '>', 00H, ' ', 00H, '*', 00H, ','
	DB	00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H
	DB	's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'a', 00H, 'l'
	DB	00H, 'l', 00H, 'o', 00H, 'c', 00H, 'a', 00H, 't', 00H, 'o', 00H
	DB	'r', 00H, '<', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's'
	DB	00H, ' ', 00H, 'G', 00H, 'o', 00H, 'a', 00H, 'l', 00H, '<', 00H
	DB	'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 'R'
	DB	00H, 'a', 00H, 'v', 00H, 'e', 00H, 'n', 00H, '_', 00H, 'B', 00H
	DB	'o', 00H, 't', 00H, '>', 00H, ' ', 00H, '*', 00H, '>', 00H, ' '
	DB	00H, '>', 00H, ':', 00H, ':', 00H, 'p', 00H, 'o', 00H, 'p', 00H
	DB	'_', 00H, 'f', 00H, 'r', 00H, 'o', 00H, 'n', 00H, 't', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1EO@CNEFBDCF@?$AA?$CC?$AAc?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr@
CONST	SEGMENT
??_C@_1EO@CNEFBDCF@?$AA?$CC?$AAc?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr@ DB '"'
	DB	00H, 'c', 00H, 'a', 00H, 'n', 00H, 'n', 00H, 'o', 00H, 't', 00H
	DB	' ', 00H, 'd', 00H, 'e', 00H, 'r', 00H, 'e', 00H, 'f', 00H, 'e'
	DB	00H, 'r', 00H, 'e', 00H, 'n', 00H, 'c', 00H, 'e', 00H, ' ', 00H
	DB	'e', 00H, 'n', 00H, 'd', 00H, ' ', 00H, 'l', 00H, 'i', 00H, 's'
	DB	00H, 't', 00H, ' ', 00H, 'i', 00H, 't', 00H, 'e', 00H, 'r', 00H
	DB	'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '"', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0CF@JCBFHMPL@cannot?5dereference?5end?5list?5ite@
CONST	SEGMENT
??_C@_0CF@JCBFHMPL@cannot?5dereference?5end?5list?5ite@ DB 'cannot derefe'
	DB	'rence end list iterator', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1GK@NKIMOCIG@?$AA?$CC?$AAc?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr@
CONST	SEGMENT
??_C@_1GK@NKIMOCIG@?$AA?$CC?$AAc?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr@ DB '"'
	DB	00H, 'c', 00H, 'a', 00H, 'n', 00H, 'n', 00H, 'o', 00H, 't', 00H
	DB	' ', 00H, 'd', 00H, 'e', 00H, 'r', 00H, 'e', 00H, 'f', 00H, 'e'
	DB	00H, 'r', 00H, 'e', 00H, 'n', 00H, 'c', 00H, 'e', 00H, ' ', 00H
	DB	'v', 00H, 'a', 00H, 'l', 00H, 'u', 00H, 'e', 00H, '-', 00H, 'i'
	DB	00H, 'n', 00H, 'i', 00H, 't', 00H, 'i', 00H, 'a', 00H, 'l', 00H
	DB	'i', 00H, 'z', 00H, 'e', 00H, 'd', 00H, ' ', 00H, 'l', 00H, 'i'
	DB	00H, 's', 00H, 't', 00H, ' ', 00H, 'i', 00H, 't', 00H, 'e', 00H
	DB	'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '"', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1NM@GONFAHHJ@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAL?$AAi?$AAs?$AAt?$AA_?$AAc?$AAo?$AAn?$AAs@
CONST	SEGMENT
??_C@_1NM@GONFAHHJ@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAL?$AAi?$AAs?$AAt?$AA_?$AAc?$AAo?$AAn?$AAs@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'L', 00H
	DB	'i', 00H, 's', 00H, 't', 00H, '_', 00H, 'c', 00H, 'o', 00H, 'n'
	DB	00H, 's', 00H, 't', 00H, '_', 00H, 'i', 00H, 't', 00H, 'e', 00H
	DB	'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<', 00H, 'c'
	DB	00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'L', 00H, 'i'
	DB	00H, 's', 00H, 't', 00H, '_', 00H, 'v', 00H, 'a', 00H, 'l', 00H
	DB	'<', 00H, 's', 00H, 't', 00H, 'r', 00H, 'u', 00H, 'c', 00H, 't'
	DB	00H, ' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H
	DB	'_', 00H, 'L', 00H, 'i', 00H, 's', 00H, 't', 00H, '_', 00H, 's'
	DB	00H, 'i', 00H, 'm', 00H, 'p', 00H, 'l', 00H, 'e', 00H, '_', 00H
	DB	't', 00H, 'y', 00H, 'p', 00H, 'e', 00H, 's', 00H, '<', 00H, 'c'
	DB	00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 'P', 00H
	DB	'a', 00H, 't', 00H, 'h', 00H, 'E', 00H, 'd', 00H, 'g', 00H, 'e'
	DB	00H, '>', 00H, ' ', 00H, '>', 00H, ' ', 00H, '>', 00H, ':', 00H
	DB	':', 00H, 'o', 00H, 'p', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't'
	DB	00H, 'o', 00H, 'r', 00H, ' ', 00H, '*', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DD@MBIHGLJE@cannot?5dereference?5value?9initia@
CONST	SEGMENT
??_C@_0DD@MBIHGLJE@cannot?5dereference?5value?9initia@ DB 'cannot derefer'
	DB	'ence value-initialized list iterator', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1EK@OKKCFDJN@?$AA?$CC?$AAc?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAi?$AAn?$AAc?$AAr?$AAe?$AAm?$AAe@
CONST	SEGMENT
??_C@_1EK@OKKCFDJN@?$AA?$CC?$AAc?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAi?$AAn?$AAc?$AAr?$AAe?$AAm?$AAe@ DB '"'
	DB	00H, 'c', 00H, 'a', 00H, 'n', 00H, 'n', 00H, 'o', 00H, 't', 00H
	DB	' ', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'r', 00H, 'e', 00H, 'm'
	DB	00H, 'e', 00H, 'n', 00H, 't', 00H, ' ', 00H, 'e', 00H, 'n', 00H
	DB	'd', 00H, ' ', 00H, 'l', 00H, 'i', 00H, 's', 00H, 't', 00H, ' '
	DB	00H, 'i', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H
	DB	'o', 00H, 'r', 00H, '"', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CD@PMFMCEG@cannot?5increment?5end?5list?5itera@
CONST	SEGMENT
??_C@_0CD@PMFMCEG@cannot?5increment?5end?5list?5itera@ DB 'cannot increme'
	DB	'nt end list iterator', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1GG@JLMAGPNK@?$AA?$CC?$AAc?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAi?$AAn?$AAc?$AAr?$AAe?$AAm?$AAe@
CONST	SEGMENT
??_C@_1GG@JLMAGPNK@?$AA?$CC?$AAc?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAi?$AAn?$AAc?$AAr?$AAe?$AAm?$AAe@ DB '"'
	DB	00H, 'c', 00H, 'a', 00H, 'n', 00H, 'n', 00H, 'o', 00H, 't', 00H
	DB	' ', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'r', 00H, 'e', 00H, 'm'
	DB	00H, 'e', 00H, 'n', 00H, 't', 00H, ' ', 00H, 'v', 00H, 'a', 00H
	DB	'l', 00H, 'u', 00H, 'e', 00H, '-', 00H, 'i', 00H, 'n', 00H, 'i'
	DB	00H, 't', 00H, 'i', 00H, 'a', 00H, 'l', 00H, 'i', 00H, 'z', 00H
	DB	'e', 00H, 'd', 00H, ' ', 00H, 'l', 00H, 'i', 00H, 's', 00H, 't'
	DB	00H, ' ', 00H, 'i', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'a', 00H
	DB	't', 00H, 'o', 00H, 'r', 00H, '"', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1NO@NMPGMCFD@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAL?$AAi?$AAs?$AAt?$AA_?$AAc?$AAo?$AAn?$AAs@
CONST	SEGMENT
??_C@_1NO@NMPGMCFD@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAL?$AAi?$AAs?$AAt?$AA_?$AAc?$AAo?$AAn?$AAs@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'L', 00H
	DB	'i', 00H, 's', 00H, 't', 00H, '_', 00H, 'c', 00H, 'o', 00H, 'n'
	DB	00H, 's', 00H, 't', 00H, '_', 00H, 'i', 00H, 't', 00H, 'e', 00H
	DB	'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<', 00H, 'c'
	DB	00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'L', 00H, 'i'
	DB	00H, 's', 00H, 't', 00H, '_', 00H, 'v', 00H, 'a', 00H, 'l', 00H
	DB	'<', 00H, 's', 00H, 't', 00H, 'r', 00H, 'u', 00H, 'c', 00H, 't'
	DB	00H, ' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H
	DB	'_', 00H, 'L', 00H, 'i', 00H, 's', 00H, 't', 00H, '_', 00H, 's'
	DB	00H, 'i', 00H, 'm', 00H, 'p', 00H, 'l', 00H, 'e', 00H, '_', 00H
	DB	't', 00H, 'y', 00H, 'p', 00H, 'e', 00H, 's', 00H, '<', 00H, 'c'
	DB	00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 'P', 00H
	DB	'a', 00H, 't', 00H, 'h', 00H, 'E', 00H, 'd', 00H, 'g', 00H, 'e'
	DB	00H, '>', 00H, ' ', 00H, '>', 00H, ' ', 00H, '>', 00H, ':', 00H
	DB	':', 00H, 'o', 00H, 'p', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't'
	DB	00H, 'o', 00H, 'r', 00H, ' ', 00H, '+', 00H, '+', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DB@ENBCPNKO@cannot?5increment?5value?9initiali@
CONST	SEGMENT
??_C@_0DB@ENBCPNKO@cannot?5increment?5value?9initiali@ DB 'cannot increme'
	DB	'nt value-initialized list iterator', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1DM@KDLJAKOP@?$AA?$CC?$AAl?$AAi?$AAs?$AAt?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AAs@
CONST	SEGMENT
??_C@_1DM@KDLJAKOP@?$AA?$CC?$AAl?$AAi?$AAs?$AAt?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AAs@ DB '"'
	DB	00H, 'l', 00H, 'i', 00H, 's', 00H, 't', 00H, ' ', 00H, 'i', 00H
	DB	't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r'
	DB	00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'o', 00H
	DB	'm', 00H, 'p', 00H, 'a', 00H, 't', 00H, 'i', 00H, 'b', 00H, 'l'
	DB	00H, 'e', 00H, '"', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1NO@HMALCLJG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAL?$AAi?$AAs?$AAt?$AA_?$AAc?$AAo?$AAn?$AAs@
CONST	SEGMENT
??_C@_1NO@HMALCLJG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAL?$AAi?$AAs?$AAt?$AA_?$AAc?$AAo?$AAn?$AAs@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'L', 00H
	DB	'i', 00H, 's', 00H, 't', 00H, '_', 00H, 'c', 00H, 'o', 00H, 'n'
	DB	00H, 's', 00H, 't', 00H, '_', 00H, 'i', 00H, 't', 00H, 'e', 00H
	DB	'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<', 00H, 'c'
	DB	00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'L', 00H, 'i'
	DB	00H, 's', 00H, 't', 00H, '_', 00H, 'v', 00H, 'a', 00H, 'l', 00H
	DB	'<', 00H, 's', 00H, 't', 00H, 'r', 00H, 'u', 00H, 'c', 00H, 't'
	DB	00H, ' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H
	DB	'_', 00H, 'L', 00H, 'i', 00H, 's', 00H, 't', 00H, '_', 00H, 's'
	DB	00H, 'i', 00H, 'm', 00H, 'p', 00H, 'l', 00H, 'e', 00H, '_', 00H
	DB	't', 00H, 'y', 00H, 'p', 00H, 'e', 00H, 's', 00H, '<', 00H, 'c'
	DB	00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 'P', 00H
	DB	'a', 00H, 't', 00H, 'h', 00H, 'E', 00H, 'd', 00H, 'g', 00H, 'e'
	DB	00H, '>', 00H, ' ', 00H, '>', 00H, ' ', 00H, '>', 00H, ':', 00H
	DB	':', 00H, 'o', 00H, 'p', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't'
	DB	00H, 'o', 00H, 'r', 00H, ' ', 00H, '=', 00H, '=', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@BALDKKHE@list?5iterators?5incompatible@
CONST	SEGMENT
??_C@_0BM@BALDKKHE@list?5iterators?5incompatible@ DB 'list iterators inco'
	DB	'mpatible', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@OHIHCHGJ@Cannot?5add?5goals?5to?5atomic?5goal@
CONST	SEGMENT
??_C@_0CB@OHIHCHGJ@Cannot?5add?5goals?5to?5atomic?5goal@ DB 'Cannot add g'
	DB	'oals to atomic goals', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1EI@LCNEIDGO@?$AA?$CC?$AAp?$AAo?$AAp?$AA_?$AAf?$AAr?$AAo?$AAn?$AAt?$AA?5?$AAc?$AAa?$AAl?$AAl@
CONST	SEGMENT
??_C@_1EI@LCNEIDGO@?$AA?$CC?$AAp?$AAo?$AAp?$AA_?$AAf?$AAr?$AAo?$AAn?$AAt?$AA?5?$AAc?$AAa?$AAl?$AAl@ DB '"'
	DB	00H, 'p', 00H, 'o', 00H, 'p', 00H, '_', 00H, 'f', 00H, 'r', 00H
	DB	'o', 00H, 'n', 00H, 't', 00H, ' ', 00H, 'c', 00H, 'a', 00H, 'l'
	DB	00H, 'l', 00H, 'e', 00H, 'd', 00H, ' ', 00H, 'o', 00H, 'n', 00H
	DB	' ', 00H, 'e', 00H, 'm', 00H, 'p', 00H, 't', 00H, 'y', 00H, ' '
	DB	00H, 'l', 00H, 'i', 00H, 's', 00H, 't', 00H, '<', 00H, 'T', 00H
	DB	'>', 00H, '"', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1JG@GEBLOLD@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAl?$AAi?$AAs?$AAt?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs@
CONST	SEGMENT
??_C@_1JG@GEBLOLD@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAl?$AAi?$AAs?$AAt?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'l', 00H, 'i', 00H
	DB	's', 00H, 't', 00H, '<', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's'
	DB	00H, 's', 00H, ' ', 00H, 'P', 00H, 'a', 00H, 't', 00H, 'h', 00H
	DB	'E', 00H, 'd', 00H, 'g', 00H, 'e', 00H, ',', 00H, 'c', 00H, 'l'
	DB	00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 's', 00H, 't', 00H
	DB	'd', 00H, ':', 00H, ':', 00H, 'a', 00H, 'l', 00H, 'l', 00H, 'o'
	DB	00H, 'c', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<', 00H
	DB	'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H, ' ', 00H, 'P'
	DB	00H, 'a', 00H, 't', 00H, 'h', 00H, 'E', 00H, 'd', 00H, 'g', 00H
	DB	'e', 00H, '>', 00H, ' ', 00H, '>', 00H, ':', 00H, ':', 00H, 'p'
	DB	00H, 'o', 00H, 'p', 00H, '_', 00H, 'f', 00H, 'r', 00H, 'o', 00H
	DB	'n', 00H, 't', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1MK@DPPFMAIA@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1MK@DPPFMAIA@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	'\', 00H, '2', 00H, '0', 00H, '1', 00H, '9', 00H, '\', 00H, 'C'
	DB	00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H, 'i', 00H
	DB	't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\', 00H, 'T'
	DB	00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H, 'M', 00H
	DB	'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4', 00H, '.'
	DB	00H, '2', 00H, '3', 00H, '.', 00H, '2', 00H, '8', 00H, '1', 00H
	DB	'0', 00H, '5', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l'
	DB	00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'l', 00H, 'i', 00H
	DB	's', 00H, 't', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0GF@GNCHBLDJ@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
CONST	SEGMENT
??_C@_0GF@GNCHBLDJ@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@ DB 'C:\Pro'
	DB	'gram Files (x86)\Microsoft Visual Studio\2019\Community\VC\To'
	DB	'ols\MSVC\14.23.28105\include\list', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CC@BNIKFPII@pop_front?5called?5on?5empty?5list?$DM@
CONST	SEGMENT
??_C@_0CC@BNIKFPII@pop_front?5called?5on?5empty?5list?$DM@ DB 'pop_front '
	DB	'called on empty list<T>', 00H		; `string'
CONST	ENDS
;	COMDAT __CTA2?AVruntime_error@std@@
xdata$x	SEGMENT
__CTA2?AVruntime_error@std@@ DD 02H
	DD	FLAT:__CT??_R0?AVruntime_error@std@@@8??0runtime_error@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __TI2?AVruntime_error@std@@
xdata$x	SEGMENT
__TI2?AVruntime_error@std@@ DD 00H
	DD	FLAT:??1runtime_error@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA2?AVruntime_error@std@@
xdata$x	ENDS
;	COMDAT ??_7Goal_FollowPath@@6B@
CONST	SEGMENT
??_7Goal_FollowPath@@6B@ DD FLAT:??_R4Goal_FollowPath@@6B@ ; Goal_FollowPath::`vftable'
	DD	FLAT:??_EGoal_FollowPath@@UAEPAXI@Z
	DD	FLAT:?Activate@Goal_FollowPath@@UAEXXZ
	DD	FLAT:?Process@Goal_FollowPath@@UAEHXZ
	DD	FLAT:?Terminate@Goal_FollowPath@@UAEXXZ
	DD	FLAT:?HandleMessage@?$Goal_Composite@VRaven_Bot@@@@UAE_NABUTelegram@@@Z
	DD	FLAT:?AddSubgoal@?$Goal_Composite@VRaven_Bot@@@@UAEXPAV?$Goal@VRaven_Bot@@@@@Z
	DD	FLAT:?RenderAtPos@?$Goal_Composite@VRaven_Bot@@@@UBEXAAUVector2D@@PAVTypeToString@@@Z
	DD	FLAT:?Render@Goal_FollowPath@@UAEXXZ
CONST	ENDS
;	COMDAT ??_7?$Goal_Composite@VRaven_Bot@@@@6B@
CONST	SEGMENT
??_7?$Goal_Composite@VRaven_Bot@@@@6B@ DD FLAT:??_R4?$Goal_Composite@VRaven_Bot@@@@6B@ ; Goal_Composite<Raven_Bot>::`vftable'
	DD	FLAT:??_E?$Goal_Composite@VRaven_Bot@@@@UAEPAXI@Z
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:?HandleMessage@?$Goal_Composite@VRaven_Bot@@@@UAE_NABUTelegram@@@Z
	DD	FLAT:?AddSubgoal@?$Goal_Composite@VRaven_Bot@@@@UAEXPAV?$Goal@VRaven_Bot@@@@@Z
	DD	FLAT:?RenderAtPos@?$Goal_Composite@VRaven_Bot@@@@UBEXAAUVector2D@@PAVTypeToString@@@Z
	DD	FLAT:?Render@?$Goal_Composite@VRaven_Bot@@@@UAEXXZ
CONST	ENDS
;	COMDAT ??_7?$Goal@VRaven_Bot@@@@6B@
CONST	SEGMENT
??_7?$Goal@VRaven_Bot@@@@6B@ DD FLAT:??_R4?$Goal@VRaven_Bot@@@@6B@ ; Goal<Raven_Bot>::`vftable'
	DD	FLAT:??_E?$Goal@VRaven_Bot@@@@UAEPAXI@Z
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:__purecall
	DD	FLAT:?HandleMessage@?$Goal@VRaven_Bot@@@@UAE_NABUTelegram@@@Z
	DD	FLAT:?AddSubgoal@?$Goal@VRaven_Bot@@@@UAEXPAV1@@Z
	DD	FLAT:?RenderAtPos@?$Goal@VRaven_Bot@@@@UBEXAAUVector2D@@PAVTypeToString@@@Z
	DD	FLAT:?Render@?$Goal@VRaven_Bot@@@@UAEXXZ
CONST	ENDS
;	COMDAT __CT??_R0?AVruntime_error@std@@@8??0runtime_error@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVruntime_error@std@@@8??0runtime_error@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVruntime_error@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0runtime_error@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVruntime_error@std@@@8
data$r	SEGMENT
??_R0?AVruntime_error@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::runtime_error `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVruntime_error@std@@', 00H
data$r	ENDS
;	COMDAT ??_7runtime_error@std@@6B@
CONST	SEGMENT
??_7runtime_error@std@@6B@ DD FLAT:??_R4runtime_error@std@@6B@ ; std::runtime_error::`vftable'
	DD	FLAT:??_Eruntime_error@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_C@_1DG@PLBPCAEM@?$AA?$CC?$AAI?$AAT?$AAE?$AAR?$AAA?$AAT?$AAO?$AAR?$AA?5?$AAL?$AAI?$AAS?$AAT?$AA?5@
CONST	SEGMENT
??_C@_1DG@PLBPCAEM@?$AA?$CC?$AAI?$AAT?$AAE?$AAR?$AAA?$AAT?$AAO?$AAR?$AA?5?$AAL?$AAI?$AAS?$AAT?$AA?5@ DB '"'
	DB	00H, 'I', 00H, 'T', 00H, 'E', 00H, 'R', 00H, 'A', 00H, 'T', 00H
	DB	'O', 00H, 'R', 00H, ' ', 00H, 'L', 00H, 'I', 00H, 'S', 00H, 'T'
	DB	00H, ' ', 00H, 'C', 00H, 'O', 00H, 'R', 00H, 'R', 00H, 'U', 00H
	DB	'P', 00H, 'T', 00H, 'E', 00H, 'D', 00H, '!', 00H, '"', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1EE@KLDMFDFL@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAI?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA_@
CONST	SEGMENT
??_C@_1EE@KLDMFDFL@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAI?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA_@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'I', 00H
	DB	't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r'
	DB	00H, '_', 00H, 'b', 00H, 'a', 00H, 's', 00H, 'e', 00H, '1', 00H
	DB	'2', 00H, ':', 00H, ':', 00H, '_', 00H, 'O', 00H, 'r', 00H, 'p'
	DB	00H, 'h', 00H, 'a', 00H, 'n', 00H, '_', 00H, 'm', 00H, 'e', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@LFDBABJJ@ITERATOR?5LIST?5CORRUPTED?$CB@
CONST	SEGMENT
??_C@_0BJ@LFDBABJJ@ITERATOR?5LIST?5CORRUPTED?$CB@ DB 'ITERATOR LIST CORRU'
	DB	'PTED!', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@
CONST	SEGMENT
??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@ DB '"'
	DB	00H, 'i', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H
	DB	'd', 00H, ' ', 00H, 'a', 00H, 'r', 00H, 'g', 00H, 'u', 00H, 'm'
	DB	00H, 'e', 00H, 'n', 00H, 't', 00H, '"', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1EK@NIFDJFDG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAd?$AAj?$AAu?$AAs?$AAt?$AA_?$AAm?$AAa@
CONST	SEGMENT
??_C@_1EK@NIFDJFDG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAd?$AAj?$AAu?$AAs?$AAt?$AA_?$AAm?$AAa@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'A', 00H
	DB	'd', 00H, 'j', 00H, 'u', 00H, 's', 00H, 't', 00H, '_', 00H, 'm'
	DB	00H, 'a', 00H, 'n', 00H, 'u', 00H, 'a', 00H, 'l', 00H, 'l', 00H
	DB	'y', 00H, '_', 00H, 'v', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'o'
	DB	00H, 'r', 00H, '_', 00H, 'a', 00H, 'l', 00H, 'i', 00H, 'g', 00H
	DB	'n', 00H, 'e', 00H, 'd', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1NA@CDBIFGMM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1NA@CDBIFGMM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	'\', 00H, '2', 00H, '0', 00H, '1', 00H, '9', 00H, '\', 00H, 'C'
	DB	00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H, 'i', 00H
	DB	't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\', 00H, 'T'
	DB	00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H, 'M', 00H
	DB	'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4', 00H, '.'
	DB	00H, '2', 00H, '3', 00H, '.', 00H, '2', 00H, '8', 00H, '1', 00H
	DB	'0', 00H, '5', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l'
	DB	00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'x', 00H, 'm', 00H
	DB	'e', 00H, 'm', 00H, 'o', 00H, 'r', 00H, 'y', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0GI@FJIKDGOA@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
CONST	SEGMENT
??_C@_0GI@FJIKDGOA@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@ DB 'C:\Pro'
	DB	'gram Files (x86)\Microsoft Visual Studio\2019\Community\VC\To'
	DB	'ols\MSVC\14.23.28105\include\xmemory', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_02DKCKIIND@?$CFs@
CONST	SEGMENT
??_C@_02DKCKIIND@?$CFs@ DB '%s', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@FCMFBGOM@invalid?5argument@
CONST	SEGMENT
??_C@_0BB@FCMFBGOM@invalid?5argument@ DB 'invalid argument', 00H ; `string'
CONST	ENDS
;	COMDAT __CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVexception@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0exception@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVexception@std@@@8
data$r	SEGMENT
??_R0?AVexception@std@@@8 DD FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVexception@std@@', 00H
data$r	ENDS
;	COMDAT __CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12 DD 010H
	DD	FLAT:??_R0?AVbad_alloc@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_alloc@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_alloc@std@@@8
data$r	SEGMENT
??_R0?AVbad_alloc@std@@@8 DD FLAT:??_7type_info@@6B@	; std::bad_alloc `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_alloc@std@@', 00H
data$r	ENDS
;	COMDAT __CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
xdata$x	SEGMENT
__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12 DD 00H
	DD	FLAT:??_R0?AVbad_array_new_length@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	0cH
	DD	FLAT:??0bad_array_new_length@std@@QAE@ABV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_array_new_length@std@@@8
data$r	SEGMENT
??_R0?AVbad_array_new_length@std@@@8 DD FLAT:??_7type_info@@6B@ ; std::bad_array_new_length `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVbad_array_new_length@std@@', 00H
data$r	ENDS
;	COMDAT __CTA3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
__CTA3?AVbad_array_new_length@std@@ DD 03H
	DD	FLAT:__CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QAE@ABV01@@Z12
	DD	FLAT:__CT??_R0?AVexception@std@@@8??0exception@std@@QAE@ABV01@@Z12
xdata$x	ENDS
;	COMDAT __TI3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
__TI3?AVbad_array_new_length@std@@ DD 00H
	DD	FLAT:??1bad_array_new_length@std@@UAE@XZ
	DD	00H
	DD	FLAT:__CTA3?AVbad_array_new_length@std@@
xdata$x	ENDS
;	COMDAT ??_C@_0BF@KINCDENJ@bad?5array?5new?5length@
CONST	SEGMENT
??_C@_0BF@KINCDENJ@bad?5array?5new?5length@ DB 'bad array new length', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7bad_array_new_length@std@@6B@
CONST	SEGMENT
??_7bad_array_new_length@std@@6B@ DD FLAT:??_R4bad_array_new_length@std@@6B@ ; std::bad_array_new_length::`vftable'
	DD	FLAT:??_Ebad_array_new_length@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_7bad_alloc@std@@6B@
CONST	SEGMENT
??_7bad_alloc@std@@6B@ DD FLAT:??_R4bad_alloc@std@@6B@	; std::bad_alloc::`vftable'
	DD	FLAT:??_Ebad_alloc@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT ??_C@_0BC@EOODALEL@Unknown?5exception@
CONST	SEGMENT
??_C@_0BC@EOODALEL@Unknown?5exception@ DB 'Unknown exception', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7exception@std@@6B@
CONST	SEGMENT
??_7exception@std@@6B@ DD FLAT:??_R4exception@std@@6B@	; std::exception::`vftable'
	DD	FLAT:??_Eexception@std@@UAEPAXI@Z
	DD	FLAT:?what@exception@std@@UBEPBDXZ
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$?0ABQAV?$Goal@VRaven_Bot@@@@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@1@ABQAV?$Goal@VRaven_Bot@@@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$?0ABQAV?$Goal@VRaven_Bot@@@@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@1@ABQAV?$Goal@VRaven_Bot@@@@@Z$0
__ehfuncinfo$??$?0ABQAV?$Goal@VRaven_Bot@@@@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@1@ABQAV?$Goal@VRaven_Bot@@@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$?0ABQAV?$Goal@VRaven_Bot@@@@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@1@ABQAV?$Goal@VRaven_Bot@@@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1?$_List_node_emplace_op2@V?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@std@@@std@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@std@@@std@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@std@@@std@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?_Release@?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@std@@@std@@QAEPAU?$_List_node@VPathEdge@@PAX@2@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$?8V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@V01@@std@@YA_NABV?$reverse_iterator@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@@0@0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$?8V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@V01@@std@@YA_NABV?$reverse_iterator@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@@0@0@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??$?8V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@V01@@std@@YA_NABV?$reverse_iterator@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@@0@0@Z$1
__ehfuncinfo$??$?8V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@V01@@std@@YA_NABV?$reverse_iterator@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@@0@0@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$?8V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@V01@@std@@YA_NABV?$reverse_iterator@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@@0@0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??$_Freenode@V?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@std@@@?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@SAXAAV?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@1@PAU01@@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$_Attach_head@U?$_List_simple_types@VPathEdge@@@std@@@?$_List_node_insert_op@V?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@std@@@std@@QAEXAAV?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@1@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Attach_head@U?$_List_simple_types@VPathEdge@@@std@@@?$_List_node_insert_op@V?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@std@@@std@@QAEXAAV?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@1@@Z$0
__ehfuncinfo$??$_Attach_head@U?$_List_simple_types@VPathEdge@@@std@@@?$_List_node_insert_op@V?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@std@@@std@@QAEXAAV?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@1@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$_Attach_head@U?$_List_simple_types@VPathEdge@@@std@@@?$_List_node_insert_op@V?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@std@@@std@@QAEXAAV?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@1@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$_Append_range_unchecked@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@U_Iterator_base0@2@@std@@V12@@?$_List_node_insert_op@V?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@std@@@std@@QAEXV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@U_Iterator_base0@2@@1@V21@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Append_range_unchecked@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@U_Iterator_base0@2@@std@@V12@@?$_List_node_insert_op@V?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@std@@@std@@QAEXV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@U_Iterator_base0@2@@1@V21@@Z$0
__ehfuncinfo$??$_Append_range_unchecked@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@U_Iterator_base0@2@@std@@V12@@?$_List_node_insert_op@V?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@std@@@std@@QAEXV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@U_Iterator_base0@2@@1@V21@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$_Append_range_unchecked@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@U_Iterator_base0@2@@std@@V12@@?$_List_node_insert_op@V?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@std@@@std@@QAEXV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@U_Iterator_base0@2@@1@V21@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1?$_List_node_insert_op@V?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@std@@@std@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@QAU_Container_proxy@0@@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??D?$reverse_iterator@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@@std@@QBEABQAV?$Goal@VRaven_Bot@@@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??D?$reverse_iterator@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@@std@@QBEABQAV?$Goal@VRaven_Bot@@@@XZ$0
__ehfuncinfo$??D?$reverse_iterator@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@@std@@QBEABQAV?$Goal@VRaven_Bot@@@@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??D?$reverse_iterator@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@@std@@QBEABQAV?$Goal@VRaven_Bot@@@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??$_Freenode0@V?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@std@@@?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@SAXAAV?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@1@PAU01@@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??$_Deallocate@$07$0A@@std@@YAXPAXI@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??$_Freenode@V?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@std@@@?$_List_node@VPathEdge@@PAX@std@@SAXAAV?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@1@PAU01@@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??$_Freenode0@V?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@std@@@?$_List_node@VPathEdge@@PAX@std@@SAXAAV?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@1@PAU01@@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$_Construct_range_unchecked@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@U_Iterator_base0@2@@std@@@?$list@VPathEdge@@V?$allocator@VPathEdge@@@std@@@std@@AAEXV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@U_Iterator_base0@2@@1@0@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Construct_range_unchecked@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@U_Iterator_base0@2@@std@@@?$list@VPathEdge@@V?$allocator@VPathEdge@@@std@@@std@@AAEXV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@U_Iterator_base0@2@@1@0@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??$_Construct_range_unchecked@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@U_Iterator_base0@2@@std@@@?$list@VPathEdge@@V?$allocator@VPathEdge@@@std@@@std@@AAEXV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@U_Iterator_base0@2@@1@0@Z$1
__ehfuncinfo$??$_Construct_range_unchecked@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@U_Iterator_base0@2@@std@@@?$list@VPathEdge@@V?$allocator@VPathEdge@@@std@@@std@@AAEXV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@U_Iterator_base0@2@@1@0@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$_Construct_range_unchecked@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@U_Iterator_base0@2@@std@@@?$list@VPathEdge@@V?$allocator@VPathEdge@@@std@@@std@@AAEXV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@U_Iterator_base0@2@@1@0@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Render@Goal_FollowPath@@UAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Render@Goal_FollowPath@@UAEXXZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?Render@Goal_FollowPath@@UAEXXZ$2
__ehfuncinfo$?Render@Goal_FollowPath@@UAEXXZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?Render@Goal_FollowPath@@UAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?Activate@Goal_FollowPath@@UAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?Activate@Goal_FollowPath@@UAEXXZ$0
	DD	0ffffffffH
	DD	FLAT:__unwindfunclet$?Activate@Goal_FollowPath@@UAEXXZ$1
__ehfuncinfo$?Activate@Goal_FollowPath@@UAEXXZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?Activate@Goal_FollowPath@@UAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0Goal_FollowPath@@QAE@PAVRaven_Bot@@V?$list@VPathEdge@@V?$allocator@VPathEdge@@@std@@@std@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0Goal_FollowPath@@QAE@PAVRaven_Bot@@V?$list@VPathEdge@@V?$allocator@VPathEdge@@@std@@@std@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0Goal_FollowPath@@QAE@PAVRaven_Bot@@V?$list@VPathEdge@@V?$allocator@VPathEdge@@@std@@@std@@@Z$1
__ehfuncinfo$??0Goal_FollowPath@@QAE@PAVRaven_Bot@@V?$list@VPathEdge@@V?$allocator@VPathEdge@@@std@@@std@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0Goal_FollowPath@@QAE@PAVRaven_Bot@@V?$list@VPathEdge@@V?$allocator@VPathEdge@@@std@@@std@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?front@?$list@VPathEdge@@V?$allocator@VPathEdge@@@std@@@std@@QAEAAVPathEdge@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?front@?$list@VPathEdge@@V?$allocator@VPathEdge@@@std@@@std@@QAEAAVPathEdge@@XZ$0
__ehfuncinfo$?front@?$list@VPathEdge@@V?$allocator@VPathEdge@@@std@@@std@@QAEAAVPathEdge@@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?front@?$list@VPathEdge@@V?$allocator@VPathEdge@@@std@@@std@@QAEAAVPathEdge@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?end@?$list@VPathEdge@@V?$allocator@VPathEdge@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@@2@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?begin@?$list@VPathEdge@@V?$allocator@VPathEdge@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@@2@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?RenderAtPos@?$Goal_Composite@VRaven_Bot@@@@UBEXAAUVector2D@@PAVTypeToString@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?RenderAtPos@?$Goal_Composite@VRaven_Bot@@@@UBEXAAUVector2D@@PAVTypeToString@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$?RenderAtPos@?$Goal_Composite@VRaven_Bot@@@@UBEXAAUVector2D@@PAVTypeToString@@@Z$2
__ehfuncinfo$?RenderAtPos@?$Goal_Composite@VRaven_Bot@@@@UBEXAAUVector2D@@PAVTypeToString@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?RenderAtPos@?$Goal_Composite@VRaven_Bot@@@@UBEXAAUVector2D@@PAVTypeToString@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?RemoveAllSubgoals@?$Goal_Composite@VRaven_Bot@@@@QAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?RemoveAllSubgoals@?$Goal_Composite@VRaven_Bot@@@@QAEXXZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$?RemoveAllSubgoals@?$Goal_Composite@VRaven_Bot@@@@QAEXXZ$1
__ehfuncinfo$?RemoveAllSubgoals@?$Goal_Composite@VRaven_Bot@@@@QAEXXZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$?RemoveAllSubgoals@?$Goal_Composite@VRaven_Bot@@@@QAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1?$Goal_Composite@VRaven_Bot@@@@UAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0?$Goal_Composite@VRaven_Bot@@@@QAE@PAVRaven_Bot@@H@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0?$Goal_Composite@VRaven_Bot@@@@QAE@PAVRaven_Bot@@H@Z$0
__ehfuncinfo$??0?$Goal_Composite@VRaven_Bot@@@@QAE@PAVRaven_Bot@@H@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0?$Goal_Composite@VRaven_Bot@@@@QAE@PAVRaven_Bot@@H@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?_Orphan_non_end@?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@QAEXXZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?_Alloc_sentinel_and_proxy@?$list@PAV?$Goal@VRaven_Bot@@@@V?$allocator@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@AAEXXZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?_Alloc_sentinel_and_proxy@?$list@PAV?$Goal@VRaven_Bot@@@@V?$allocator@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@AAEXXZ$0
__ehfuncinfo$?_Alloc_sentinel_and_proxy@?$list@PAV?$Goal@VRaven_Bot@@@@V?$allocator@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@AAEXXZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?_Alloc_sentinel_and_proxy@?$list@PAV?$Goal@VRaven_Bot@@@@V?$allocator@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@AAEXXZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?front@?$list@PAV?$Goal@VRaven_Bot@@@@V?$allocator@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@QAEAAPAV?$Goal@VRaven_Bot@@@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?front@?$list@PAV?$Goal@VRaven_Bot@@@@V?$allocator@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@QAEAAPAV?$Goal@VRaven_Bot@@@@XZ$0
__ehfuncinfo$?front@?$list@PAV?$Goal@VRaven_Bot@@@@V?$allocator@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@QAEAAPAV?$Goal@VRaven_Bot@@@@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?front@?$list@PAV?$Goal@VRaven_Bot@@@@V?$allocator@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@QAEAAPAV?$Goal@VRaven_Bot@@@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?rend@?$list@PAV?$Goal@VRaven_Bot@@@@V?$allocator@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@QBE?AV?$reverse_iterator@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@@2@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?rbegin@?$list@PAV?$Goal@VRaven_Bot@@@@V?$allocator@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@QBE?AV?$reverse_iterator@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@@2@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?end@?$list@PAV?$Goal@VRaven_Bot@@@@V?$allocator@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@QBE?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@2@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?end@?$list@PAV?$Goal@VRaven_Bot@@@@V?$allocator@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@2@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?begin@?$list@PAV?$Goal@VRaven_Bot@@@@V?$allocator@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@QBE?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@2@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?begin@?$list@PAV?$Goal@VRaven_Bot@@@@V?$allocator@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@2@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?RenderAtPos@?$Goal@VRaven_Bot@@@@UBEXAAUVector2D@@PAVTypeToString@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?RenderAtPos@?$Goal@VRaven_Bot@@@@UBEXAAUVector2D@@PAVTypeToString@@@Z$0
__ehfuncinfo$?RenderAtPos@?$Goal@VRaven_Bot@@@@UBEXAAUVector2D@@PAVTypeToString@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?RenderAtPos@?$Goal@VRaven_Bot@@@@UBEXAAUVector2D@@PAVTypeToString@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXXZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1_Iterator_base12@std@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?_Orphan_all@_Container_base12@std@@QAEXXZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
CRT$XCU	SEGMENT
?MaxDouble$initializer$@@3P6AXXZA DD FLAT:??__EMaxDouble@@YAXXZ ; MaxDouble$initializer$
CRT$XCU	ENDS
CRT$XCU	SEGMENT
?MinDouble$initializer$@@3P6AXXZA DD FLAT:??__EMinDouble@@YAXXZ ; MinDouble$initializer$
CRT$XCU	ENDS
CRT$XCU	SEGMENT
?MaxFloat$initializer$@@3P6AXXZA DD FLAT:??__EMaxFloat@@YAXXZ ; MaxFloat$initializer$
CRT$XCU	ENDS
CRT$XCU	SEGMENT
?MinFloat$initializer$@@3P6AXXZA DD FLAT:??__EMinFloat@@YAXXZ ; MinFloat$initializer$
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
??id$initializer$@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@2P6AXXZA@@3P6AXXZA DD FLAT:??__E?id@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@2V0locale@2@A@@YAXXZ ; ??id$initializer$@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@2P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
??id$initializer$@?$codecvt@DDU_Mbstatet@@@std@@2P6AXXZA@@3P6AXXZA DD FLAT:??__E?id@?$codecvt@DDU_Mbstatet@@@std@@2V0locale@2@A@@YAXXZ ; ??id$initializer$@?$codecvt@DDU_Mbstatet@@@std@@2P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
??id$initializer$@?$numpunct@D@std@@2P6AXXZA@@3P6AXXZA DD FLAT:??__E?id@?$numpunct@D@std@@2V0locale@2@A@@YAXXZ ; ??id$initializer$@?$numpunct@D@std@@2P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
;	COMDAT CRT$XCU
CRT$XCU	SEGMENT
??id$initializer$@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@2P6AXXZA@@3P6AXXZA DD FLAT:??__E?id@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@2V0locale@2@A@@YAXXZ ; ??id$initializer$@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@2P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@ABQAU?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@std@@YAABQAU?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@0@ABQAU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@ABQAU?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@std@@YAABQAU?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@0@ABQAU10@@Z PROC ; std::forward<std::_List_node<Goal<Raven_Bot> *,void *> * const &>, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

	push	ebp
	mov	ebp, esp

; 1421 :     return static_cast<_Ty&&>(_Arg);

	mov	eax, DWORD PTR __Arg$[ebp]

; 1422 : }

	pop	ebp
	ret	0
??$forward@ABQAU?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@std@@YAABQAU?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@0@ABQAU10@@Z ENDP ; std::forward<std::_List_node<Goal<Raven_Bot> *,void *> * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$construct@PAV?$Goal@VRaven_Bot@@@@ABQAV1@@?$_Default_allocator_traits@V?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@1@QAPAV?$Goal@VRaven_Bot@@@@ABQAV3@@Z
_TEXT	SEGMENT
$T1 = -4						; size = 4
___formal$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@PAV?$Goal@VRaven_Bot@@@@ABQAV1@@?$_Default_allocator_traits@V?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@1@QAPAV?$Goal@VRaven_Bot@@@@ABQAV3@@Z PROC ; std::_Default_allocator_traits<std::allocator<std::_List_node<Goal<Raven_Bot> *,void *> > >::construct<Goal<Raven_Bot> *,Goal<Raven_Bot> * const &>, COMDAT

; 757  :     static void construct(_Alloc&, _Objty* const _Ptr, _Types&&... _Args) {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH

; 758  :         ::new (const_cast<void*>(static_cast<const volatile void*>(_Ptr))) _Objty(_STD forward<_Types>(_Args)...);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	push	4
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T1[ebp], eax
	mov	ecx, DWORD PTR _<_Args_0>$[ebp]
	push	ecx
	call	??$forward@ABQAV?$Goal@VRaven_Bot@@@@@std@@YAABQAV?$Goal@VRaven_Bot@@@@ABQAV1@@Z ; std::forward<Goal<Raven_Bot> * const &>
	add	esp, 4
	mov	edx, DWORD PTR $T1[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [edx], eax

; 759  :     }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$construct@PAV?$Goal@VRaven_Bot@@@@ABQAV1@@?$_Default_allocator_traits@V?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@1@QAPAV?$Goal@VRaven_Bot@@@@ABQAV3@@Z ENDP ; std::_Default_allocator_traits<std::allocator<std::_List_node<Goal<Raven_Bot> *,void *> > >::construct<Goal<Raven_Bot> *,Goal<Raven_Bot> * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@AAPAU?$_List_node@VPathEdge@@PAX@std@@@std@@YAAAPAU?$_List_node@VPathEdge@@PAX@0@AAPAU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAPAU?$_List_node@VPathEdge@@PAX@std@@@std@@YAAAPAU?$_List_node@VPathEdge@@PAX@0@AAPAU10@@Z PROC ; std::forward<std::_List_node<PathEdge,void *> * &>, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

	push	ebp
	mov	ebp, esp

; 1421 :     return static_cast<_Ty&&>(_Arg);

	mov	eax, DWORD PTR __Arg$[ebp]

; 1422 : }

	pop	ebp
	ret	0
??$forward@AAPAU?$_List_node@VPathEdge@@PAX@std@@@std@@YAAAPAU?$_List_node@VPathEdge@@PAX@0@AAPAU10@@Z ENDP ; std::forward<std::_List_node<PathEdge,void *> * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@ABVPathEdge@@@std@@YAABVPathEdge@@ABV1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@ABVPathEdge@@@std@@YAABVPathEdge@@ABV1@@Z PROC ; std::forward<PathEdge const &>, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

	push	ebp
	mov	ebp, esp

; 1421 :     return static_cast<_Ty&&>(_Arg);

	mov	eax, DWORD PTR __Arg$[ebp]

; 1422 : }

	pop	ebp
	ret	0
??$forward@ABVPathEdge@@@std@@YAABVPathEdge@@ABV1@@Z ENDP ; std::forward<PathEdge const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xlocnum
;	COMDAT ??__E?id@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@2V0locale@2@A@@YAXXZ
text$di	SEGMENT
??__E?id@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@2V0locale@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::num_get<char,std::istreambuf_iterator<char,std::char_traits<char> > >::id'', COMDAT

; 1147 : __PURE_APPDOMAIN_GLOBAL locale::id num_get<_Elem, _InIt>::id;

	push	ebp
	mov	ebp, esp
	push	0
	mov	ecx, OFFSET ?id@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@2V0locale@2@A ; std::num_get<char,std::istreambuf_iterator<char,std::char_traits<char> > >::id
	call	??0id@locale@std@@QAE@I@Z		; std::locale::id::id
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??__E?id@?$num_get@DV?$istreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@2V0locale@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::num_get<char,std::istreambuf_iterator<char,std::char_traits<char> > >::id''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Get_size_of_n@$0DA@@std@@YAII@Z
_TEXT	SEGMENT
__Max_possible$1 = -8					; size = 4
__Overflow_is_possible$ = -1				; size = 1
__Count$ = 8						; size = 4
??$_Get_size_of_n@$0DA@@std@@YAII@Z PROC		; std::_Get_size_of_n<48>, COMDAT

; 24   : _NODISCARD constexpr size_t _Get_size_of_n(const size_t _Count) {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH

; 25   :     constexpr bool _Overflow_is_possible = _Ty_size > 1;

	mov	BYTE PTR __Overflow_is_possible$[ebp], 1

; 26   : 
; 27   :     if
; 28   :         _CONSTEXPR_IF(_Overflow_is_possible) {
; 29   :             constexpr size_t _Max_possible = static_cast<size_t>(-1) / _Ty_size;

	mov	DWORD PTR __Max_possible$1[ebp], 89478485 ; 05555555H

; 30   :             if (_Count > _Max_possible) {

	cmp	DWORD PTR __Count$[ebp], 89478485	; 05555555H
	jbe	SHORT $LN2@Get_size_o

; 31   :                 _Throw_bad_array_new_length(); // multiply overflow

	call	?_Throw_bad_array_new_length@std@@YAXXZ	; std::_Throw_bad_array_new_length
$LN2@Get_size_o:

; 32   :             }
; 33   :         }
; 34   : 
; 35   :     return _Count * _Ty_size;

	imul	eax, DWORD PTR __Count$[ebp], 48
$LN3@Get_size_o:

; 36   : }

	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Get_size_of_n@$0DA@@std@@YAII@Z ENDP		; std::_Get_size_of_n<48>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\utility
;	COMDAT ??$exchange@PAU?$_List_node@VPathEdge@@PAX@std@@$$T@std@@YAPAU?$_List_node@VPathEdge@@PAX@0@AAPAU10@$$QA$$T@Z
_TEXT	SEGMENT
__Old_val$ = -4						; size = 4
__Val$ = 8						; size = 4
__New_val$ = 12						; size = 4
??$exchange@PAU?$_List_node@VPathEdge@@PAX@std@@$$T@std@@YAPAU?$_List_node@VPathEdge@@PAX@0@AAPAU10@$$QA$$T@Z PROC ; std::exchange<std::_List_node<PathEdge,void *> *,std::nullptr_t>, COMDAT

; 526  : _Ty exchange(_Ty& _Val, _Other&& _New_val) { // assign _New_val to _Val, return previous _Val

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH

; 527  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

	mov	eax, DWORD PTR __Val$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Old_val$[ebp], ecx

; 528  :     _Val         = static_cast<_Other&&>(_New_val);

	mov	edx, DWORD PTR __Val$[ebp]
	mov	eax, DWORD PTR __New_val$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [edx], ecx

; 529  :     return _Old_val;

	mov	eax, DWORD PTR __Old_val$[ebp]

; 530  : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$exchange@PAU?$_List_node@VPathEdge@@PAX@std@@$$T@std@@YAPAU?$_List_node@VPathEdge@@PAX@0@AAPAU10@$$QA$$T@Z ENDP ; std::exchange<std::_List_node<PathEdge,void *> *,std::nullptr_t>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Construct_in_place@PAU?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@0@ABQAU10@@Z
_TEXT	SEGMENT
$T1 = -4						; size = 4
__Obj$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$_Construct_in_place@PAU?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@0@ABQAU10@@Z PROC ; std::_Construct_in_place<std::_List_node<Goal<Raven_Bot> *,void *> *,std::_List_node<Goal<Raven_Bot> *,void *> * const &>, COMDAT

; 198  : void _Construct_in_place(_Ty& _Obj, _Types&&... _Args) _NOEXCEPT_COND(is_nothrow_constructible_v<_Ty, _Types...>) {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH

; 199  :     ::new (const_cast<void*>(static_cast<const volatile void*>(_STD addressof(_Obj))))

	mov	eax, DWORD PTR __Obj$[ebp]
	push	eax
	call	??$addressof@PAU?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@std@@YAPAPAU?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@0@AAPAU10@@Z ; std::addressof<std::_List_node<Goal<Raven_Bot> *,void *> *>
	add	esp, 4
	push	eax
	push	4
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T1[ebp], eax
	mov	ecx, DWORD PTR _<_Args_0>$[ebp]
	push	ecx
	call	??$forward@ABQAU?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@std@@YAABQAU?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@0@ABQAU10@@Z ; std::forward<std::_List_node<Goal<Raven_Bot> *,void *> * const &>
	add	esp, 4
	mov	edx, DWORD PTR $T1[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [edx], eax

; 200  :         _Ty(_STD forward<_Types>(_Args)...);
; 201  : }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Construct_in_place@PAU?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@0@ABQAU10@@Z ENDP ; std::_Construct_in_place<std::_List_node<Goal<Raven_Bot> *,void *> *,std::_List_node<Goal<Raven_Bot> *,void *> * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\list
;	COMDAT ??$?0ABQAV?$Goal@VRaven_Bot@@@@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@1@ABQAV?$Goal@VRaven_Bot@@@@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Al_$ = 8						; size = 4
_<_Vals_0>$ = 12					; size = 4
??$?0ABQAV?$Goal@VRaven_Bot@@@@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@1@ABQAV?$Goal@VRaven_Bot@@@@@Z PROC ; std::_List_node_emplace_op2<std::allocator<std::_List_node<Goal<Raven_Bot> *,void *> > >::_List_node_emplace_op2<std::allocator<std::_List_node<Goal<Raven_Bot> *,void *> > ><Goal<Raven_Bot> * const &>, COMDAT
; _this$ = ecx

; 539  :     explicit _List_node_emplace_op2(_Alnode& _Al_, _Valtys&&... _Vals) : _Alloc_construct_ptr<_Alnode>(_Al_) {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$?0ABQAV?$Goal@VRaven_Bot@@@@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@1@ABQAV?$Goal@VRaven_Bot@@@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Al_$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@1@@Z ; std::_Alloc_construct_ptr<std::allocator<std::_List_node<Goal<Raven_Bot> *,void *> > >::_Alloc_construct_ptr<std::allocator<std::_List_node<Goal<Raven_Bot> *,void *> > >
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 540  :         this->_Allocate();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Allocate@?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@std@@@std@@QAEXXZ ; std::_Alloc_construct_ptr<std::allocator<std::_List_node<Goal<Raven_Bot> *,void *> > >::_Allocate

; 541  :         _Alnode_traits::construct(this->_Al, _STD addressof(this->_Ptr->_Myval), _STD forward<_Valtys>(_Vals)...);

	mov	ecx, DWORD PTR _<_Vals_0>$[ebp]
	push	ecx
	call	??$forward@ABQAV?$Goal@VRaven_Bot@@@@@std@@YAABQAV?$Goal@VRaven_Bot@@@@ABQAV1@@Z ; std::forward<Goal<Raven_Bot> * const &>
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	add	eax, 8
	push	eax
	call	??$addressof@PAV?$Goal@VRaven_Bot@@@@@std@@YAPAPAV?$Goal@VRaven_Bot@@@@AAPAV1@@Z ; std::addressof<Goal<Raven_Bot> *>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	call	??$construct@PAV?$Goal@VRaven_Bot@@@@ABQAV1@@?$_Default_allocator_traits@V?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@1@QAPAV?$Goal@VRaven_Bot@@@@ABQAV3@@Z ; std::_Default_allocator_traits<std::allocator<std::_List_node<Goal<Raven_Bot> *,void *> > >::construct<Goal<Raven_Bot> *,Goal<Raven_Bot> * const &>
	add	esp, 12					; 0000000cH

; 542  :     }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$?0ABQAV?$Goal@VRaven_Bot@@@@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@1@ABQAV?$Goal@VRaven_Bot@@@@@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@std@@@std@@QAE@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_List_node<Goal<Raven_Bot> *,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_List_node<Goal<Raven_Bot> *,void *> > >
__ehhandler$??$?0ABQAV?$Goal@VRaven_Bot@@@@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@1@ABQAV?$Goal@VRaven_Bot@@@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$?0ABQAV?$Goal@VRaven_Bot@@@@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@1@ABQAV?$Goal@VRaven_Bot@@@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$?0ABQAV?$Goal@VRaven_Bot@@@@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@1@ABQAV?$Goal@VRaven_Bot@@@@@Z ENDP ; std::_List_node_emplace_op2<std::allocator<std::_List_node<Goal<Raven_Bot> *,void *> > >::_List_node_emplace_op2<std::allocator<std::_List_node<Goal<Raven_Bot> *,void *> > ><Goal<Raven_Bot> * const &>
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@ABQAV?$Goal@VRaven_Bot@@@@@std@@YAABQAV?$Goal@VRaven_Bot@@@@ABQAV1@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@ABQAV?$Goal@VRaven_Bot@@@@@std@@YAABQAV?$Goal@VRaven_Bot@@@@ABQAV1@@Z PROC ; std::forward<Goal<Raven_Bot> * const &>, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

	push	ebp
	mov	ebp, esp

; 1421 :     return static_cast<_Ty&&>(_Arg);

	mov	eax, DWORD PTR __Arg$[ebp]

; 1422 : }

	pop	ebp
	ret	0
??$forward@ABQAV?$Goal@VRaven_Bot@@@@@std@@YAABQAV?$Goal@VRaven_Bot@@@@ABQAV1@@Z ENDP ; std::forward<Goal<Raven_Bot> * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\list
;	COMDAT ?_Transfer_before@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@std@@@std@@QAEPAU?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@2@QAU32@@Z
_TEXT	SEGMENT
__Result$ = -20						; size = 4
__Insert_after$ = -12					; size = 4
_this$ = -4						; size = 4
__Insert_before$ = 8					; size = 4
?_Transfer_before@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@std@@@std@@QAEPAU?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@2@QAU32@@Z PROC ; std::_List_node_emplace_op2<std::allocator<std::_List_node<Goal<Raven_Bot> *,void *> > >::_Transfer_before, COMDAT
; _this$ = ecx

; 553  :     pointer _Transfer_before(const pointer _Insert_before) noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx

; 554  :         const pointer _Insert_after = _Insert_before->_Prev;

	mov	eax, DWORD PTR __Insert_before$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR __Insert_after$[ebp], ecx

; 555  :         _Construct_in_place(this->_Ptr->_Next, _Insert_before);

	lea	edx, DWORD PTR __Insert_before$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	??$_Construct_in_place@PAU?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@0@ABQAU10@@Z ; std::_Construct_in_place<std::_List_node<Goal<Raven_Bot> *,void *> *,std::_List_node<Goal<Raven_Bot> *,void *> * const &>
	add	esp, 8

; 556  :         _Construct_in_place(this->_Ptr->_Prev, _Insert_after);

	lea	edx, DWORD PTR __Insert_after$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	add	ecx, 4
	push	ecx
	call	??$_Construct_in_place@PAU?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@ABQAU12@@std@@YAXAAPAU?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@0@ABQAU10@@Z ; std::_Construct_in_place<std::_List_node<Goal<Raven_Bot> *,void *> *,std::_List_node<Goal<Raven_Bot> *,void *> * const &>
	add	esp, 8

; 557  :         const auto _Result    = this->_Ptr;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR __Result$[ebp], eax

; 558  :         this->_Ptr            = pointer{};

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0

; 559  :         _Insert_before->_Prev = _Result;

	mov	edx, DWORD PTR __Insert_before$[ebp]
	mov	eax, DWORD PTR __Result$[ebp]
	mov	DWORD PTR [edx+4], eax

; 560  :         _Insert_after->_Next  = _Result;

	mov	ecx, DWORD PTR __Insert_after$[ebp]
	mov	edx, DWORD PTR __Result$[ebp]
	mov	DWORD PTR [ecx], edx

; 561  :         return _Result;

	mov	eax, DWORD PTR __Result$[ebp]

; 562  :     }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@Transfer_b
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	1
$LN5@Transfer_b:
	DD	1
	DD	$LN4@Transfer_b
$LN4@Transfer_b:
	DD	-12					; fffffff4H
	DD	4
	DD	$LN3@Transfer_b
$LN3@Transfer_b:
	DB	95					; 0000005fH
	DB	73					; 00000049H
	DB	110					; 0000006eH
	DB	115					; 00000073H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	116					; 00000074H
	DB	95					; 0000005fH
	DB	97					; 00000061H
	DB	102					; 00000066H
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
?_Transfer_before@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@std@@@std@@QAEPAU?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@2@QAU32@@Z ENDP ; std::_List_node_emplace_op2<std::allocator<std::_List_node<Goal<Raven_Bot> *,void *> > >::_Transfer_before
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\list
;	COMDAT ??1?$_List_node_emplace_op2@V?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$_List_node_emplace_op2@V?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@std@@@std@@QAE@XZ PROC ; std::_List_node_emplace_op2<std::allocator<std::_List_node<Goal<Raven_Bot> *,void *> > >::~_List_node_emplace_op2<std::allocator<std::_List_node<Goal<Raven_Bot> *,void *> > >, COMDAT
; _this$ = ecx

; 544  :     ~_List_node_emplace_op2() {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$_List_node_emplace_op2@V?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 545  :         if (this->_Ptr != pointer{}) {

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $LN1@List_node_

; 546  :             _Alnode_traits::destroy(this->_Al, _STD addressof(this->_Ptr->_Myval));

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	add	edx, 8
	push	edx
	call	??$addressof@PAV?$Goal@VRaven_Bot@@@@@std@@YAPAPAV?$Goal@VRaven_Bot@@@@AAPAV1@@Z ; std::addressof<Goal<Raven_Bot> *>
	add	esp, 4
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	call	??$destroy@PAV?$Goal@VRaven_Bot@@@@@?$_Default_allocator_traits@V?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@1@QAPAV?$Goal@VRaven_Bot@@@@@Z ; std::_Default_allocator_traits<std::allocator<std::_List_node<Goal<Raven_Bot> *,void *> > >::destroy<Goal<Raven_Bot> *>
	add	esp, 8
$LN1@List_node_:

; 547  :         }
; 548  :     }

	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@std@@@std@@QAE@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_List_node<Goal<Raven_Bot> *,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_List_node<Goal<Raven_Bot> *,void *> > >
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1?$_List_node_emplace_op2@V?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$_List_node_emplace_op2@V?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$_List_node_emplace_op2@V?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@std@@@std@@QAE@XZ ENDP ; std::_List_node_emplace_op2<std::allocator<std::_List_node<Goal<Raven_Bot> *,void *> > >::~_List_node_emplace_op2<std::allocator<std::_List_node<Goal<Raven_Bot> *,void *> > >
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??1?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@std@@@std@@QAE@XZ PROC ; std::_Alloc_construct_ptr<std::allocator<std::_List_node<Goal<Raven_Bot> *,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_List_node<Goal<Raven_Bot> *,void *> > >, COMDAT
; _this$ = ecx

; 1134 :     ~_Alloc_construct_ptr() { // if this instance is engaged, deallocate storage

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 1135 :         if (_Ptr) {

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $LN3@Alloc_cons

; 1136 :             _Al.deallocate(_Ptr, 1);

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?deallocate@?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@std@@QAEXQAU?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@2@I@Z ; std::allocator<std::_List_node<Goal<Raven_Bot> *,void *> >::deallocate
$LN3@Alloc_cons:

; 1137 :         }
; 1138 :     }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@std@@@std@@QAE@XZ ENDP ; std::_Alloc_construct_ptr<std::allocator<std::_List_node<Goal<Raven_Bot> *,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_List_node<Goal<Raven_Bot> *,void *> > >
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Allocate@?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Allocate@?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@std@@@std@@QAEXXZ PROC ; std::_Alloc_construct_ptr<std::allocator<std::_List_node<Goal<Raven_Bot> *,void *> > >::_Allocate, COMDAT
; _this$ = ecx

; 1129 :     void _Allocate() { // disengage *this, then allocate a new memory block

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 1130 :         _Ptr = nullptr; // if allocate throws, prevents double-free

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0

; 1131 :         _Ptr = _Al.allocate(1);

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx]
	call	?allocate@?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@std@@QAEPAU?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@2@I@Z ; std::allocator<std::_List_node<Goal<Raven_Bot> *,void *> >::allocate
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], eax

; 1132 :     }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Allocate@?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@std@@@std@@QAEXXZ ENDP ; std::_Alloc_construct_ptr<std::allocator<std::_List_node<Goal<Raven_Bot> *,void *> > >::_Allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??0?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Al_$ = 8						; size = 4
??0?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@1@@Z PROC ; std::_Alloc_construct_ptr<std::allocator<std::_List_node<Goal<Raven_Bot> *,void *> > >::_Alloc_construct_ptr<std::allocator<std::_List_node<Goal<Raven_Bot> *,void *> > >, COMDAT
; _this$ = ecx

; 1123 :     explicit _Alloc_construct_ptr(_Alloc& _Al_) : _Al(_Al_), _Ptr(nullptr) {}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Al_$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@1@@Z ENDP ; std::_Alloc_construct_ptr<std::allocator<std::_List_node<Goal<Raven_Bot> *,void *> > >::_Alloc_construct_ptr<std::allocator<std::_List_node<Goal<Raven_Bot> *,void *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@$$T@std@@YA$$QA$$TAA$$T@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@$$T@std@@YA$$QA$$TAA$$T@Z PROC		; std::forward<std::nullptr_t>, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

	push	ebp
	mov	ebp, esp

; 1421 :     return static_cast<_Ty&&>(_Arg);

	mov	eax, DWORD PTR __Arg$[ebp]

; 1422 : }

	pop	ebp
	ret	0
??$forward@$$T@std@@YA$$QA$$TAA$$T@Z ENDP		; std::forward<std::nullptr_t>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstddef
;	COMDAT ??$addressof@PAU?$_List_node@VPathEdge@@PAX@std@@@std@@YAPAPAU?$_List_node@VPathEdge@@PAX@0@AAPAU10@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@PAU?$_List_node@VPathEdge@@PAX@std@@@std@@YAPAPAU?$_List_node@VPathEdge@@PAX@0@AAPAU10@@Z PROC ; std::addressof<std::_List_node<PathEdge,void *> *>, COMDAT

; 279  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept { // return address of _Val

	push	ebp
	mov	ebp, esp

; 280  :     return __builtin_addressof(_Val);

	mov	eax, DWORD PTR __Val$[ebp]

; 281  : }

	pop	ebp
	ret	0
??$addressof@PAU?$_List_node@VPathEdge@@PAX@std@@@std@@YAPAPAU?$_List_node@VPathEdge@@PAX@0@AAPAU10@@Z ENDP ; std::addressof<std::_List_node<PathEdge,void *> *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$destroy@PAV?$Goal@VRaven_Bot@@@@@?$_Default_allocator_traits@V?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@1@QAPAV?$Goal@VRaven_Bot@@@@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$destroy@PAV?$Goal@VRaven_Bot@@@@@?$_Default_allocator_traits@V?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@1@QAPAV?$Goal@VRaven_Bot@@@@@Z PROC ; std::_Default_allocator_traits<std::allocator<std::_List_node<Goal<Raven_Bot> *,void *> > >::destroy<Goal<Raven_Bot> *>, COMDAT

; 762  :     static void destroy(_Alloc&, _Uty* const _Ptr) {

	push	ebp
	mov	ebp, esp

; 763  :         _Ptr->~_Uty();
; 764  :     }

	pop	ebp
	ret	0
??$destroy@PAV?$Goal@VRaven_Bot@@@@@?$_Default_allocator_traits@V?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@1@QAPAV?$Goal@VRaven_Bot@@@@@Z ENDP ; std::_Default_allocator_traits<std::allocator<std::_List_node<Goal<Raven_Bot> *,void *> > >::destroy<Goal<Raven_Bot> *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstddef
;	COMDAT ??$addressof@PAV?$Goal@VRaven_Bot@@@@@std@@YAPAPAV?$Goal@VRaven_Bot@@@@AAPAV1@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@PAV?$Goal@VRaven_Bot@@@@@std@@YAPAPAV?$Goal@VRaven_Bot@@@@AAPAV1@@Z PROC ; std::addressof<Goal<Raven_Bot> *>, COMDAT

; 279  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept { // return address of _Val

	push	ebp
	mov	ebp, esp

; 280  :     return __builtin_addressof(_Val);

	mov	eax, DWORD PTR __Val$[ebp]

; 281  : }

	pop	ebp
	ret	0
??$addressof@PAV?$Goal@VRaven_Bot@@@@@std@@YAPAPAV?$Goal@VRaven_Bot@@@@AAPAV1@@Z ENDP ; std::addressof<Goal<Raven_Bot> *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\utility
;	COMDAT ??$exchange@II@std@@YAIAAI$$QAI@Z
_TEXT	SEGMENT
__Old_val$ = -4						; size = 4
__Val$ = 8						; size = 4
__New_val$ = 12						; size = 4
??$exchange@II@std@@YAIAAI$$QAI@Z PROC			; std::exchange<unsigned int,unsigned int>, COMDAT

; 526  : _Ty exchange(_Ty& _Val, _Other&& _New_val) { // assign _New_val to _Val, return previous _Val

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH

; 527  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

	mov	eax, DWORD PTR __Val$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Old_val$[ebp], ecx

; 528  :     _Val         = static_cast<_Other&&>(_New_val);

	mov	edx, DWORD PTR __Val$[ebp]
	mov	eax, DWORD PTR __New_val$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [edx], ecx

; 529  :     return _Old_val;

	mov	eax, DWORD PTR __Old_val$[ebp]

; 530  : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$exchange@II@std@@YAIAAI$$QAI@Z ENDP			; std::exchange<unsigned int,unsigned int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Construct_in_place@PAU?$_List_node@VPathEdge@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_List_node@VPathEdge@@PAX@0@0@Z
_TEXT	SEGMENT
$T1 = -4						; size = 4
__Obj$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$_Construct_in_place@PAU?$_List_node@VPathEdge@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_List_node@VPathEdge@@PAX@0@0@Z PROC ; std::_Construct_in_place<std::_List_node<PathEdge,void *> *,std::_List_node<PathEdge,void *> * &>, COMDAT

; 198  : void _Construct_in_place(_Ty& _Obj, _Types&&... _Args) _NOEXCEPT_COND(is_nothrow_constructible_v<_Ty, _Types...>) {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH

; 199  :     ::new (const_cast<void*>(static_cast<const volatile void*>(_STD addressof(_Obj))))

	mov	eax, DWORD PTR __Obj$[ebp]
	push	eax
	call	??$addressof@PAU?$_List_node@VPathEdge@@PAX@std@@@std@@YAPAPAU?$_List_node@VPathEdge@@PAX@0@AAPAU10@@Z ; std::addressof<std::_List_node<PathEdge,void *> *>
	add	esp, 4
	push	eax
	push	4
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T1[ebp], eax
	mov	ecx, DWORD PTR _<_Args_0>$[ebp]
	push	ecx
	call	??$forward@AAPAU?$_List_node@VPathEdge@@PAX@std@@@std@@YAAAPAU?$_List_node@VPathEdge@@PAX@0@AAPAU10@@Z ; std::forward<std::_List_node<PathEdge,void *> * &>
	add	esp, 4
	mov	edx, DWORD PTR $T1[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [edx], eax

; 200  :         _Ty(_STD forward<_Types>(_Args)...);
; 201  : }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Construct_in_place@PAU?$_List_node@VPathEdge@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_List_node@VPathEdge@@PAX@0@0@Z ENDP ; std::_Construct_in_place<std::_List_node<PathEdge,void *> *,std::_List_node<PathEdge,void *> * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$construct@VPathEdge@@ABV1@@?$_Default_allocator_traits@V?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@1@QAVPathEdge@@ABV3@@Z
_TEXT	SEGMENT
$T1 = -4						; size = 4
___formal$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@VPathEdge@@ABV1@@?$_Default_allocator_traits@V?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@1@QAVPathEdge@@ABV3@@Z PROC ; std::_Default_allocator_traits<std::allocator<std::_List_node<PathEdge,void *> > >::construct<PathEdge,PathEdge const &>, COMDAT

; 757  :     static void construct(_Alloc&, _Objty* const _Ptr, _Types&&... _Args) {

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	push	edi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH

; 758  :         ::new (const_cast<void*>(static_cast<const volatile void*>(_Ptr))) _Objty(_STD forward<_Types>(_Args)...);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	push	40					; 00000028H
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T1[ebp], eax
	mov	ecx, DWORD PTR _<_Args_0>$[ebp]
	push	ecx
	call	??$forward@ABVPathEdge@@@std@@YAABVPathEdge@@ABV1@@Z ; std::forward<PathEdge const &>
	add	esp, 4
	mov	ecx, 10					; 0000000aH
	mov	esi, eax
	mov	edi, DWORD PTR $T1[ebp]
	rep movsd

; 759  :     }

	pop	edi
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$construct@VPathEdge@@ABV1@@?$_Default_allocator_traits@V?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@1@QAVPathEdge@@ABV3@@Z ENDP ; std::_Default_allocator_traits<std::allocator<std::_List_node<PathEdge,void *> > >::construct<PathEdge,PathEdge const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??1?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@std@@@std@@QAE@XZ PROC ; std::_Alloc_construct_ptr<std::allocator<std::_List_node<PathEdge,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_List_node<PathEdge,void *> > >, COMDAT
; _this$ = ecx

; 1134 :     ~_Alloc_construct_ptr() { // if this instance is engaged, deallocate storage

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 1135 :         if (_Ptr) {

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $LN3@Alloc_cons

; 1136 :             _Al.deallocate(_Ptr, 1);

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	call	?deallocate@?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@std@@QAEXQAU?$_List_node@VPathEdge@@PAX@2@I@Z ; std::allocator<std::_List_node<PathEdge,void *> >::deallocate
$LN3@Alloc_cons:

; 1137 :         }
; 1138 :     }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@std@@@std@@QAE@XZ ENDP ; std::_Alloc_construct_ptr<std::allocator<std::_List_node<PathEdge,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_List_node<PathEdge,void *> > >
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Allocate@?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Allocate@?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@std@@@std@@QAEXXZ PROC ; std::_Alloc_construct_ptr<std::allocator<std::_List_node<PathEdge,void *> > >::_Allocate, COMDAT
; _this$ = ecx

; 1129 :     void _Allocate() { // disengage *this, then allocate a new memory block

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 1130 :         _Ptr = nullptr; // if allocate throws, prevents double-free

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0

; 1131 :         _Ptr = _Al.allocate(1);

	push	1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [ecx]
	call	?allocate@?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@std@@QAEPAU?$_List_node@VPathEdge@@PAX@2@I@Z ; std::allocator<std::_List_node<PathEdge,void *> >::allocate
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], eax

; 1132 :     }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Allocate@?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@std@@@std@@QAEXXZ ENDP ; std::_Alloc_construct_ptr<std::allocator<std::_List_node<PathEdge,void *> > >::_Allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Release@?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@std@@@std@@QAEPAU?$_List_node@VPathEdge@@PAX@2@XZ
_TEXT	SEGMENT
$T2 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
?_Release@?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@std@@@std@@QAEPAU?$_List_node@VPathEdge@@PAX@2@XZ PROC ; std::_Alloc_construct_ptr<std::allocator<std::_List_node<PathEdge,void *> > >::_Release, COMDAT
; _this$ = ecx

; 1125 :     _NODISCARD pointer _Release() noexcept { // disengage *this and return contained pointer

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Release@?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@std@@@std@@QAEPAU?$_List_node@VPathEdge@@PAX@2@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	mov	DWORD PTR [ebp-20], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 1126 :         return _STD exchange(_Ptr, nullptr);

	mov	DWORD PTR $T2[ebp], 0
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	push	ecx
	call	??$exchange@PAU?$_List_node@VPathEdge@@PAX@std@@$$T@std@@YAPAU?$_List_node@VPathEdge@@PAX@0@AAPAU10@$$QA$$T@Z ; std::exchange<std::_List_node<PathEdge,void *> *,std::nullptr_t>
	add	esp, 8

; 1127 :     }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Release@?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@std@@@std@@QAEPAU?$_List_node@VPathEdge@@PAX@2@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Release@?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@std@@@std@@QAEPAU?$_List_node@VPathEdge@@PAX@2@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Release@?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@std@@@std@@QAEPAU?$_List_node@VPathEdge@@PAX@2@XZ ENDP ; std::_Alloc_construct_ptr<std::allocator<std::_List_node<PathEdge,void *> > >::_Release
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??0?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Al_$ = 8						; size = 4
??0?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@1@@Z PROC ; std::_Alloc_construct_ptr<std::allocator<std::_List_node<PathEdge,void *> > >::_Alloc_construct_ptr<std::allocator<std::_List_node<PathEdge,void *> > >, COMDAT
; _this$ = ecx

; 1123 :     explicit _Alloc_construct_ptr(_Alloc& _Al_) : _Al(_Al_), _Ptr(nullptr) {}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Al_$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@1@@Z ENDP ; std::_Alloc_construct_ptr<std::allocator<std::_List_node<PathEdge,void *> > >::_Alloc_construct_ptr<std::allocator<std::_List_node<PathEdge,void *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@2@QAU_Container_proxy@2@I@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
__Ptr$ = 12						; size = 4
__Count$ = 16						; size = 4
?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@2@QAU_Container_proxy@2@I@Z PROC ; std::_Default_allocator_traits<std::allocator<std::_Container_proxy> >::deallocate, COMDAT

; 751  :     static void deallocate(_Alloc&, const pointer _Ptr, const size_type _Count) {

	push	ebp
	mov	ebp, esp

; 752  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 753  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

	mov	eax, DWORD PTR __Count$[ebp]
	shl	eax, 3
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	call	??$_Deallocate@$07$0A@@std@@YAXPAXI@Z	; std::_Deallocate<8,0>
	add	esp, 8

; 754  :     }

	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@2@QAU_Container_proxy@2@I@Z ENDP ; std::_Default_allocator_traits<std::allocator<std::_Container_proxy> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xutility
;	COMDAT ??$?8V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@V01@@std@@YA_NABV?$reverse_iterator@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@@0@0@Z
_TEXT	SEGMENT
tv80 = -56						; size = 4
tv82 = -52						; size = 4
tv78 = -48						; size = 4
tv81 = -44						; size = 4
$T2 = -40						; size = 12
$T3 = -28						; size = 12
$T4 = -13						; size = 1
__$EHRec$ = -12						; size = 12
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$?8V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@V01@@std@@YA_NABV?$reverse_iterator@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@@0@0@Z PROC ; std::operator==<std::_List_const_iterator<std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> > >,std::_List_const_iterator<std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> > > >, COMDAT

; 998  :     const reverse_iterator<_BidIt1>& _Left, const reverse_iterator<_BidIt2>& _Right) {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$?8V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@V01@@std@@YA_NABV?$reverse_iterator@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@@0@0@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 44					; 0000002cH
	push	edi
	lea	edi, DWORD PTR [ebp-56]
	mov	ecx, 11					; 0000000bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 999  :     return _Left.base() == _Right.base();

	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?base@?$reverse_iterator@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@@std@@QBE?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@2@XZ ; std::reverse_iterator<std::_List_const_iterator<std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> > > >::base
	mov	DWORD PTR tv81[ebp], eax
	mov	ecx, DWORD PTR tv81[ebp]
	mov	DWORD PTR tv78[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	edx, DWORD PTR tv78[ebp]
	push	edx
	lea	eax, DWORD PTR $T3[ebp]
	push	eax
	mov	ecx, DWORD PTR __Left$[ebp]
	call	?base@?$reverse_iterator@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@@std@@QBE?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@2@XZ ; std::reverse_iterator<std::_List_const_iterator<std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> > > >::base
	mov	DWORD PTR tv82[ebp], eax
	mov	ecx, DWORD PTR tv82[ebp]
	mov	DWORD PTR tv80[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR tv80[ebp]
	call	??8?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> > >::operator==
	mov	BYTE PTR $T4[ebp], al
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR $T3[ebp]
	call	??1?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@QAE@XZ
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T2[ebp]
	call	??1?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@QAE@XZ
	mov	al, BYTE PTR $T4[ebp]

; 1000 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	add	esp, 56					; 00000038H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$?8V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@V01@@std@@YA_NABV?$reverse_iterator@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@@0@0@Z$0:
	lea	ecx, DWORD PTR $T2[ebp]
	jmp	??1?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$??$?8V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@V01@@std@@YA_NABV?$reverse_iterator@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@@0@0@Z$1:
	lea	ecx, DWORD PTR $T3[ebp]
	jmp	??1?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@QAE@XZ
__ehhandler$??$?8V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@V01@@std@@YA_NABV?$reverse_iterator@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@@0@0@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-52]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$?8V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@V01@@std@@YA_NABV?$reverse_iterator@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@@0@0@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$?8V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@V01@@std@@YA_NABV?$reverse_iterator@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@@0@0@Z ENDP ; std::operator==<std::_List_const_iterator<std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> > >,std::_List_const_iterator<std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> > > >
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xlocnum
;	COMDAT ??__E?id@?$numpunct@D@std@@2V0locale@2@A@@YAXXZ
text$di	SEGMENT
??__E?id@?$numpunct@D@std@@2V0locale@2@A@@YAXXZ PROC	; `dynamic initializer for 'std::numpunct<char>::id'', COMDAT

; 266  : __PURE_APPDOMAIN_GLOBAL locale::id numpunct<_Elem>::id;

	push	ebp
	mov	ebp, esp
	push	0
	mov	ecx, OFFSET ?id@?$numpunct@D@std@@2V0locale@2@A ; std::numpunct<char>::id
	call	??0id@locale@std@@QAE@I@Z		; std::locale::id::id
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??__E?id@?$numpunct@D@std@@2V0locale@2@A@@YAXXZ ENDP	; `dynamic initializer for 'std::numpunct<char>::id''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xlocale
;	COMDAT ??__E?id@?$codecvt@DDU_Mbstatet@@@std@@2V0locale@2@A@@YAXXZ
text$di	SEGMENT
??__E?id@?$codecvt@DDU_Mbstatet@@@std@@2V0locale@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::codecvt<char,char,_Mbstatet>::id'', COMDAT

; 845  : __PURE_APPDOMAIN_GLOBAL locale::id codecvt<_Elem, _Byte, _Statype>::id;

	push	ebp
	mov	ebp, esp
	push	0
	mov	ecx, OFFSET ?id@?$codecvt@DDU_Mbstatet@@@std@@2V0locale@2@A ; std::codecvt<char,char,_Mbstatet>::id
	call	??0id@locale@std@@QAE@I@Z		; std::locale::id::id
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??__E?id@?$codecvt@DDU_Mbstatet@@@std@@2V0locale@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::codecvt<char,char,_Mbstatet>::id''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xlocnum
;	COMDAT ??__E?id@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@2V0locale@2@A@@YAXXZ
text$di	SEGMENT
??__E?id@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@2V0locale@2@A@@YAXXZ PROC ; `dynamic initializer for 'std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::id'', COMDAT

; 1570 : __PURE_APPDOMAIN_GLOBAL locale::id num_put<_Elem, _OutIt>::id;

	push	ebp
	mov	ebp, esp
	push	0
	mov	ecx, OFFSET ?id@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@2V0locale@2@A ; std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::id
	call	??0id@locale@std@@QAE@I@Z		; std::locale::id::id
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??__E?id@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@2V0locale@2@A@@YAXXZ ENDP ; `dynamic initializer for 'std::num_put<char,std::ostreambuf_iterator<char,std::char_traits<char> > >::id''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstddef
;	COMDAT ??$addressof@$$CBV?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@YAPBV?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@0@ABV10@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@$$CBV?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@YAPBV?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@0@ABV10@@Z PROC ; std::addressof<std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> > const >, COMDAT

; 279  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept { // return address of _Val

	push	ebp
	mov	ebp, esp

; 280  :     return __builtin_addressof(_Val);

	mov	eax, DWORD PTR __Val$[ebp]

; 281  : }

	pop	ebp
	ret	0
??$addressof@$$CBV?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@YAPBV?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@0@ABV10@@Z ENDP ; std::addressof<std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> > const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstddef
;	COMDAT ??$addressof@U?$_List_node@VPathEdge@@PAX@std@@@std@@YAPAU?$_List_node@VPathEdge@@PAX@0@AAU10@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@U?$_List_node@VPathEdge@@PAX@std@@@std@@YAPAU?$_List_node@VPathEdge@@PAX@0@AAU10@@Z PROC ; std::addressof<std::_List_node<PathEdge,void *> >, COMDAT

; 279  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept { // return address of _Val

	push	ebp
	mov	ebp, esp

; 280  :     return __builtin_addressof(_Val);

	mov	eax, DWORD PTR __Val$[ebp]

; 281  : }

	pop	ebp
	ret	0
??$addressof@U?$_List_node@VPathEdge@@PAX@std@@@std@@YAPAU?$_List_node@VPathEdge@@PAX@0@AAU10@@Z ENDP ; std::addressof<std::_List_node<PathEdge,void *> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstddef
;	COMDAT ??$addressof@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@YAPAV?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@0@AAV10@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@YAPAV?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@0@AAV10@@Z PROC ; std::addressof<std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> > >, COMDAT

; 279  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept { // return address of _Val

	push	ebp
	mov	ebp, esp

; 280  :     return __builtin_addressof(_Val);

	mov	eax, DWORD PTR __Val$[ebp]

; 281  : }

	pop	ebp
	ret	0
??$addressof@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@YAPAV?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@0@AAV10@@Z ENDP ; std::addressof<std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\list
;	COMDAT ??$_Emplace@ABQAV?$Goal@VRaven_Bot@@@@@?$list@PAV?$Goal@VRaven_Bot@@@@V?$allocator@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@QAEPAU?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@1@QAU21@ABQAV?$Goal@VRaven_Bot@@@@@Z
_TEXT	SEGMENT
tv82 = -36						; size = 4
tv80 = -32						; size = 4
$T1 = -28						; size = 4
__Op$ = -20						; size = 8
__Mysize$ = -8						; size = 4
_this$ = -4						; size = 4
__Where$ = 8						; size = 4
_<_Val_0>$ = 12						; size = 4
??$_Emplace@ABQAV?$Goal@VRaven_Bot@@@@@?$list@PAV?$Goal@VRaven_Bot@@@@V?$allocator@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@QAEPAU?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@1@QAU21@ABQAV?$Goal@VRaven_Bot@@@@@Z PROC ; std::list<Goal<Raven_Bot> *,std::allocator<Goal<Raven_Bot> *> >::_Emplace<Goal<Raven_Bot> * const &>, COMDAT
; _this$ = ecx

; 950  :     _Nodeptr _Emplace(const _Nodeptr _Where, _Valty&&... _Val) { // insert element at _Where

	push	ebp
	mov	ebp, esp
	sub	esp, 36					; 00000024H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx

; 951  :         size_type& _Mysize = _Mypair._Myval2._Mysize;

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 8
	mov	DWORD PTR __Mysize$[ebp], eax

; 952  :         if (_Mysize == max_size()) {

	mov	ecx, DWORD PTR _this$[ebp]
	call	?max_size@?$list@PAV?$Goal@VRaven_Bot@@@@V?$allocator@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@QBEIXZ ; std::list<Goal<Raven_Bot> *,std::allocator<Goal<Raven_Bot> *> >::max_size
	mov	ecx, DWORD PTR __Mysize$[ebp]
	cmp	DWORD PTR [ecx], eax
	jne	SHORT $LN2@Emplace

; 953  :             _Xlength_error("list<T> too long");

	push	OFFSET ??_C@_0BB@MOGOBHAF@list?$DMT?$DO?5too?5long@
	call	?_Xlength_error@std@@YAXPBD@Z		; std::_Xlength_error
$LN2@Emplace:

; 954  :         }
; 955  : 
; 956  :         _List_node_emplace_op2<_Alnode> _Op{_Getal(), _STD forward<_Valty>(_Val)...};

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$list@PAV?$Goal@VRaven_Bot@@@@V?$allocator@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@AAEAAV?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@2@XZ ; std::list<Goal<Raven_Bot> *,std::allocator<Goal<Raven_Bot> *> >::_Getal
	mov	DWORD PTR tv80[ebp], eax
	mov	edx, DWORD PTR _<_Val_0>$[ebp]
	push	edx
	call	??$forward@ABQAV?$Goal@VRaven_Bot@@@@@std@@YAABQAV?$Goal@VRaven_Bot@@@@ABQAV1@@Z ; std::forward<Goal<Raven_Bot> * const &>
	add	esp, 4
	mov	DWORD PTR tv82[ebp], eax
	mov	eax, DWORD PTR tv82[ebp]
	push	eax
	mov	ecx, DWORD PTR tv80[ebp]
	push	ecx
	lea	ecx, DWORD PTR __Op$[ebp]
	call	??$?0ABQAV?$Goal@VRaven_Bot@@@@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@1@ABQAV?$Goal@VRaven_Bot@@@@@Z ; std::_List_node_emplace_op2<std::allocator<std::_List_node<Goal<Raven_Bot> *,void *> > >::_List_node_emplace_op2<std::allocator<std::_List_node<Goal<Raven_Bot> *,void *> > ><Goal<Raven_Bot> * const &>

; 957  :         ++_Mysize;

	mov	edx, DWORD PTR __Mysize$[ebp]
	mov	eax, DWORD PTR [edx]
	add	eax, 1
	mov	ecx, DWORD PTR __Mysize$[ebp]
	mov	DWORD PTR [ecx], eax

; 958  :         return _Op._Transfer_before(_Where);

	mov	edx, DWORD PTR __Where$[ebp]
	push	edx
	lea	ecx, DWORD PTR __Op$[ebp]
	call	?_Transfer_before@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@std@@@std@@QAEPAU?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@2@QAU32@@Z ; std::_List_node_emplace_op2<std::allocator<std::_List_node<Goal<Raven_Bot> *,void *> > >::_Transfer_before
	mov	DWORD PTR $T1[ebp], eax
	lea	ecx, DWORD PTR __Op$[ebp]
	call	??1?$_List_node_emplace_op2@V?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@std@@@std@@QAE@XZ ; std::_List_node_emplace_op2<std::allocator<std::_List_node<Goal<Raven_Bot> *,void *> > >::~_List_node_emplace_op2<std::allocator<std::_List_node<Goal<Raven_Bot> *,void *> > >
	mov	eax, DWORD PTR $T1[ebp]
$LN3@Emplace:

; 959  :     }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@Emplace
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 36					; 00000024H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	3
$LN7@Emplace:
	DD	1
	DD	$LN6@Emplace
$LN6@Emplace:
	DD	-20					; ffffffecH
	DD	8
	DD	$LN5@Emplace
$LN5@Emplace:
	DB	95					; 0000005fH
	DB	79					; 0000004fH
	DB	112					; 00000070H
	DB	0
??$_Emplace@ABQAV?$Goal@VRaven_Bot@@@@@?$list@PAV?$Goal@VRaven_Bot@@@@V?$allocator@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@QAEPAU?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@1@QAU21@ABQAV?$Goal@VRaven_Bot@@@@@Z ENDP ; std::list<Goal<Raven_Bot> *,std::allocator<Goal<Raven_Bot> *> >::_Emplace<Goal<Raven_Bot> * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?pointer_to@?$pointer_traits@PAU?$_List_node@VPathEdge@@PAX@std@@@std@@SAPAU?$_List_node@VPathEdge@@PAX@2@AAU32@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
?pointer_to@?$pointer_traits@PAU?$_List_node@VPathEdge@@PAX@std@@@std@@SAPAU?$_List_node@VPathEdge@@PAX@2@AAU32@@Z PROC ; std::pointer_traits<std::_List_node<PathEdge,void *> *>::pointer_to, COMDAT

; 299  :     _NODISCARD static pointer pointer_to(_Reftype _Val) noexcept {

	push	ebp
	mov	ebp, esp

; 300  :         return _STD addressof(_Val);

	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$addressof@U?$_List_node@VPathEdge@@PAX@std@@@std@@YAPAU?$_List_node@VPathEdge@@PAX@0@AAU10@@Z ; std::addressof<std::_List_node<PathEdge,void *> >
	add	esp, 4

; 301  :     }

	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
?pointer_to@?$pointer_traits@PAU?$_List_node@VPathEdge@@PAX@std@@@std@@SAPAU?$_List_node@VPathEdge@@PAX@2@AAU32@@Z ENDP ; std::pointer_traits<std::_List_node<PathEdge,void *> *>::pointer_to
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\utility
;	COMDAT ??$exchange@PAU?$_List_node@VPathEdge@@PAX@std@@AAPAU12@@std@@YAPAU?$_List_node@VPathEdge@@PAX@0@AAPAU10@0@Z
_TEXT	SEGMENT
__Old_val$ = -4						; size = 4
__Val$ = 8						; size = 4
__New_val$ = 12						; size = 4
??$exchange@PAU?$_List_node@VPathEdge@@PAX@std@@AAPAU12@@std@@YAPAU?$_List_node@VPathEdge@@PAX@0@AAPAU10@0@Z PROC ; std::exchange<std::_List_node<PathEdge,void *> *,std::_List_node<PathEdge,void *> * &>, COMDAT

; 526  : _Ty exchange(_Ty& _Val, _Other&& _New_val) { // assign _New_val to _Val, return previous _Val

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH

; 527  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

	mov	eax, DWORD PTR __Val$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Old_val$[ebp], ecx

; 528  :     _Val         = static_cast<_Other&&>(_New_val);

	mov	edx, DWORD PTR __Val$[ebp]
	mov	eax, DWORD PTR __New_val$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [edx], ecx

; 529  :     return _Old_val;

	mov	eax, DWORD PTR __Old_val$[ebp]

; 530  : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$exchange@PAU?$_List_node@VPathEdge@@PAX@std@@AAPAU12@@std@@YAPAU?$_List_node@VPathEdge@@PAX@0@AAPAU10@0@Z ENDP ; std::exchange<std::_List_node<PathEdge,void *> *,std::_List_node<PathEdge,void *> * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Construct_in_place@PAU?$_List_node@VPathEdge@@PAX@std@@$$T@std@@YAXAAPAU?$_List_node@VPathEdge@@PAX@0@$$QA$$T@Z
_TEXT	SEGMENT
$T1 = -4						; size = 4
__Obj$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$_Construct_in_place@PAU?$_List_node@VPathEdge@@PAX@std@@$$T@std@@YAXAAPAU?$_List_node@VPathEdge@@PAX@0@$$QA$$T@Z PROC ; std::_Construct_in_place<std::_List_node<PathEdge,void *> *,std::nullptr_t>, COMDAT

; 198  : void _Construct_in_place(_Ty& _Obj, _Types&&... _Args) _NOEXCEPT_COND(is_nothrow_constructible_v<_Ty, _Types...>) {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH

; 199  :     ::new (const_cast<void*>(static_cast<const volatile void*>(_STD addressof(_Obj))))

	mov	eax, DWORD PTR __Obj$[ebp]
	push	eax
	call	??$addressof@PAU?$_List_node@VPathEdge@@PAX@std@@@std@@YAPAPAU?$_List_node@VPathEdge@@PAX@0@AAPAU10@@Z ; std::addressof<std::_List_node<PathEdge,void *> *>
	add	esp, 4
	push	eax
	push	4
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T1[ebp], eax
	mov	ecx, DWORD PTR _<_Args_0>$[ebp]
	push	ecx
	call	??$forward@$$T@std@@YA$$QA$$TAA$$T@Z	; std::forward<std::nullptr_t>
	add	esp, 4
	mov	edx, DWORD PTR $T1[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [edx], eax

; 200  :         _Ty(_STD forward<_Types>(_Args)...);
; 201  : }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Construct_in_place@PAU?$_List_node@VPathEdge@@PAX@std@@$$T@std@@YAXAAPAU?$_List_node@VPathEdge@@PAX@0@$$QA$$T@Z ENDP ; std::_Construct_in_place<std::_List_node<PathEdge,void *> *,std::nullptr_t>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Destroy_in_place@PAU?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@std@@YAXAAPAU?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@0@@Z
_TEXT	SEGMENT
__Obj$ = 8						; size = 4
??$_Destroy_in_place@PAU?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@std@@YAXAAPAU?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@0@@Z PROC ; std::_Destroy_in_place<std::_List_node<Goal<Raven_Bot> *,void *> *>, COMDAT

; 321  : void _Destroy_in_place(_Ty& _Obj) noexcept {

	push	ebp
	mov	ebp, esp

; 322  :     _Obj.~_Ty();
; 323  : }

	pop	ebp
	ret	0
??$_Destroy_in_place@PAU?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@std@@YAXAAPAU?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@0@@Z ENDP ; std::_Destroy_in_place<std::_List_node<Goal<Raven_Bot> *,void *> *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\list
;	COMDAT ??$_Freenode@V?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@std@@@?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@SAXAAV?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@1@PAU01@@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$_Freenode@V?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@std@@@?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@SAXAAV?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@1@PAU01@@Z PROC ; std::_List_node<Goal<Raven_Bot> *,void *>::_Freenode<std::allocator<std::_List_node<Goal<Raven_Bot> *,void *> > >, COMDAT

; 330  :     static void _Freenode(_Alnode& _Al, _Nodeptr _Ptr) noexcept { // destroy all members in _Ptr and deallocate with _Al

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Freenode@V?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@std@@@?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@SAXAAV?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@1@PAU01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 331  :         allocator_traits<_Alnode>::destroy(_Al, _STD addressof(_Ptr->_Myval));

	mov	eax, DWORD PTR __Ptr$[ebp]
	add	eax, 8
	push	eax
	call	??$addressof@PAV?$Goal@VRaven_Bot@@@@@std@@YAPAPAV?$Goal@VRaven_Bot@@@@AAPAV1@@Z ; std::addressof<Goal<Raven_Bot> *>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	push	ecx
	call	??$destroy@PAV?$Goal@VRaven_Bot@@@@@?$_Default_allocator_traits@V?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@1@QAPAV?$Goal@VRaven_Bot@@@@@Z ; std::_Default_allocator_traits<std::allocator<std::_List_node<Goal<Raven_Bot> *,void *> > >::destroy<Goal<Raven_Bot> *>
	add	esp, 8

; 332  :         _Freenode0(_Al, _Ptr);

	mov	edx, DWORD PTR __Ptr$[ebp]
	push	edx
	mov	eax, DWORD PTR __Al$[ebp]
	push	eax
	call	??$_Freenode0@V?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@std@@@?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@SAXAAV?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@1@PAU01@@Z ; std::_List_node<Goal<Raven_Bot> *,void *>::_Freenode0<std::allocator<std::_List_node<Goal<Raven_Bot> *,void *> > >
	add	esp, 8

; 333  :     }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Freenode@V?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@std@@@?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@SAXAAV?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@1@PAU01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Freenode@V?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@std@@@?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@SAXAAV?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@1@PAU01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Freenode@V?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@std@@@?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@SAXAAV?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@1@PAU01@@Z ENDP ; std::_List_node<Goal<Raven_Bot> *,void *>::_Freenode<std::allocator<std::_List_node<Goal<Raven_Bot> *,void *> > >
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@AAPAU?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@std@@YAAAPAU?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@0@AAPAU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAPAU?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@std@@YAAAPAU?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@0@AAPAU10@@Z PROC ; std::forward<std::_List_node<Goal<Raven_Bot> *,void *> * &>, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

	push	ebp
	mov	ebp, esp

; 1421 :     return static_cast<_Ty&&>(_Arg);

	mov	eax, DWORD PTR __Arg$[ebp]

; 1422 : }

	pop	ebp
	ret	0
??$forward@AAPAU?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@std@@YAAAPAU?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@0@AAPAU10@@Z ENDP ; std::forward<std::_List_node<Goal<Raven_Bot> *,void *> * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstddef
;	COMDAT ??$addressof@PAU?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@std@@YAPAPAU?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@0@AAPAU10@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@PAU?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@std@@YAPAPAU?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@0@AAPAU10@@Z PROC ; std::addressof<std::_List_node<Goal<Raven_Bot> *,void *> *>, COMDAT

; 279  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept { // return address of _Val

	push	ebp
	mov	ebp, esp

; 280  :     return __builtin_addressof(_Val);

	mov	eax, DWORD PTR __Val$[ebp]

; 281  : }

	pop	ebp
	ret	0
??$addressof@PAU?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@std@@YAPAPAU?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@0@AAPAU10@@Z ENDP ; std::addressof<std::_List_node<Goal<Raven_Bot> *,void *> *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z
_TEXT	SEGMENT
__Ptr$ = -12						; size = 4
__Ptr_container$ = -8					; size = 4
__Block_size$ = -4					; size = 4
__Bytes$ = 8						; size = 4
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z PROC ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>, COMDAT

; 83   : _DECLSPEC_ALLOCATOR void* _Allocate_manually_vector_aligned(const size_t _Bytes) {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH

; 84   :     // allocate _Bytes manually aligned to at least _Big_allocation_alignment
; 85   :     const size_t _Block_size = _Non_user_size + _Bytes;

	mov	eax, DWORD PTR __Bytes$[ebp]
	add	eax, 39					; 00000027H
	mov	DWORD PTR __Block_size$[ebp], eax

; 86   :     if (_Block_size <= _Bytes) {

	mov	ecx, DWORD PTR __Block_size$[ebp]
	cmp	ecx, DWORD PTR __Bytes$[ebp]
	ja	SHORT $LN8@Allocate_m

; 87   :         _Throw_bad_array_new_length(); // add overflow

	call	?_Throw_bad_array_new_length@std@@YAXXZ	; std::_Throw_bad_array_new_length
$LN8@Allocate_m:

; 88   :     }
; 89   : 
; 90   :     const uintptr_t _Ptr_container = reinterpret_cast<uintptr_t>(_Traits::_Allocate(_Block_size));

	mov	edx, DWORD PTR __Block_size$[ebp]
	push	edx
	call	?_Allocate@_Default_allocate_traits@std@@SAPAXI@Z ; std::_Default_allocate_traits::_Allocate
	add	esp, 4
	mov	DWORD PTR __Ptr_container$[ebp], eax
$LN4@Allocate_m:

; 91   :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

	cmp	DWORD PTR __Ptr_container$[ebp], 0
	je	SHORT $LN7@Allocate_m
	jmp	SHORT $LN2@Allocate_m
$LN7@Allocate_m:
	push	OFFSET $SG183185
	push	OFFSET $SG183186
	push	0
	push	91					; 0000005bH
	push	OFFSET $SG183187
	push	2
	call	__CrtDbgReport
	add	esp, 24					; 00000018H
	cmp	eax, 1
	jne	SHORT $LN12@Allocate_m
	int	3
$LN12@Allocate_m:
	push	0
	push	91					; 0000005bH
	push	OFFSET $SG183188
	push	OFFSET $SG183189
	push	OFFSET $SG183190
	call	__invalid_parameter
	add	esp, 20					; 00000014H
	xor	ecx, ecx
	jne	SHORT $LN7@Allocate_m
$LN2@Allocate_m:
	xor	edx, edx
	jne	SHORT $LN4@Allocate_m

; 92   :     void* const _Ptr = reinterpret_cast<void*>((_Ptr_container + _Non_user_size) & ~(_Big_allocation_alignment - 1));

	mov	eax, DWORD PTR __Ptr_container$[ebp]
	add	eax, 39					; 00000027H
	and	eax, -32				; ffffffe0H
	mov	DWORD PTR __Ptr$[ebp], eax

; 93   :     static_cast<uintptr_t*>(_Ptr)[-1] = _Ptr_container;

	mov	ecx, 4
	imul	edx, ecx, -1
	mov	eax, DWORD PTR __Ptr$[ebp]
	mov	ecx, DWORD PTR __Ptr_container$[ebp]
	mov	DWORD PTR [eax+edx], ecx

; 94   : 
; 95   : #ifdef _DEBUG
; 96   :     static_cast<uintptr_t*>(_Ptr)[-2] = _Big_allocation_sentinel;

	mov	edx, 4
	imul	eax, edx, -2
	mov	ecx, DWORD PTR __Ptr$[ebp]
	mov	DWORD PTR [ecx+eax], -84215046		; fafafafaH

; 97   : #endif // _DEBUG
; 98   :     return _Ptr;

	mov	eax, DWORD PTR __Ptr$[ebp]
$LN11@Allocate_m:

; 99   : }

	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ENDP ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$destroy@VPathEdge@@@?$_Default_allocator_traits@V?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@1@QAVPathEdge@@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$destroy@VPathEdge@@@?$_Default_allocator_traits@V?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@1@QAVPathEdge@@@Z PROC ; std::_Default_allocator_traits<std::allocator<std::_List_node<PathEdge,void *> > >::destroy<PathEdge>, COMDAT

; 762  :     static void destroy(_Alloc&, _Uty* const _Ptr) {

	push	ebp
	mov	ebp, esp

; 763  :         _Ptr->~_Uty();
; 764  :     }

	pop	ebp
	ret	0
??$destroy@VPathEdge@@@?$_Default_allocator_traits@V?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@1@QAVPathEdge@@@Z ENDP ; std::_Default_allocator_traits<std::allocator<std::_List_node<PathEdge,void *> > >::destroy<PathEdge>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Destroy_in_place@PAU?$_List_node@VPathEdge@@PAX@std@@@std@@YAXAAPAU?$_List_node@VPathEdge@@PAX@0@@Z
_TEXT	SEGMENT
__Obj$ = 8						; size = 4
??$_Destroy_in_place@PAU?$_List_node@VPathEdge@@PAX@std@@@std@@YAXAAPAU?$_List_node@VPathEdge@@PAX@0@@Z PROC ; std::_Destroy_in_place<std::_List_node<PathEdge,void *> *>, COMDAT

; 321  : void _Destroy_in_place(_Ty& _Obj) noexcept {

	push	ebp
	mov	ebp, esp

; 322  :     _Obj.~_Ty();
; 323  : }

	pop	ebp
	ret	0
??$_Destroy_in_place@PAU?$_List_node@VPathEdge@@PAX@std@@@std@@YAXAAPAU?$_List_node@VPathEdge@@PAX@0@@Z ENDP ; std::_Destroy_in_place<std::_List_node<PathEdge,void *> *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@PAU_Container_base12@std@@@std@@YA$$QAPAU_Container_base12@0@AAPAU10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@PAU_Container_base12@std@@@std@@YA$$QAPAU_Container_base12@0@AAPAU10@@Z PROC ; std::forward<std::_Container_base12 *>, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

	push	ebp
	mov	ebp, esp

; 1421 :     return static_cast<_Ty&&>(_Arg);

	mov	eax, DWORD PTR __Arg$[ebp]

; 1422 : }

	pop	ebp
	ret	0
??$forward@PAU_Container_base12@std@@@std@@YA$$QAPAU_Container_base12@0@AAPAU10@@Z ENDP ; std::forward<std::_Container_base12 *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstddef
;	COMDAT ??$addressof@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@AAU10@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@AAU10@@Z PROC ; std::addressof<std::_Container_proxy>, COMDAT

; 279  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept { // return address of _Val

	push	ebp
	mov	ebp, esp

; 280  :     return __builtin_addressof(_Val);

	mov	eax, DWORD PTR __Val$[ebp]

; 281  : }

	pop	ebp
	ret	0
??$addressof@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@AAU10@@Z ENDP ; std::addressof<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\list
;	COMDAT ??$_Attach_head@U?$_List_simple_types@VPathEdge@@@std@@@?$_List_node_insert_op@V?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@std@@@std@@QAEXAAV?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@1@@Z
_TEXT	SEGMENT
$T2 = -36						; size = 4
__Newnode$ = -28					; size = 8
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__My_data$ = 8						; size = 4
??$_Attach_head@U?$_List_simple_types@VPathEdge@@@std@@@?$_List_node_insert_op@V?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@std@@@std@@QAEXAAV?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@1@@Z PROC ; std::_List_node_insert_op<std::allocator<std::_List_node<PathEdge,void *> > >::_Attach_head<std::_List_simple_types<PathEdge> >, COMDAT
; _this$ = ecx

; 642  :     void _Attach_head(_List_val<_Val_types>& _My_data) {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Attach_head@U?$_List_simple_types@VPathEdge@@@std@@@?$_List_node_insert_op@V?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@std@@@std@@QAEXAAV?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@1@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 24					; 00000018H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 643  :         _Alloc_construct_ptr<_Alnode> _Newnode(_Al);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	lea	ecx, DWORD PTR __Newnode$[ebp]
	call	??0?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@1@@Z ; std::_Alloc_construct_ptr<std::allocator<std::_List_node<PathEdge,void *> > >::_Alloc_construct_ptr<std::allocator<std::_List_node<PathEdge,void *> > >
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 644  :         _Newnode._Allocate(); // throws, assumed nothrow hereafter

	lea	ecx, DWORD PTR __Newnode$[ebp]
	call	?_Allocate@?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@std@@@std@@QAEXXZ ; std::_Alloc_construct_ptr<std::allocator<std::_List_node<PathEdge,void *> > >::_Allocate

; 645  :         if (_Added == 0) {

	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+8], 0
	jne	SHORT $LN2@Attach_hea

; 646  :             _Construct_in_place(_Newnode._Ptr->_Next, _Newnode._Ptr);

	lea	eax, DWORD PTR __Newnode$[ebp+4]
	push	eax
	mov	ecx, DWORD PTR __Newnode$[ebp+4]
	push	ecx
	call	??$_Construct_in_place@PAU?$_List_node@VPathEdge@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_List_node@VPathEdge@@PAX@0@0@Z ; std::_Construct_in_place<std::_List_node<PathEdge,void *> *,std::_List_node<PathEdge,void *> * &>
	add	esp, 8

; 647  :             _Construct_in_place(_Newnode._Ptr->_Prev, _Newnode._Ptr);

	lea	edx, DWORD PTR __Newnode$[ebp+4]
	push	edx
	mov	eax, DWORD PTR __Newnode$[ebp+4]
	add	eax, 4
	push	eax
	call	??$_Construct_in_place@PAU?$_List_node@VPathEdge@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_List_node@VPathEdge@@PAX@0@0@Z ; std::_Construct_in_place<std::_List_node<PathEdge,void *> *,std::_List_node<PathEdge,void *> * &>
	add	esp, 8

; 648  :             _My_data._Mysize = 0;

	mov	ecx, DWORD PTR __My_data$[ebp]
	mov	DWORD PTR [ecx+8], 0

; 649  :         } else {

	jmp	$LN3@Attach_hea
$LN2@Attach_hea:

; 650  :             _Construct_in_place(_Newnode._Ptr->_Next, _Base._Next);

	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 16					; 00000010H
	push	edx
	mov	eax, DWORD PTR __Newnode$[ebp+4]
	push	eax
	call	??$_Construct_in_place@PAU?$_List_node@VPathEdge@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_List_node@VPathEdge@@PAX@0@0@Z ; std::_Construct_in_place<std::_List_node<PathEdge,void *> *,std::_List_node<PathEdge,void *> * &>
	add	esp, 8

; 651  :             _Construct_in_place(_Newnode._Ptr->_Prev, _Tail);

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	push	ecx
	mov	edx, DWORD PTR __Newnode$[ebp+4]
	add	edx, 4
	push	edx
	call	??$_Construct_in_place@PAU?$_List_node@VPathEdge@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_List_node@VPathEdge@@PAX@0@0@Z ; std::_Construct_in_place<std::_List_node<PathEdge,void *> *,std::_List_node<PathEdge,void *> * &>
	add	esp, 8

; 652  :             _Base._Next->_Prev = _Newnode._Ptr;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+16]
	mov	edx, DWORD PTR __Newnode$[ebp+4]
	mov	DWORD PTR [ecx+4], edx

; 653  :             _Tail->_Next       = _Newnode._Ptr;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR __Newnode$[ebp+4]
	mov	DWORD PTR [ecx], edx

; 654  :             _My_data._Mysize   = _STD exchange(_Added, size_type{0});

	mov	DWORD PTR $T2[ebp], 0
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	push	ecx
	call	??$exchange@II@std@@YAIAAI$$QAI@Z	; std::exchange<unsigned int,unsigned int>
	add	esp, 8
	mov	edx, DWORD PTR __My_data$[ebp]
	mov	DWORD PTR [edx+8], eax

; 655  :             _Destroy_in_place(_Tail->_Next);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	??$_Destroy_in_place@PAU?$_List_node@VPathEdge@@PAX@std@@@std@@YAXAAPAU?$_List_node@VPathEdge@@PAX@0@@Z ; std::_Destroy_in_place<std::_List_node<PathEdge,void *> *>
	add	esp, 4

; 656  :             _Tail = pointer_traits<pointer>::pointer_to(_Base);

	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 16					; 00000010H
	push	edx
	call	?pointer_to@?$pointer_traits@PAU?$_List_node@VPathEdge@@PAX@std@@@std@@SAPAU?$_List_node@VPathEdge@@PAX@2@AAU32@@Z ; std::pointer_traits<std::_List_node<PathEdge,void *> *>::pointer_to
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], eax
$LN3@Attach_hea:

; 657  :         }
; 658  : 
; 659  :         _My_data._Myhead = _Newnode._Release();

	lea	ecx, DWORD PTR __Newnode$[ebp]
	call	?_Release@?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@std@@@std@@QAEPAU?$_List_node@VPathEdge@@PAX@2@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_List_node<PathEdge,void *> > >::_Release
	mov	edx, DWORD PTR __My_data$[ebp]
	mov	DWORD PTR [edx+4], eax

; 660  :     }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Newnode$[ebp]
	call	??1?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@std@@@std@@QAE@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_List_node<PathEdge,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_List_node<PathEdge,void *> > >
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@Attach_hea
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 36					; 00000024H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
$LN9@Attach_hea:
	DD	1
	DD	$LN8@Attach_hea
$LN8@Attach_hea:
	DD	-28					; ffffffe4H
	DD	8
	DD	$LN6@Attach_hea
$LN6@Attach_hea:
	DB	95					; 0000005fH
	DB	78					; 0000004eH
	DB	101					; 00000065H
	DB	119					; 00000077H
	DB	110					; 0000006eH
	DB	111					; 0000006fH
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Attach_head@U?$_List_simple_types@VPathEdge@@@std@@@?$_List_node_insert_op@V?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@std@@@std@@QAEXAAV?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@1@@Z$0:
	lea	ecx, DWORD PTR __Newnode$[ebp]
	jmp	??1?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@std@@@std@@QAE@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_List_node<PathEdge,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_List_node<PathEdge,void *> > >
__ehhandler$??$_Attach_head@U?$_List_simple_types@VPathEdge@@@std@@@?$_List_node_insert_op@V?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@std@@@std@@QAEXAAV?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@1@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-28]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Attach_head@U?$_List_simple_types@VPathEdge@@@std@@@?$_List_node_insert_op@V?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@std@@@std@@QAEXAAV?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@1@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Attach_head@U?$_List_simple_types@VPathEdge@@@std@@@?$_List_node_insert_op@V?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@std@@@std@@QAEXAAV?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@1@@Z ENDP ; std::_List_node_insert_op<std::allocator<std::_List_node<PathEdge,void *> > >::_Attach_head<std::_List_simple_types<PathEdge> >
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\list
;	COMDAT ??$_Append_range_unchecked@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@U_Iterator_base0@2@@std@@V12@@?$_List_node_insert_op@V?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@std@@@std@@QAEXV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@U_Iterator_base0@2@@1@V21@@Z
_TEXT	SEGMENT
__Newnode$ = -28					; size = 8
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
??$_Append_range_unchecked@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@U_Iterator_base0@2@@std@@V12@@?$_List_node_insert_op@V?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@std@@@std@@QAEXV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@U_Iterator_base0@2@@1@V21@@Z PROC ; std::_List_node_insert_op<std::allocator<std::_List_node<PathEdge,void *> > >::_Append_range_unchecked<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<PathEdge> >,std::_Iterator_base0>,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<PathEdge> >,std::_Iterator_base0> >, COMDAT
; _this$ = ecx

; 597  :     void _Append_range_unchecked(_InIt _First, const _Sentinel _Last) {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Append_range_unchecked@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@U_Iterator_base0@2@@std@@V12@@?$_List_node_insert_op@V?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@std@@@std@@QAEXV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@U_Iterator_base0@2@@1@V21@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 598  :         // Append new elements constructed from [_First, _Last) to this insert operation.
; 599  :         _Alloc_construct_ptr<_Alnode> _Newnode(_Al);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	push	ecx
	lea	ecx, DWORD PTR __Newnode$[ebp]
	call	??0?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@1@@Z ; std::_Alloc_construct_ptr<std::allocator<std::_List_node<PathEdge,void *> > >::_Alloc_construct_ptr<std::allocator<std::_List_node<PathEdge,void *> > >
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 600  :         for (; _First != _Last; ++_First) {

	jmp	SHORT $LN4@Append_ran
$LN2@Append_ran:
	lea	ecx, DWORD PTR __First$[ebp]
	call	??E?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<PathEdge> >,std::_Iterator_base0>::operator++
$LN4@Append_ran:
	lea	edx, DWORD PTR __Last$[ebp]
	push	edx
	lea	ecx, DWORD PTR __First$[ebp]
	call	??9?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@U_Iterator_base0@2@@std@@QBE_NABV01@@Z ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<PathEdge> >,std::_Iterator_base0>::operator!=
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN3@Append_ran

; 601  :             _Newnode._Allocate(); // throws

	lea	ecx, DWORD PTR __Newnode$[ebp]
	call	?_Allocate@?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@std@@@std@@QAEXXZ ; std::_Alloc_construct_ptr<std::allocator<std::_List_node<PathEdge,void *> > >::_Allocate

; 602  :             _Alnode_traits::construct(_Al, _STD addressof(_Newnode._Ptr->_Myval), *_First); // throws

	lea	ecx, DWORD PTR __First$[ebp]
	call	??D?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@U_Iterator_base0@2@@std@@QBEABVPathEdge@@XZ ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<PathEdge> >,std::_Iterator_base0>::operator*
	push	eax
	mov	ecx, DWORD PTR __Newnode$[ebp+4]
	add	ecx, 8
	push	ecx
	call	??$addressof@VPathEdge@@@std@@YAPAVPathEdge@@AAV1@@Z ; std::addressof<PathEdge>
	add	esp, 4
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	??$construct@VPathEdge@@ABV1@@?$_Default_allocator_traits@V?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@1@QAVPathEdge@@ABV3@@Z ; std::_Default_allocator_traits<std::allocator<std::_List_node<PathEdge,void *> > >::construct<PathEdge,PathEdge const &>
	add	esp, 12					; 0000000cH

; 603  :             _Construct_in_place(_Tail->_Next, _Newnode._Ptr);

	lea	ecx, DWORD PTR __Newnode$[ebp+4]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	??$_Construct_in_place@PAU?$_List_node@VPathEdge@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_List_node@VPathEdge@@PAX@0@0@Z ; std::_Construct_in_place<std::_List_node<PathEdge,void *> *,std::_List_node<PathEdge,void *> * &>
	add	esp, 8

; 604  :             _Construct_in_place(_Newnode._Ptr->_Prev, _Tail);

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	push	ecx
	mov	edx, DWORD PTR __Newnode$[ebp+4]
	add	edx, 4
	push	edx
	call	??$_Construct_in_place@PAU?$_List_node@VPathEdge@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_List_node@VPathEdge@@PAX@0@0@Z ; std::_Construct_in_place<std::_List_node<PathEdge,void *> *,std::_List_node<PathEdge,void *> * &>
	add	esp, 8

; 605  :             _Tail = _Newnode._Ptr;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Newnode$[ebp+4]
	mov	DWORD PTR [eax+4], ecx

; 606  :             ++_Added;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	add	eax, 1
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], eax

; 607  :         }

	jmp	$LN2@Append_ran
$LN3@Append_ran:

; 608  : 
; 609  :         _Newnode._Ptr = pointer{};

	mov	DWORD PTR __Newnode$[ebp+4], 0

; 610  :     }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Newnode$[ebp]
	call	??1?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@std@@@std@@QAE@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_List_node<PathEdge,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_List_node<PathEdge,void *> > >
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN10@Append_ran
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 32					; 00000020H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	3
$LN10@Append_ran:
	DD	1
	DD	$LN9@Append_ran
$LN9@Append_ran:
	DD	-28					; ffffffe4H
	DD	8
	DD	$LN7@Append_ran
$LN7@Append_ran:
	DB	95					; 0000005fH
	DB	78					; 0000004eH
	DB	101					; 00000065H
	DB	119					; 00000077H
	DB	110					; 0000006eH
	DB	111					; 0000006fH
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Append_range_unchecked@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@U_Iterator_base0@2@@std@@V12@@?$_List_node_insert_op@V?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@std@@@std@@QAEXV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@U_Iterator_base0@2@@1@V21@@Z$0:
	lea	ecx, DWORD PTR __Newnode$[ebp]
	jmp	??1?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@std@@@std@@QAE@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_List_node<PathEdge,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_List_node<PathEdge,void *> > >
__ehhandler$??$_Append_range_unchecked@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@U_Iterator_base0@2@@std@@V12@@?$_List_node_insert_op@V?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@std@@@std@@QAEXV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@U_Iterator_base0@2@@1@V21@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Append_range_unchecked@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@U_Iterator_base0@2@@std@@V12@@?$_List_node_insert_op@V?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@std@@@std@@QAEXV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@U_Iterator_base0@2@@1@V21@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Append_range_unchecked@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@U_Iterator_base0@2@@std@@V12@@?$_List_node_insert_op@V?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@std@@@std@@QAEXV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@U_Iterator_base0@2@@1@V21@@Z ENDP ; std::_List_node_insert_op<std::allocator<std::_List_node<PathEdge,void *> > >::_Append_range_unchecked<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<PathEdge> >,std::_Iterator_base0>,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<PathEdge> >,std::_Iterator_base0> >
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\list
;	COMDAT ??1?$_List_node_insert_op@V?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
$T2 = -32						; size = 4
__Subject$ = -24					; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$_List_node_insert_op@V?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@std@@@std@@QAE@XZ PROC ; std::_List_node_insert_op<std::allocator<std::_List_node<PathEdge,void *> > >::~_List_node_insert_op<std::allocator<std::_List_node<PathEdge,void *> > >, COMDAT
; _this$ = ecx

; 662  :     ~_List_node_insert_op() {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$_List_node_insert_op@V?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 663  :         if (_Added == 0) {

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	jne	SHORT $LN4@List_node_

; 664  :             return;

	jmp	SHORT $LN5@List_node_
$LN4@List_node_:

; 665  :         }
; 666  : 
; 667  :         _Construct_in_place(_Tail->_Next, nullptr);

	mov	DWORD PTR $T2[ebp], 0
	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	??$_Construct_in_place@PAU?$_List_node@VPathEdge@@PAX@std@@$$T@std@@YAXAAPAU?$_List_node@VPathEdge@@PAX@0@$$QA$$T@Z ; std::_Construct_in_place<std::_List_node<PathEdge,void *> *,std::nullptr_t>
	add	esp, 8

; 668  :         pointer _Subject = _Base._Next;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	mov	DWORD PTR __Subject$[ebp], edx
$LN2@List_node_:

; 669  :         while (_Subject) {

	cmp	DWORD PTR __Subject$[ebp], 0
	je	SHORT $LN3@List_node_

; 670  :             value_type::_Freenode(_Al, _STD exchange(_Subject, _Subject->_Next));

	mov	eax, DWORD PTR __Subject$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Subject$[ebp]
	push	ecx
	call	??$exchange@PAU?$_List_node@VPathEdge@@PAX@std@@AAPAU12@@std@@YAPAU?$_List_node@VPathEdge@@PAX@0@AAPAU10@0@Z ; std::exchange<std::_List_node<PathEdge,void *> *,std::_List_node<PathEdge,void *> * &>
	add	esp, 8
	push	eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	??$_Freenode@V?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@std@@@?$_List_node@VPathEdge@@PAX@std@@SAXAAV?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@1@PAU01@@Z ; std::_List_node<PathEdge,void *>::_Freenode<std::allocator<std::_List_node<PathEdge,void *> > >
	add	esp, 8

; 671  :         }

	jmp	SHORT $LN2@List_node_
$LN3@List_node_:

; 672  : 
; 673  :         _Destroy_in_place(_Base._Next);

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	push	ecx
	call	??$_Destroy_in_place@PAU?$_List_node@VPathEdge@@PAX@std@@@std@@YAXAAPAU?$_List_node@VPathEdge@@PAX@0@@Z ; std::_Destroy_in_place<std::_List_node<PathEdge,void *> *>
	add	esp, 4
$LN5@List_node_:

; 674  :     }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@List_node_
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 32					; 00000020H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN9@List_node_:
	DD	1
	DD	$LN8@List_node_
$LN8@List_node_:
	DD	-24					; ffffffe8H
	DD	4
	DD	$LN6@List_node_
$LN6@List_node_:
	DB	95					; 0000005fH
	DB	83					; 00000053H
	DB	117					; 00000075H
	DB	98					; 00000062H
	DB	106					; 0000006aH
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1?$_List_node_insert_op@V?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@std@@@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$_List_node_insert_op@V?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@std@@@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$_List_node_insert_op@V?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@std@@@std@@QAE@XZ ENDP ; std::_List_node_insert_op<std::allocator<std::_List_node<PathEdge,void *> > >::~_List_node_insert_op<std::allocator<std::_List_node<PathEdge,void *> > >
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\list
;	COMDAT ??0?$_List_node_insert_op@V?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Al_$ = 8						; size = 4
??0?$_List_node_insert_op@V?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@1@@Z PROC ; std::_List_node_insert_op<std::allocator<std::_List_node<PathEdge,void *> > >::_List_node_insert_op<std::allocator<std::_List_node<PathEdge,void *> > >, COMDAT
; _this$ = ecx

; 575  :         : _Al(_Al_), _Tail(pointer_traits<pointer>::pointer_to(_Base)), _Added(0) {}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Al_$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 16					; 00000010H
	push	edx
	call	?pointer_to@?$pointer_traits@PAU?$_List_node@VPathEdge@@PAX@std@@@std@@SAPAU?$_List_node@VPathEdge@@PAX@2@AAU32@@Z ; std::pointer_traits<std::_List_node<PathEdge,void *> *>::pointer_to
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], eax
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], 0
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_List_node_insert_op@V?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@1@@Z ENDP ; std::_List_node_insert_op<std::allocator<std::_List_node<PathEdge,void *> > >::_List_node_insert_op<std::allocator<std::_List_node<PathEdge,void *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@V?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@std@@@std@@YA$$QAV?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@V?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@std@@@std@@YA$$QAV?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@0@AAV10@@Z PROC ; std::forward<std::allocator<std::_List_node<PathEdge,void *> > >, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

	push	ebp
	mov	ebp, esp

; 1421 :     return static_cast<_Ty&&>(_Arg);

	mov	eax, DWORD PTR __Arg$[ebp]

; 1422 : }

	pop	ebp
	ret	0
??$forward@V?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@std@@@std@@YA$$QAV?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@0@AAV10@@Z ENDP ; std::forward<std::allocator<std::_List_node<PathEdge,void *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@QAU_Container_proxy@0@@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@QAU_Container_proxy@0@@Z PROC ; std::_Deallocate_plain<std::allocator<std::_Container_proxy> >, COMDAT

; 1081 : void _Deallocate_plain(_Alloc& _Al, typename _Alloc::value_type* const _Ptr) noexcept {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@QAU_Container_proxy@0@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 1082 :     // deallocate a plain pointer using an allocator
; 1083 :     using _Alloc_traits = allocator_traits<_Alloc>;
; 1084 :     if constexpr (is_same_v<_Alloc_ptr_t<_Alloc>, typename _Alloc::value_type*>) {
; 1085 :         _Alloc_traits::deallocate(_Al, _Ptr, 1);

	push	1
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	push	ecx
	call	?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAAV?$allocator@U_Container_proxy@std@@@2@QAU_Container_proxy@2@I@Z ; std::_Default_allocator_traits<std::allocator<std::_Container_proxy> >::deallocate
	add	esp, 12					; 0000000cH

; 1086 :     } else {
; 1087 :         using _Ptr_traits = pointer_traits<_Alloc_ptr_t<_Alloc>>;
; 1088 :         _Alloc_traits::deallocate(_Al, _Ptr_traits::pointer_to(*_Ptr), 1);
; 1089 :     }
; 1090 : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@QAU_Container_proxy@0@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@QAU_Container_proxy@0@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@QAU_Container_proxy@0@@Z ENDP ; std::_Deallocate_plain<std::allocator<std::_Container_proxy> >
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xutility
;	COMDAT ??$?9V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@V01@@std@@YA_NABV?$reverse_iterator@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@@0@0@Z
_TEXT	SEGMENT
tv69 = -4						; size = 4
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$?9V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@V01@@std@@YA_NABV?$reverse_iterator@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@@0@0@Z PROC ; std::operator!=<std::_List_const_iterator<std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> > >,std::_List_const_iterator<std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> > > >, COMDAT

; 1004 :     const reverse_iterator<_BidIt1>& _Left, const reverse_iterator<_BidIt2>& _Right) {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH

; 1005 :     return !(_Left == _Right);

	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Left$[ebp]
	push	ecx
	call	??$?8V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@V01@@std@@YA_NABV?$reverse_iterator@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@@0@0@Z ; std::operator==<std::_List_const_iterator<std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> > >,std::_List_const_iterator<std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> > > >
	add	esp, 8
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv69[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv69[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv69[ebp]

; 1006 : }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$?9V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@V01@@std@@YA_NABV?$reverse_iterator@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@@0@0@Z ENDP ; std::operator!=<std::_List_const_iterator<std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> > >,std::_List_const_iterator<std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??4?$reverse_iterator@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@@std@@QAEAAV01@$$QAV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??4?$reverse_iterator@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@@std@@QAEAAV01@$$QAV01@@Z PROC ; std::reverse_iterator<std::_List_const_iterator<std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> > > >::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@QAEAAV01@$$QAV01@@Z
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4?$reverse_iterator@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@@std@@QAEAAV01@$$QAV01@@Z ENDP ; std::reverse_iterator<std::_List_const_iterator<std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> > > >::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$reverse_iterator@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$reverse_iterator@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@@std@@QAE@XZ PROC ; std::reverse_iterator<std::_List_const_iterator<std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> > > >::~reverse_iterator<std::_List_const_iterator<std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> > > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@QAE@XZ
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$reverse_iterator@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@@std@@QAE@XZ ENDP ; std::reverse_iterator<std::_List_const_iterator<std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> > > >::~reverse_iterator<std::_List_const_iterator<std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xutility
;	COMDAT ??E?$reverse_iterator@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??E?$reverse_iterator@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::reverse_iterator<std::_List_const_iterator<std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> > > >::operator++, COMDAT
; _this$ = ecx

; 908  :     _CONSTEXPR17 reverse_iterator& operator++() {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 909  :         --current;

	mov	ecx, DWORD PTR _this$[ebp]
	call	??F?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> > >::operator--

; 910  :         return *this;

	mov	eax, DWORD PTR _this$[ebp]

; 911  :     }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??E?$reverse_iterator@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::reverse_iterator<std::_List_const_iterator<std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> > > >::operator++
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xutility
;	COMDAT ??D?$reverse_iterator@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@@std@@QBEABQAV?$Goal@VRaven_Bot@@@@XZ
_TEXT	SEGMENT
$T2 = -40						; size = 4
__Tmp$ = -32						; size = 12
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??D?$reverse_iterator@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@@std@@QBEABQAV?$Goal@VRaven_Bot@@@@XZ PROC ; std::reverse_iterator<std::_List_const_iterator<std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> > > >::operator*, COMDAT
; _this$ = ecx

; 897  :     _NODISCARD _CONSTEXPR17 reference operator*() const {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??D?$reverse_iterator@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@@std@@QBEABQAV?$Goal@VRaven_Bot@@@@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 28					; 0000001cH
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-40], eax
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 898  :         _BidIt _Tmp = current;

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Tmp$[ebp]
	call	??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 899  :         return *--_Tmp;

	lea	ecx, DWORD PTR __Tmp$[ebp]
	call	??F?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> > >::operator--
	mov	ecx, eax
	call	??D?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@QBEABQAV?$Goal@VRaven_Bot@@@@XZ ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> > >::operator*
	mov	DWORD PTR $T2[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Tmp$[ebp]
	call	??1?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR $T2[ebp]

; 900  :     }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@operator
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 40					; 00000028H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN7@operator:
	DD	1
	DD	$LN6@operator
$LN6@operator:
	DD	-32					; ffffffe0H
	DD	12					; 0000000cH
	DD	$LN4@operator
$LN4@operator:
	DB	95					; 0000005fH
	DB	84					; 00000054H
	DB	109					; 0000006dH
	DB	112					; 00000070H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??D?$reverse_iterator@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@@std@@QBEABQAV?$Goal@VRaven_Bot@@@@XZ$0:
	lea	ecx, DWORD PTR __Tmp$[ebp]
	jmp	??1?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@QAE@XZ
__ehhandler$??D?$reverse_iterator@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@@std@@QBEABQAV?$Goal@VRaven_Bot@@@@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-32]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??D?$reverse_iterator@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@@std@@QBEABQAV?$Goal@VRaven_Bot@@@@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??D?$reverse_iterator@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@@std@@QBEABQAV?$Goal@VRaven_Bot@@@@XZ ENDP ; std::reverse_iterator<std::_List_const_iterator<std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> > > >::operator*
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xutility
;	COMDAT ?base@?$reverse_iterator@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@@std@@QBE?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
$T1 = -8						; size = 4
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?base@?$reverse_iterator@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@@std@@QBE?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@2@XZ PROC ; std::reverse_iterator<std::_List_const_iterator<std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> > > >::base, COMDAT
; _this$ = ecx

; 893  :     _NODISCARD _CONSTEXPR17 _BidIt base() const {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR $T1[ebp], 0

; 894  :         return current;

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@QAE@ABV01@@Z
	mov	ecx, DWORD PTR $T1[ebp]
	or	ecx, 1
	mov	DWORD PTR $T1[ebp], ecx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 895  :     }

	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?base@?$reverse_iterator@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@@std@@QBE?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@2@XZ ENDP ; std::reverse_iterator<std::_List_const_iterator<std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> > > >::base
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xutility
;	COMDAT ??0?$reverse_iterator@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@@std@@QAE@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 12
??0?$reverse_iterator@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@@std@@QAE@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@1@@Z PROC ; std::reverse_iterator<std::_List_const_iterator<std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> > > >::reverse_iterator<std::_List_const_iterator<std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> > > >, COMDAT
; _this$ = ecx

; 881  :     _CONSTEXPR17 explicit reverse_iterator(_BidIt _Right) : current(_Right) {}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	lea	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@QAE@ABV01@@Z
	lea	ecx, DWORD PTR __Right$[ebp]
	call	??1?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
??0?$reverse_iterator@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@@std@@QAE@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@1@@Z ENDP ; std::reverse_iterator<std::_List_const_iterator<std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> > > >::reverse_iterator<std::_List_const_iterator<std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xutility
;	COMDAT ??0?$reverse_iterator@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$reverse_iterator@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@@std@@QAE@XZ PROC ; std::reverse_iterator<std::_List_const_iterator<std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> > > >::reverse_iterator<std::_List_const_iterator<std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> > > >, COMDAT
; _this$ = ecx

; 879  :     _CONSTEXPR17 reverse_iterator() : current() {}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@QAE@XZ ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> > >::_List_const_iterator<std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> > >
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$reverse_iterator@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@@std@@QAE@XZ ENDP ; std::reverse_iterator<std::_List_const_iterator<std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> > > >::reverse_iterator<std::_List_const_iterator<std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_List_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_List_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@QAE@XZ PROC ; std::_List_iterator<std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> > >::~_List_iterator<std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@QAE@XZ
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_List_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_List_iterator<std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> > >::~_List_iterator<std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\list
;	COMDAT ??E?$_List_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??E?$_List_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_List_iterator<std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> > >::operator++, COMDAT
; _this$ = ecx

; 260  :     _List_iterator& operator++() {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 261  :         _Mybase::operator++();

	mov	ecx, DWORD PTR _this$[ebp]
	call	??E?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> > >::operator++

; 262  :         return *this;

	mov	eax, DWORD PTR _this$[ebp]

; 263  :     }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??E?$_List_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_List_iterator<std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> > >::operator++
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\list
;	COMDAT ??D?$_List_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@QBEAAPAV?$Goal@VRaven_Bot@@@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??D?$_List_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@QBEAAPAV?$Goal@VRaven_Bot@@@@XZ PROC ; std::_List_iterator<std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> > >::operator*, COMDAT
; _this$ = ecx

; 252  :     _NODISCARD reference operator*() const {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 253  :         return const_cast<reference>(_Mybase::operator*());

	mov	ecx, DWORD PTR _this$[ebp]
	call	??D?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@QBEABQAV?$Goal@VRaven_Bot@@@@XZ ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> > >::operator*

; 254  :     }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??D?$_List_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@QBEAAPAV?$Goal@VRaven_Bot@@@@XZ ENDP ; std::_List_iterator<std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> > >::operator*
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\list
;	COMDAT ??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@QAE@PAU?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@1@PBV?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Pnode$ = 8						; size = 4
__Plist$ = 12						; size = 4
??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@QAE@PAU?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@1@PBV?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@1@@Z PROC ; std::_List_iterator<std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> > >::_List_iterator<std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> > >, COMDAT
; _this$ = ecx

; 248  :     _List_iterator(_Nodeptr _Pnode, const _Mylist* _Plist)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 249  :         : _Mybase(_Pnode, _Plist) { // construct with node pointer _Pnode

	mov	eax, DWORD PTR __Plist$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@QAE@PAU?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@1@PBV?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@1@@Z ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> > >::_List_const_iterator<std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> > >

; 250  :     }

	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@QAE@PAU?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@1@PBV?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@1@@Z ENDP ; std::_List_iterator<std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> > >::_List_iterator<std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??4?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@QAEAAV01@$$QAV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??4?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@QAEAAV01@$$QAV01@@Z PROC ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> > >::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@U_Iterator_base12@2@@std@@QAEAAV01@$$QAV01@@Z
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@QAEAAV01@$$QAV01@@Z ENDP ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> > >::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@QAE@ABV01@@Z PROC ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> > >::_List_const_iterator<std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@ABV01@@Z
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@QAE@ABV01@@Z ENDP ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> > >::_List_const_iterator<std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@QAE@XZ PROC ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> > >::~_List_const_iterator<std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@XZ
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> > >::~_List_const_iterator<std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\list
;	COMDAT ??9?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
tv69 = -8						; size = 4
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??9?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> > >::operator!=, COMDAT
; _this$ = ecx

; 211  :     _NODISCARD bool operator!=(const _List_const_iterator& _Right) const {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 212  :         return !(*this == _Right);

	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> > >::operator==
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv69[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv69[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv69[ebp]

; 213  :     }

	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??9?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> > >::operator!=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\list
;	COMDAT ??8?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
tv136 = -8						; size = 4
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??8?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> > >::operator==, COMDAT
; _this$ = ecx

; 203  :     _NODISCARD bool operator==(const _List_const_iterator& _Right) const {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
$LN4@operator:

; 204  : #if _ITERATOR_DEBUG_LEVEL == 2
; 205  :         _STL_VERIFY(this->_Getcont() == _Right._Getcont(), "list iterators incompatible");

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	mov	esi, eax
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	cmp	esi, eax
	jne	SHORT $LN7@operator
	jmp	SHORT $LN2@operator
$LN7@operator:
	push	OFFSET ??_C@_0BM@BALDKKHE@list?5iterators?5incompatible@
	push	OFFSET ??_C@_02DKCKIIND@?$CFs@
	push	0
	push	205					; 000000cdH
	push	OFFSET ??_C@_0GF@GNCHBLDJ@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
	push	2
	call	__CrtDbgReport
	add	esp, 24					; 00000018H
	cmp	eax, 1
	jne	SHORT $LN11@operator
	int	3
$LN11@operator:
	push	0
	push	205					; 000000cdH
	push	OFFSET ??_C@_1MK@DPPFMAIA@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
	push	OFFSET ??_C@_1PM@NGMJNEOB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAL?$AAi?$AAs?$AAt?$AA_?$AAc?$AAo?$AAn?$AAs@
	push	OFFSET ??_C@_1DM@KDLJAKOP@?$AA?$CC?$AAl?$AAi?$AAs?$AAt?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AAs@
	call	__invalid_parameter
	add	esp, 20					; 00000014H
	xor	ecx, ecx
	jne	SHORT $LN7@operator
$LN2@operator:
	xor	edx, edx
	jne	SHORT $LN4@operator

; 206  : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 207  : 
; 208  :         return this->_Ptr == _Right._Ptr;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	edx, DWORD PTR [eax+8]
	cmp	edx, DWORD PTR [ecx+8]
	jne	SHORT $LN12@operator
	mov	DWORD PTR tv136[ebp], 1
	jmp	SHORT $LN13@operator
$LN12@operator:
	mov	DWORD PTR tv136[ebp], 0
$LN13@operator:
	mov	al, BYTE PTR tv136[ebp]

; 209  :     }

	pop	esi
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??8?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> > >::operator==
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\list
;	COMDAT ??F?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
__Mycont$ = -12						; size = 4
__New_ptr$ = -8						; size = 4
_this$ = -4						; size = 4
??F?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> > >::operator--, COMDAT
; _this$ = ecx

; 185  :     _List_const_iterator& operator--() {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 186  :         const auto _New_ptr = this->_Ptr->_Prev;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR __New_ptr$[ebp], edx

; 187  : #if _ITERATOR_DEBUG_LEVEL == 2
; 188  :         const auto _Mycont = static_cast<const _Mylist*>(this->_Getcont());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	mov	DWORD PTR __Mycont$[ebp], eax
$LN4@operator:

; 189  :         _STL_ASSERT(_Mycont, "cannot decrement value-initialized list iterator");

	cmp	DWORD PTR __Mycont$[ebp], 0
	je	SHORT $LN7@operator
	jmp	SHORT $LN2@operator
$LN7@operator:
	push	OFFSET ??_C@_0DB@MCPEHPCC@cannot?5decrement?5value?9initiali@
	push	OFFSET ??_C@_02DKCKIIND@?$CFs@
	push	0
	push	189					; 000000bdH
	push	OFFSET ??_C@_0GF@GNCHBLDJ@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
	push	2
	call	__CrtDbgReport
	add	esp, 24					; 00000018H
	cmp	eax, 1
	jne	SHORT $LN19@operator
	int	3
$LN19@operator:
	push	0
	push	189					; 000000bdH
	push	OFFSET ??_C@_1MK@DPPFMAIA@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
	push	OFFSET ??_C@_1PM@IFAGIBOF@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAL?$AAi?$AAs?$AAt?$AA_?$AAc?$AAo?$AAn?$AAs@
	push	OFFSET ??_C@_1GG@FLDKPFOH@?$AA?$CC?$AAc?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAc?$AAr?$AAe?$AAm?$AAe@
	call	__invalid_parameter
	add	esp, 20					; 00000014H
	xor	ecx, ecx
	jne	SHORT $LN7@operator
$LN2@operator:
	xor	edx, edx
	jne	SHORT $LN4@operator
$LN10@operator:

; 190  :         _STL_VERIFY(_New_ptr != _Mycont->_Myhead, "cannot decrement begin list iterator");

	mov	eax, DWORD PTR __Mycont$[ebp]
	mov	ecx, DWORD PTR __New_ptr$[ebp]
	cmp	ecx, DWORD PTR [eax+4]
	je	SHORT $LN13@operator
	jmp	SHORT $LN8@operator
$LN13@operator:
	push	OFFSET ??_C@_0CF@BAAFPBMN@cannot?5decrement?5begin?5list?5ite@
	push	OFFSET ??_C@_02DKCKIIND@?$CFs@
	push	0
	push	190					; 000000beH
	push	OFFSET ??_C@_0GF@GNCHBLDJ@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
	push	2
	call	__CrtDbgReport
	add	esp, 24					; 00000018H
	cmp	eax, 1
	jne	SHORT $LN20@operator
	int	3
$LN20@operator:
	push	0
	push	190					; 000000beH
	push	OFFSET ??_C@_1MK@DPPFMAIA@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
	push	OFFSET ??_C@_1PM@IFAGIBOF@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAL?$AAi?$AAs?$AAt?$AA_?$AAc?$AAo?$AAn?$AAs@
	push	OFFSET ??_C@_1EO@PPPLIDNC@?$AA?$CC?$AAc?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAc?$AAr?$AAe?$AAm?$AAe@
	call	__invalid_parameter
	add	esp, 20					; 00000014H
	xor	eax, eax
	jne	SHORT $LN13@operator
$LN8@operator:
	xor	ecx, ecx
	jne	SHORT $LN10@operator

; 191  : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 192  : 
; 193  :         this->_Ptr = _New_ptr;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR __New_ptr$[ebp]
	mov	DWORD PTR [edx+8], eax

; 194  :         return *this;

	mov	eax, DWORD PTR _this$[ebp]

; 195  :     }

	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??F?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> > >::operator--
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\list
;	COMDAT ??E?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
__Mycont$ = -8						; size = 4
_this$ = -4						; size = 4
??E?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> > >::operator++, COMDAT
; _this$ = ecx

; 168  :     _List_const_iterator& operator++() {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 169  : #if _ITERATOR_DEBUG_LEVEL == 2
; 170  :         const auto _Mycont = static_cast<const _Mylist*>(this->_Getcont());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	mov	DWORD PTR __Mycont$[ebp], eax
$LN4@operator:

; 171  :         _STL_ASSERT(_Mycont, "cannot increment value-initialized list iterator");

	cmp	DWORD PTR __Mycont$[ebp], 0
	je	SHORT $LN7@operator
	jmp	SHORT $LN2@operator
$LN7@operator:
	push	OFFSET ??_C@_0DB@ENBCPNKO@cannot?5increment?5value?9initiali@
	push	OFFSET ??_C@_02DKCKIIND@?$CFs@
	push	0
	push	171					; 000000abH
	push	OFFSET ??_C@_0GF@GNCHBLDJ@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
	push	2
	call	__CrtDbgReport
	add	esp, 24					; 00000018H
	cmp	eax, 1
	jne	SHORT $LN19@operator
	int	3
$LN19@operator:
	push	0
	push	171					; 000000abH
	push	OFFSET ??_C@_1MK@DPPFMAIA@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
	push	OFFSET ??_C@_1PM@HGDEDNCE@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAL?$AAi?$AAs?$AAt?$AA_?$AAc?$AAo?$AAn?$AAs@
	push	OFFSET ??_C@_1GG@JLMAGPNK@?$AA?$CC?$AAc?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAi?$AAn?$AAc?$AAr?$AAe?$AAm?$AAe@
	call	__invalid_parameter
	add	esp, 20					; 00000014H
	xor	ecx, ecx
	jne	SHORT $LN7@operator
$LN2@operator:
	xor	edx, edx
	jne	SHORT $LN4@operator
$LN10@operator:

; 172  :         _STL_VERIFY(this->_Ptr != _Mycont->_Myhead, "cannot increment end list iterator");

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Mycont$[ebp]
	mov	edx, DWORD PTR [eax+8]
	cmp	edx, DWORD PTR [ecx+4]
	je	SHORT $LN13@operator
	jmp	SHORT $LN8@operator
$LN13@operator:
	push	OFFSET ??_C@_0CD@PMFMCEG@cannot?5increment?5end?5list?5itera@
	push	OFFSET ??_C@_02DKCKIIND@?$CFs@
	push	0
	push	172					; 000000acH
	push	OFFSET ??_C@_0GF@GNCHBLDJ@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
	push	2
	call	__CrtDbgReport
	add	esp, 24					; 00000018H
	cmp	eax, 1
	jne	SHORT $LN20@operator
	int	3
$LN20@operator:
	push	0
	push	172					; 000000acH
	push	OFFSET ??_C@_1MK@DPPFMAIA@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
	push	OFFSET ??_C@_1PM@HGDEDNCE@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAL?$AAi?$AAs?$AAt?$AA_?$AAc?$AAo?$AAn?$AAs@
	push	OFFSET ??_C@_1EK@OKKCFDJN@?$AA?$CC?$AAc?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAi?$AAn?$AAc?$AAr?$AAe?$AAm?$AAe@
	call	__invalid_parameter
	add	esp, 20					; 00000014H
	xor	ecx, ecx
	jne	SHORT $LN13@operator
$LN8@operator:
	xor	edx, edx
	jne	SHORT $LN10@operator

; 173  : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 174  : 
; 175  :         this->_Ptr = this->_Ptr->_Next;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx]
	mov	DWORD PTR [edx+8], eax

; 176  :         return *this;

	mov	eax, DWORD PTR _this$[ebp]

; 177  :     }

	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??E?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> > >::operator++
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\list
;	COMDAT ??D?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@QBEABQAV?$Goal@VRaven_Bot@@@@XZ
_TEXT	SEGMENT
__Mycont$ = -8						; size = 4
_this$ = -4						; size = 4
??D?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@QBEABQAV?$Goal@VRaven_Bot@@@@XZ PROC ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> > >::operator*, COMDAT
; _this$ = ecx

; 154  :     _NODISCARD reference operator*() const {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 155  : #if _ITERATOR_DEBUG_LEVEL == 2
; 156  :         const auto _Mycont = static_cast<const _Mylist*>(this->_Getcont());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	mov	DWORD PTR __Mycont$[ebp], eax
$LN4@operator:

; 157  :         _STL_ASSERT(_Mycont, "cannot dereference value-initialized list iterator");

	cmp	DWORD PTR __Mycont$[ebp], 0
	je	SHORT $LN7@operator
	jmp	SHORT $LN2@operator
$LN7@operator:
	push	OFFSET ??_C@_0DD@MBIHGLJE@cannot?5dereference?5value?9initia@
	push	OFFSET ??_C@_02DKCKIIND@?$CFs@
	push	0
	push	157					; 0000009dH
	push	OFFSET ??_C@_0GF@GNCHBLDJ@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
	push	2
	call	__CrtDbgReport
	add	esp, 24					; 00000018H
	cmp	eax, 1
	jne	SHORT $LN19@operator
	int	3
$LN19@operator:
	push	0
	push	157					; 0000009dH
	push	OFFSET ??_C@_1MK@DPPFMAIA@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
	push	OFFSET ??_C@_1PK@KKMOJEL@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAL?$AAi?$AAs?$AAt?$AA_?$AAc?$AAo?$AAn?$AAs@
	push	OFFSET ??_C@_1GK@NKIMOCIG@?$AA?$CC?$AAc?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr@
	call	__invalid_parameter
	add	esp, 20					; 00000014H
	xor	ecx, ecx
	jne	SHORT $LN7@operator
$LN2@operator:
	xor	edx, edx
	jne	SHORT $LN4@operator
$LN10@operator:

; 158  :         _STL_VERIFY(this->_Ptr != _Mycont->_Myhead, "cannot dereference end list iterator");

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Mycont$[ebp]
	mov	edx, DWORD PTR [eax+8]
	cmp	edx, DWORD PTR [ecx+4]
	je	SHORT $LN13@operator
	jmp	SHORT $LN8@operator
$LN13@operator:
	push	OFFSET ??_C@_0CF@JCBFHMPL@cannot?5dereference?5end?5list?5ite@
	push	OFFSET ??_C@_02DKCKIIND@?$CFs@
	push	0
	push	158					; 0000009eH
	push	OFFSET ??_C@_0GF@GNCHBLDJ@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
	push	2
	call	__CrtDbgReport
	add	esp, 24					; 00000018H
	cmp	eax, 1
	jne	SHORT $LN20@operator
	int	3
$LN20@operator:
	push	0
	push	158					; 0000009eH
	push	OFFSET ??_C@_1MK@DPPFMAIA@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
	push	OFFSET ??_C@_1PK@KKMOJEL@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAL?$AAi?$AAs?$AAt?$AA_?$AAc?$AAo?$AAn?$AAs@
	push	OFFSET ??_C@_1EO@CNEFBDCF@?$AA?$CC?$AAc?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr@
	call	__invalid_parameter
	add	esp, 20					; 00000014H
	xor	ecx, ecx
	jne	SHORT $LN13@operator
$LN8@operator:
	xor	edx, edx
	jne	SHORT $LN10@operator

; 159  : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 160  : 
; 161  :         return this->_Ptr->_Myval;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
	add	eax, 8

; 162  :     }

	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??D?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@QBEABQAV?$Goal@VRaven_Bot@@@@XZ ENDP ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> > >::operator*
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\list
;	COMDAT ??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@QAE@PAU?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@1@PBV?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Pnode$ = 8						; size = 4
__Plist$ = 12						; size = 4
??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@QAE@PAU?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@1@PBV?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@1@@Z PROC ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> > >::_List_const_iterator<std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> > >, COMDAT
; _this$ = ecx

; 150  :     _List_const_iterator(_Nodeptr _Pnode, const _Mylist* _Plist)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 151  :         : _Mybase(_Pnode, _Plist) { // construct with node pointer _Pnode

	mov	eax, DWORD PTR __Plist$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@1@PBV?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@1@@Z ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> >,std::_Iterator_base12>::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> >,std::_Iterator_base12>

; 152  :     }

	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@QAE@PAU?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@1@PBV?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@1@@Z ENDP ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> > >::_List_const_iterator<std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\list
;	COMDAT ??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@QAE@XZ PROC ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> > >::_List_const_iterator<std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> > >, COMDAT
; _this$ = ecx

; 147  :     _List_const_iterator() : _Mybase() { // construct with null node pointer

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@XZ ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> >,std::_Iterator_base12>::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> >,std::_Iterator_base12>

; 148  :     }

	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> > >::_List_const_iterator<std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??4?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@U_Iterator_base12@2@@std@@QAEAAV01@$$QAV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??4?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@U_Iterator_base12@2@@std@@QAEAAV01@$$QAV01@@Z PROC ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> >,std::_Iterator_base12>::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z ; std::_Iterator_base12::operator=
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR ___that$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR [ecx+8], eax
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@U_Iterator_base12@2@@std@@QAEAAV01@$$QAV01@@Z ENDP ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> >,std::_Iterator_base12>::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@ABV01@@Z PROC ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> >,std::_Iterator_base12>::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> >,std::_Iterator_base12>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Iterator_base12@std@@QAE@ABU01@@Z	; std::_Iterator_base12::_Iterator_base12
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR ___that$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR [ecx+8], eax
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@ABV01@@Z ENDP ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> >,std::_Iterator_base12>::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> >,std::_Iterator_base12>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@XZ PROC ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> >,std::_Iterator_base12>::~_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> >,std::_Iterator_base12>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Iterator_base12@std@@QAE@XZ		; std::_Iterator_base12::~_Iterator_base12
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@XZ ENDP ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> >,std::_Iterator_base12>::~_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> >,std::_Iterator_base12>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\list
;	COMDAT ??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@1@PBV?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Pnode$ = 8						; size = 4
__Plist$ = 12						; size = 4
??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@1@PBV?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@1@@Z PROC ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> >,std::_Iterator_base12>::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> >,std::_Iterator_base12>, COMDAT
; _this$ = ecx

; 36   :     _List_unchecked_const_iterator(_Nodeptr _Pnode, const _Mylist* _Plist)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 37   :         : _Ptr(_Pnode) { // construct with node pointer _Pnode

	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Iterator_base12@std@@QAE@XZ		; std::_Iterator_base12::_Iterator_base12
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax+8], ecx

; 38   :         this->_Adopt(_Plist);

	mov	edx, DWORD PTR __Plist$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z ; std::_Iterator_base12::_Adopt

; 39   :     }

	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@1@PBV?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@1@@Z ENDP ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> >,std::_Iterator_base12>::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> >,std::_Iterator_base12>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\list
;	COMDAT ??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@XZ PROC ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> >,std::_Iterator_base12>::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> >,std::_Iterator_base12>, COMDAT
; _this$ = ecx

; 33   :     _List_unchecked_const_iterator() : _Ptr() { // construct with null node pointer

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Iterator_base12@std@@QAE@XZ		; std::_Iterator_base12::_Iterator_base12
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0

; 34   :     }

	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@XZ ENDP ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> >,std::_Iterator_base12>::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> >,std::_Iterator_base12>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Get_size_of_n@$0M@@std@@YAII@Z
_TEXT	SEGMENT
__Max_possible$1 = -8					; size = 4
__Overflow_is_possible$ = -1				; size = 1
__Count$ = 8						; size = 4
??$_Get_size_of_n@$0M@@std@@YAII@Z PROC			; std::_Get_size_of_n<12>, COMDAT

; 24   : _NODISCARD constexpr size_t _Get_size_of_n(const size_t _Count) {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH

; 25   :     constexpr bool _Overflow_is_possible = _Ty_size > 1;

	mov	BYTE PTR __Overflow_is_possible$[ebp], 1

; 26   : 
; 27   :     if
; 28   :         _CONSTEXPR_IF(_Overflow_is_possible) {
; 29   :             constexpr size_t _Max_possible = static_cast<size_t>(-1) / _Ty_size;

	mov	DWORD PTR __Max_possible$1[ebp], 357913941 ; 15555555H

; 30   :             if (_Count > _Max_possible) {

	cmp	DWORD PTR __Count$[ebp], 357913941	; 15555555H
	jbe	SHORT $LN2@Get_size_o

; 31   :                 _Throw_bad_array_new_length(); // multiply overflow

	call	?_Throw_bad_array_new_length@std@@YAXXZ	; std::_Throw_bad_array_new_length
$LN2@Get_size_o:

; 32   :             }
; 33   :         }
; 34   : 
; 35   :     return _Count * _Ty_size;

	imul	eax, DWORD PTR __Count$[ebp], 12
$LN3@Get_size_o:

; 36   : }

	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Get_size_of_n@$0M@@std@@YAII@Z ENDP			; std::_Get_size_of_n<12>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\list
;	COMDAT ??$_Freenode0@V?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@std@@@?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@SAXAAV?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@1@PAU01@@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$_Freenode0@V?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@std@@@?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@SAXAAV?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@1@PAU01@@Z PROC ; std::_List_node<Goal<Raven_Bot> *,void *>::_Freenode0<std::allocator<std::_List_node<Goal<Raven_Bot> *,void *> > >, COMDAT

; 321  :     static void _Freenode0(_Alnode& _Al, _Nodeptr _Ptr) noexcept {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Freenode0@V?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@std@@@?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@SAXAAV?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@1@PAU01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 322  :         // destroy pointer members in _Ptr and deallocate with _Al
; 323  :         static_assert(is_same_v<typename _Alnode::value_type, _List_node>, "Bad _Freenode0 call");
; 324  :         _Destroy_in_place(_Ptr->_Next);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??$_Destroy_in_place@PAU?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@std@@YAXAAPAU?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@0@@Z ; std::_Destroy_in_place<std::_List_node<Goal<Raven_Bot> *,void *> *>
	add	esp, 4

; 325  :         _Destroy_in_place(_Ptr->_Prev);

	mov	ecx, DWORD PTR __Ptr$[ebp]
	add	ecx, 4
	push	ecx
	call	??$_Destroy_in_place@PAU?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@std@@YAXAAPAU?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@0@@Z ; std::_Destroy_in_place<std::_List_node<Goal<Raven_Bot> *,void *> *>
	add	esp, 4

; 326  :         allocator_traits<_Alnode>::deallocate(_Al, _Ptr, 1);

	push	1
	mov	edx, DWORD PTR __Ptr$[ebp]
	push	edx
	mov	eax, DWORD PTR __Al$[ebp]
	push	eax
	call	?deallocate@?$_Default_allocator_traits@V?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@2@QAU?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@2@I@Z ; std::_Default_allocator_traits<std::allocator<std::_List_node<Goal<Raven_Bot> *,void *> > >::deallocate
	add	esp, 12					; 0000000cH

; 327  :     }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Freenode0@V?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@std@@@?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@SAXAAV?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@1@PAU01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Freenode0@V?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@std@@@?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@SAXAAV?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@1@PAU01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Freenode0@V?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@std@@@?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@SAXAAV?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@1@PAU01@@Z ENDP ; std::_List_node<Goal<Raven_Bot> *,void *>::_Freenode0<std::allocator<std::_List_node<Goal<Raven_Bot> *,void *> > >
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\list
;	COMDAT ??$_Free_non_head@V?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@std@@@?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@SAXAAV?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@1@PAU01@@Z
_TEXT	SEGMENT
__Pnext$1 = -8						; size = 4
__Pnode$ = -4						; size = 4
__Al$ = 8						; size = 4
__Head$ = 12						; size = 4
??$_Free_non_head@V?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@std@@@?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@SAXAAV?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@1@PAU01@@Z PROC ; std::_List_node<Goal<Raven_Bot> *,void *>::_Free_non_head<std::allocator<std::_List_node<Goal<Raven_Bot> *,void *> > >, COMDAT

; 337  :         _Alnode& _Al, _Nodeptr _Head) noexcept { // free a list starting at _First and terminated at nullptr

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH

; 338  :         _Head->_Prev->_Next = nullptr;

	mov	eax, DWORD PTR __Head$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx], 0

; 339  : 
; 340  :         auto _Pnode = _Head->_Next;

	mov	edx, DWORD PTR __Head$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR __Pnode$[ebp], eax

; 341  :         for (_Nodeptr _Pnext; _Pnode; _Pnode = _Pnext) {

	jmp	SHORT $LN4@Free_non_h
$LN2@Free_non_h:
	mov	ecx, DWORD PTR __Pnext$1[ebp]
	mov	DWORD PTR __Pnode$[ebp], ecx
$LN4@Free_non_h:
	cmp	DWORD PTR __Pnode$[ebp], 0
	je	SHORT $LN5@Free_non_h

; 342  :             _Pnext = _Pnode->_Next;

	mov	edx, DWORD PTR __Pnode$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR __Pnext$1[ebp], eax

; 343  :             _Freenode(_Al, _Pnode);

	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Al$[ebp]
	push	edx
	call	??$_Freenode@V?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@std@@@?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@SAXAAV?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@1@PAU01@@Z ; std::_List_node<Goal<Raven_Bot> *,void *>::_Freenode<std::allocator<std::_List_node<Goal<Raven_Bot> *,void *> > >
	add	esp, 8

; 344  :         }

	jmp	SHORT $LN2@Free_non_h
$LN5@Free_non_h:

; 345  :     }

	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Free_non_head@V?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@std@@@?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@SAXAAV?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@1@PAU01@@Z ENDP ; std::_List_node<Goal<Raven_Bot> *,void *>::_Free_non_head<std::allocator<std::_List_node<Goal<Raven_Bot> *,void *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Construct_in_place@PAU?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@0@0@Z
_TEXT	SEGMENT
$T1 = -4						; size = 4
__Obj$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$_Construct_in_place@PAU?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@0@0@Z PROC ; std::_Construct_in_place<std::_List_node<Goal<Raven_Bot> *,void *> *,std::_List_node<Goal<Raven_Bot> *,void *> * &>, COMDAT

; 198  : void _Construct_in_place(_Ty& _Obj, _Types&&... _Args) _NOEXCEPT_COND(is_nothrow_constructible_v<_Ty, _Types...>) {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH

; 199  :     ::new (const_cast<void*>(static_cast<const volatile void*>(_STD addressof(_Obj))))

	mov	eax, DWORD PTR __Obj$[ebp]
	push	eax
	call	??$addressof@PAU?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@std@@YAPAPAU?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@0@AAPAU10@@Z ; std::addressof<std::_List_node<Goal<Raven_Bot> *,void *> *>
	add	esp, 4
	push	eax
	push	4
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T1[ebp], eax
	mov	ecx, DWORD PTR _<_Args_0>$[ebp]
	push	ecx
	call	??$forward@AAPAU?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@std@@YAAAPAU?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@0@AAPAU10@@Z ; std::forward<std::_List_node<Goal<Raven_Bot> *,void *> * &>
	add	esp, 4
	mov	edx, DWORD PTR $T1[ebp]
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR [edx], eax

; 200  :         _Ty(_STD forward<_Types>(_Args)...);
; 201  : }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Construct_in_place@PAU?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@0@0@Z ENDP ; std::_Construct_in_place<std::_List_node<Goal<Raven_Bot> *,void *> *,std::_List_node<Goal<Raven_Bot> *,void *> * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Get_size_of_n@$07@std@@YAII@Z
_TEXT	SEGMENT
__Max_possible$1 = -8					; size = 4
__Overflow_is_possible$ = -1				; size = 1
__Count$ = 8						; size = 4
??$_Get_size_of_n@$07@std@@YAII@Z PROC			; std::_Get_size_of_n<8>, COMDAT

; 24   : _NODISCARD constexpr size_t _Get_size_of_n(const size_t _Count) {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH

; 25   :     constexpr bool _Overflow_is_possible = _Ty_size > 1;

	mov	BYTE PTR __Overflow_is_possible$[ebp], 1

; 26   : 
; 27   :     if
; 28   :         _CONSTEXPR_IF(_Overflow_is_possible) {
; 29   :             constexpr size_t _Max_possible = static_cast<size_t>(-1) / _Ty_size;

	mov	DWORD PTR __Max_possible$1[ebp], 536870911 ; 1fffffffH

; 30   :             if (_Count > _Max_possible) {

	cmp	DWORD PTR __Count$[ebp], 536870911	; 1fffffffH
	jbe	SHORT $LN2@Get_size_o

; 31   :                 _Throw_bad_array_new_length(); // multiply overflow

	call	?_Throw_bad_array_new_length@std@@YAXXZ	; std::_Throw_bad_array_new_length
$LN2@Get_size_o:

; 32   :             }
; 33   :         }
; 34   : 
; 35   :     return _Count * _Ty_size;

	mov	eax, DWORD PTR __Count$[ebp]
	shl	eax, 3
$LN3@Get_size_o:

; 36   : }

	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Get_size_of_n@$07@std@@YAII@Z ENDP			; std::_Get_size_of_n<8>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
__Ptr$ = 8						; size = 4
__Bytes$ = 12						; size = 4
??$_Deallocate@$07$0A@@std@@YAXPAXI@Z PROC		; std::_Deallocate<8,0>, COMDAT

; 183  : void _Deallocate(void* _Ptr, size_t _Bytes) noexcept {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Deallocate@$07$0A@@std@@YAXPAXI@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 184  :     // deallocate storage allocated by _Allocate when !_HAS_ALIGNED_NEW || _Align <= __STDCPP_DEFAULT_NEW_ALIGNMENT__
; 185  : #if defined(_M_IX86) || defined(_M_X64)
; 186  :     if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	DWORD PTR __Bytes$[ebp], 4096		; 00001000H
	jb	SHORT $LN2@Deallocate

; 187  :         _Adjust_manually_vector_aligned(_Ptr, _Bytes);

	lea	eax, DWORD PTR __Bytes$[ebp]
	push	eax
	lea	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	call	?_Adjust_manually_vector_aligned@std@@YAXAAPAXAAI@Z ; std::_Adjust_manually_vector_aligned
	add	esp, 8
$LN2@Deallocate:

; 188  :     }
; 189  : #endif // defined(_M_IX86) || defined(_M_X64)
; 190  : 
; 191  :     ::operator delete(_Ptr, _Bytes);

	mov	edx, DWORD PTR __Bytes$[ebp]
	push	edx
	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8

; 192  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Deallocate@$07$0A@@std@@YAXPAXI@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Deallocate@$07$0A@@std@@YAXPAXI@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ENDP		; std::_Deallocate<8,0>
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z
_TEXT	SEGMENT
__Bytes$ = 8						; size = 4
??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z PROC ; std::_Allocate<8,std::_Default_allocate_traits,0>, COMDAT

; 167  : _DECLSPEC_ALLOCATOR void* _Allocate(const size_t _Bytes) {

	push	ebp
	mov	ebp, esp

; 168  :     // allocate _Bytes when !_HAS_ALIGNED_NEW || _Align <= __STDCPP_DEFAULT_NEW_ALIGNMENT__
; 169  : #if defined(_M_IX86) || defined(_M_X64)
; 170  :     if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	DWORD PTR __Bytes$[ebp], 4096		; 00001000H
	jb	SHORT $LN2@Allocate

; 171  :         return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

	mov	eax, DWORD PTR __Bytes$[ebp]
	push	eax
	call	??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
	add	esp, 4
	jmp	SHORT $LN1@Allocate
$LN2@Allocate:

; 172  :     }
; 173  : #endif // defined(_M_IX86) || defined(_M_X64)
; 174  : 
; 175  :     if (_Bytes != 0) {

	cmp	DWORD PTR __Bytes$[ebp], 0
	je	SHORT $LN3@Allocate

; 176  :         return _Traits::_Allocate(_Bytes);

	mov	ecx, DWORD PTR __Bytes$[ebp]
	push	ecx
	call	?_Allocate@_Default_allocate_traits@std@@SAPAXI@Z ; std::_Default_allocate_traits::_Allocate
	add	esp, 4
	jmp	SHORT $LN1@Allocate
$LN3@Allocate:

; 177  :     }
; 178  : 
; 179  :     return nullptr;

	xor	eax, eax
$LN1@Allocate:

; 180  : }

	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ENDP ; std::_Allocate<8,std::_Default_allocate_traits,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Destroy_in_place@PAD@std@@YAXAAPAD@Z
_TEXT	SEGMENT
__Obj$ = 8						; size = 4
??$_Destroy_in_place@PAD@std@@YAXAAPAD@Z PROC		; std::_Destroy_in_place<char *>, COMDAT

; 321  : void _Destroy_in_place(_Ty& _Obj) noexcept {

	push	ebp
	mov	ebp, esp

; 322  :     _Obj.~_Ty();
; 323  : }

	pop	ebp
	ret	0
??$_Destroy_in_place@PAD@std@@YAXAAPAD@Z ENDP		; std::_Destroy_in_place<char *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$?0$$V@?$_Compressed_pair@V?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@std@@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 1
??$?0$$V@?$_Compressed_pair@V?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@std@@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z PROC ; std::_Compressed_pair<std::allocator<std::_List_node<Goal<Raven_Bot> *,void *> >,std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> >,1>::_Compressed_pair<std::allocator<std::_List_node<Goal<Raven_Bot> *,void *> >,std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> >,1><>, COMDAT
; _this$ = ecx

; 1414 :         : _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...) {}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@std@@QAE@XZ ; std::allocator<std::_List_node<Goal<Raven_Bot> *,void *> >::allocator<std::_List_node<Goal<Raven_Bot> *,void *> >
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@QAE@XZ ; std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> >::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> >
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0$$V@?$_Compressed_pair@V?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@std@@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z ENDP ; std::_Compressed_pair<std::allocator<std::_List_node<Goal<Raven_Bot> *,void *> >,std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> >,1>::_Compressed_pair<std::allocator<std::_List_node<Goal<Raven_Bot> *,void *> >,std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> >,1><>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$?0U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??$?0U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@1@@Z PROC ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::_List_node<Goal<Raven_Bot> *,void *> >, COMDAT
; _this$ = ecx

; 863  :     constexpr allocator(const allocator<_Other>&) noexcept {}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@1@@Z ENDP ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::_List_node<Goal<Raven_Bot> *,void *> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\list
;	COMDAT ??$_Freenode@V?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@std@@@?$_List_node@VPathEdge@@PAX@std@@SAXAAV?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@1@PAU01@@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$_Freenode@V?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@std@@@?$_List_node@VPathEdge@@PAX@std@@SAXAAV?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@1@PAU01@@Z PROC ; std::_List_node<PathEdge,void *>::_Freenode<std::allocator<std::_List_node<PathEdge,void *> > >, COMDAT

; 330  :     static void _Freenode(_Alnode& _Al, _Nodeptr _Ptr) noexcept { // destroy all members in _Ptr and deallocate with _Al

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Freenode@V?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@std@@@?$_List_node@VPathEdge@@PAX@std@@SAXAAV?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@1@PAU01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 331  :         allocator_traits<_Alnode>::destroy(_Al, _STD addressof(_Ptr->_Myval));

	mov	eax, DWORD PTR __Ptr$[ebp]
	add	eax, 8
	push	eax
	call	??$addressof@VPathEdge@@@std@@YAPAVPathEdge@@AAV1@@Z ; std::addressof<PathEdge>
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	push	ecx
	call	??$destroy@VPathEdge@@@?$_Default_allocator_traits@V?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@1@QAVPathEdge@@@Z ; std::_Default_allocator_traits<std::allocator<std::_List_node<PathEdge,void *> > >::destroy<PathEdge>
	add	esp, 8

; 332  :         _Freenode0(_Al, _Ptr);

	mov	edx, DWORD PTR __Ptr$[ebp]
	push	edx
	mov	eax, DWORD PTR __Al$[ebp]
	push	eax
	call	??$_Freenode0@V?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@std@@@?$_List_node@VPathEdge@@PAX@std@@SAXAAV?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@1@PAU01@@Z ; std::_List_node<PathEdge,void *>::_Freenode0<std::allocator<std::_List_node<PathEdge,void *> > >
	add	esp, 8

; 333  :     }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Freenode@V?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@std@@@?$_List_node@VPathEdge@@PAX@std@@SAXAAV?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@1@PAU01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Freenode@V?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@std@@@?$_List_node@VPathEdge@@PAX@std@@SAXAAV?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@1@PAU01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Freenode@V?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@std@@@?$_List_node@VPathEdge@@PAX@std@@SAXAAV?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@1@PAU01@@Z ENDP ; std::_List_node<PathEdge,void *>::_Freenode<std::allocator<std::_List_node<PathEdge,void *> > >
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\list
;	COMDAT ??$_Freenode0@V?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@std@@@?$_List_node@VPathEdge@@PAX@std@@SAXAAV?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@1@PAU01@@Z
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$_Freenode0@V?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@std@@@?$_List_node@VPathEdge@@PAX@std@@SAXAAV?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@1@PAU01@@Z PROC ; std::_List_node<PathEdge,void *>::_Freenode0<std::allocator<std::_List_node<PathEdge,void *> > >, COMDAT

; 321  :     static void _Freenode0(_Alnode& _Al, _Nodeptr _Ptr) noexcept {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Freenode0@V?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@std@@@?$_List_node@VPathEdge@@PAX@std@@SAXAAV?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@1@PAU01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

; 322  :         // destroy pointer members in _Ptr and deallocate with _Al
; 323  :         static_assert(is_same_v<typename _Alnode::value_type, _List_node>, "Bad _Freenode0 call");
; 324  :         _Destroy_in_place(_Ptr->_Next);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	call	??$_Destroy_in_place@PAU?$_List_node@VPathEdge@@PAX@std@@@std@@YAXAAPAU?$_List_node@VPathEdge@@PAX@0@@Z ; std::_Destroy_in_place<std::_List_node<PathEdge,void *> *>
	add	esp, 4

; 325  :         _Destroy_in_place(_Ptr->_Prev);

	mov	ecx, DWORD PTR __Ptr$[ebp]
	add	ecx, 4
	push	ecx
	call	??$_Destroy_in_place@PAU?$_List_node@VPathEdge@@PAX@std@@@std@@YAXAAPAU?$_List_node@VPathEdge@@PAX@0@@Z ; std::_Destroy_in_place<std::_List_node<PathEdge,void *> *>
	add	esp, 4

; 326  :         allocator_traits<_Alnode>::deallocate(_Al, _Ptr, 1);

	push	1
	mov	edx, DWORD PTR __Ptr$[ebp]
	push	edx
	mov	eax, DWORD PTR __Al$[ebp]
	push	eax
	call	?deallocate@?$_Default_allocator_traits@V?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@2@QAU?$_List_node@VPathEdge@@PAX@2@I@Z ; std::_Default_allocator_traits<std::allocator<std::_List_node<PathEdge,void *> > >::deallocate
	add	esp, 12					; 0000000cH

; 327  :     }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Freenode0@V?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@std@@@?$_List_node@VPathEdge@@PAX@std@@SAXAAV?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@1@PAU01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Freenode0@V?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@std@@@?$_List_node@VPathEdge@@PAX@std@@SAXAAV?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@1@PAU01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Freenode0@V?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@std@@@?$_List_node@VPathEdge@@PAX@std@@SAXAAV?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@1@PAU01@@Z ENDP ; std::_List_node<PathEdge,void *>::_Freenode0<std::allocator<std::_List_node<PathEdge,void *> > >
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\list
;	COMDAT ??$_Free_non_head@V?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@std@@@?$_List_node@VPathEdge@@PAX@std@@SAXAAV?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@1@PAU01@@Z
_TEXT	SEGMENT
__Pnext$1 = -8						; size = 4
__Pnode$ = -4						; size = 4
__Al$ = 8						; size = 4
__Head$ = 12						; size = 4
??$_Free_non_head@V?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@std@@@?$_List_node@VPathEdge@@PAX@std@@SAXAAV?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@1@PAU01@@Z PROC ; std::_List_node<PathEdge,void *>::_Free_non_head<std::allocator<std::_List_node<PathEdge,void *> > >, COMDAT

; 337  :         _Alnode& _Al, _Nodeptr _Head) noexcept { // free a list starting at _First and terminated at nullptr

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH

; 338  :         _Head->_Prev->_Next = nullptr;

	mov	eax, DWORD PTR __Head$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx], 0

; 339  : 
; 340  :         auto _Pnode = _Head->_Next;

	mov	edx, DWORD PTR __Head$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR __Pnode$[ebp], eax

; 341  :         for (_Nodeptr _Pnext; _Pnode; _Pnode = _Pnext) {

	jmp	SHORT $LN4@Free_non_h
$LN2@Free_non_h:
	mov	ecx, DWORD PTR __Pnext$1[ebp]
	mov	DWORD PTR __Pnode$[ebp], ecx
$LN4@Free_non_h:
	cmp	DWORD PTR __Pnode$[ebp], 0
	je	SHORT $LN5@Free_non_h

; 342  :             _Pnext = _Pnode->_Next;

	mov	edx, DWORD PTR __Pnode$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR __Pnext$1[ebp], eax

; 343  :             _Freenode(_Al, _Pnode);

	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Al$[ebp]
	push	edx
	call	??$_Freenode@V?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@std@@@?$_List_node@VPathEdge@@PAX@std@@SAXAAV?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@1@PAU01@@Z ; std::_List_node<PathEdge,void *>::_Freenode<std::allocator<std::_List_node<PathEdge,void *> > >
	add	esp, 8

; 344  :         }

	jmp	SHORT $LN2@Free_non_h
$LN5@Free_non_h:

; 345  :     }

	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Free_non_head@V?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@std@@@?$_List_node@VPathEdge@@PAX@std@@SAXAAV?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@1@PAU01@@Z ENDP ; std::_List_node<PathEdge,void *>::_Free_non_head<std::allocator<std::_List_node<PathEdge,void *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstddef
;	COMDAT ??$addressof@VPathEdge@@@std@@YAPAVPathEdge@@AAV1@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@VPathEdge@@@std@@YAPAVPathEdge@@AAV1@@Z PROC ; std::addressof<PathEdge>, COMDAT

; 279  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept { // return address of _Val

	push	ebp
	mov	ebp, esp

; 280  :     return __builtin_addressof(_Val);

	mov	eax, DWORD PTR __Val$[ebp]

; 281  : }

	pop	ebp
	ret	0
??$addressof@VPathEdge@@@std@@YAPAVPathEdge@@AAV1@@Z ENDP ; std::addressof<PathEdge>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Construct_in_place@U_Container_proxy@std@@PAU_Container_base12@2@@std@@YAXAAU_Container_proxy@0@$$QAPAU_Container_base12@0@@Z
_TEXT	SEGMENT
$T1 = -4						; size = 4
__Obj$ = 8						; size = 4
_<_Args_0>$ = 12					; size = 4
??$_Construct_in_place@U_Container_proxy@std@@PAU_Container_base12@2@@std@@YAXAAU_Container_proxy@0@$$QAPAU_Container_base12@0@@Z PROC ; std::_Construct_in_place<std::_Container_proxy,std::_Container_base12 *>, COMDAT

; 198  : void _Construct_in_place(_Ty& _Obj, _Types&&... _Args) _NOEXCEPT_COND(is_nothrow_constructible_v<_Ty, _Types...>) {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH

; 199  :     ::new (const_cast<void*>(static_cast<const volatile void*>(_STD addressof(_Obj))))

	mov	eax, DWORD PTR __Obj$[ebp]
	push	eax
	call	??$addressof@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@AAU10@@Z ; std::addressof<std::_Container_proxy>
	add	esp, 4
	push	eax
	push	8
	call	??2@YAPAXIPAX@Z				; operator new
	add	esp, 8
	mov	DWORD PTR $T1[ebp], eax
	mov	ecx, DWORD PTR _<_Args_0>$[ebp]
	push	ecx
	call	??$forward@PAU_Container_base12@std@@@std@@YA$$QAPAU_Container_base12@0@AAPAU10@@Z ; std::forward<std::_Container_base12 *>
	add	esp, 4
	mov	edx, DWORD PTR [eax]
	push	edx
	mov	ecx, DWORD PTR $T1[ebp]
	call	??0_Container_proxy@std@@QAE@PAU_Container_base12@1@@Z ; std::_Container_proxy::_Container_proxy

; 200  :         _Ty(_STD forward<_Types>(_Args)...);
; 201  : }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??$_Construct_in_place@U_Container_proxy@std@@PAU_Container_base12@2@@std@@YAXAAU_Container_proxy@0@$$QAPAU_Container_base12@0@@Z ENDP ; std::_Construct_in_place<std::_Container_proxy,std::_Container_base12 *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstddef
;	COMDAT ??$addressof@U_Container_base12@std@@@std@@YAPAU_Container_base12@0@AAU10@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@U_Container_base12@std@@@std@@YAPAU_Container_base12@0@AAU10@@Z PROC ; std::addressof<std::_Container_base12>, COMDAT

; 279  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept { // return address of _Val

	push	ebp
	mov	ebp, esp

; 280  :     return __builtin_addressof(_Val);

	mov	eax, DWORD PTR __Val$[ebp]

; 281  : }

	pop	ebp
	ret	0
??$addressof@U_Container_base12@std@@@std@@YAPAU_Container_base12@0@AAU10@@Z ENDP ; std::addressof<std::_Container_base12>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstddef
;	COMDAT ??$_Unfancy@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@PAU10@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Unfancy@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@PAU10@@Z PROC ; std::_Unfancy<std::_Container_proxy>, COMDAT

; 293  : _Ty* _Unfancy(_Ty* _Ptr) { // do nothing for plain pointers

	push	ebp
	mov	ebp, esp

; 294  :     return _Ptr;

	mov	eax, DWORD PTR __Ptr$[ebp]

; 295  : }

	pop	ebp
	ret	0
??$_Unfancy@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@PAU10@@Z ENDP ; std::_Unfancy<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$?0D@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@D@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??$?0D@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@D@1@@Z PROC ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char>, COMDAT
; _this$ = ecx

; 863  :     constexpr allocator(const allocator<_Other>&) noexcept {}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0D@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@D@1@@Z ENDP ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstddef
;	COMDAT ??$_Unfancy@D@std@@YAPADPAD@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Unfancy@D@std@@YAPADPAD@Z PROC			; std::_Unfancy<char>, COMDAT

; 293  : _Ty* _Unfancy(_Ty* _Ptr) { // do nothing for plain pointers

	push	ebp
	mov	ebp, esp

; 294  :     return _Ptr;

	mov	eax, DWORD PTR __Ptr$[ebp]

; 295  : }

	pop	ebp
	ret	0
??$_Unfancy@D@std@@YAPADPAD@Z ENDP			; std::_Unfancy<char>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\utility
;	COMDAT ??$_Min_value@I@std@@YAABIABI0@Z
_TEXT	SEGMENT
tv65 = -8						; size = 4
$T1 = -4						; size = 4
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$_Min_value@I@std@@YAABIABI0@Z PROC			; std::_Min_value<unsigned int>, COMDAT

; 25   :     _NOEXCEPT_COND(noexcept(_Right < _Left)) { // return smaller of _Left and _Right

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH

; 26   :     return _Right < _Left ? _Right : _Left;

	mov	eax, DWORD PTR __Right$[ebp]
	mov	ecx, DWORD PTR __Left$[ebp]
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR [ecx]
	jae	SHORT $LN3@Min_value
	mov	eax, DWORD PTR __Right$[ebp]
	mov	DWORD PTR tv65[ebp], eax
	jmp	SHORT $LN4@Min_value
$LN3@Min_value:
	mov	ecx, DWORD PTR __Left$[ebp]
	mov	DWORD PTR tv65[ebp], ecx
$LN4@Min_value:
	mov	edx, DWORD PTR tv65[ebp]
	mov	DWORD PTR $T1[ebp], edx
	mov	eax, DWORD PTR $T1[ebp]

; 27   : }

	mov	esp, ebp
	pop	ebp
	ret	0
??$_Min_value@I@std@@YAABIABI0@Z ENDP			; std::_Min_value<unsigned int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\list
;	COMDAT ??$_Construct_range_unchecked@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@U_Iterator_base0@2@@std@@@?$list@VPathEdge@@V?$allocator@VPathEdge@@@std@@@std@@AAEXV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@U_Iterator_base0@2@@1@0@Z
_TEXT	SEGMENT
__Appended$ = -116					; size = 64
__Proxy$ = -44						; size = 8
_$S24$ = -25						; size = 1
__Alproxy$ = -20					; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
??$_Construct_range_unchecked@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@U_Iterator_base0@2@@std@@@?$list@VPathEdge@@V?$allocator@VPathEdge@@@std@@@std@@AAEXV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@U_Iterator_base0@2@@1@0@Z PROC ; std::list<PathEdge,std::allocator<PathEdge> >::_Construct_range_unchecked<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<PathEdge> >,std::_Iterator_base0> >, COMDAT
; _this$ = ecx

; 793  :     void _Construct_range_unchecked(_Iter _First, _Iter _Last) {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??$_Construct_range_unchecked@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@U_Iterator_base0@2@@std@@@?$list@VPathEdge@@V?$allocator@VPathEdge@@@std@@@std@@AAEXV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@U_Iterator_base0@2@@1@0@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 108				; 0000006cH
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-120]
	mov	ecx, 27					; 0000001bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 794  :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alnode, _Getal());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$list@VPathEdge@@V?$allocator@VPathEdge@@@std@@@std@@AAEAAV?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@2@XZ ; std::list<PathEdge,std::allocator<PathEdge> >::_Getal
	push	eax
	lea	ecx, DWORD PTR _$S24$[ebp]
	call	??$?0U?$_List_node@VPathEdge@@PAX@std@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::_List_node<PathEdge,void *> >
	lea	eax, DWORD PTR _$S24$[ebp]
	mov	DWORD PTR __Alproxy$[ebp], eax

; 795  :         _Container_proxy_ptr<_Alty> _Proxy(_Alproxy, _Mypair._Myval2);

	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Alproxy$[ebp]
	push	edx
	lea	ecx, DWORD PTR __Proxy$[ebp]
	call	??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@AAV?$allocator@U_Container_proxy@std@@@1@AAU_Container_base12@1@@Z ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 796  :         _List_node_insert_op<_Alnode> _Appended(_Getal());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$list@VPathEdge@@V?$allocator@VPathEdge@@@std@@@std@@AAEAAV?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@2@XZ ; std::list<PathEdge,std::allocator<PathEdge> >::_Getal
	push	eax
	lea	ecx, DWORD PTR __Appended$[ebp]
	call	??0?$_List_node_insert_op@V?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@std@@@std@@QAE@AAV?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@1@@Z ; std::_List_node_insert_op<std::allocator<std::_List_node<PathEdge,void *> > >::_List_node_insert_op<std::allocator<std::_List_node<PathEdge,void *> > >
	mov	BYTE PTR __$EHRec$[ebp+8], 1

; 797  :         _Appended._Append_range_unchecked(_First, _Last);

	mov	eax, DWORD PTR __Last$[ebp]
	push	eax
	mov	ecx, DWORD PTR __First$[ebp]
	push	ecx
	lea	ecx, DWORD PTR __Appended$[ebp]
	call	??$_Append_range_unchecked@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@U_Iterator_base0@2@@std@@V12@@?$_List_node_insert_op@V?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@std@@@std@@QAEXV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@U_Iterator_base0@2@@1@V21@@Z ; std::_List_node_insert_op<std::allocator<std::_List_node<PathEdge,void *> > >::_Append_range_unchecked<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<PathEdge> >,std::_Iterator_base0>,std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<PathEdge> >,std::_Iterator_base0> >

; 798  :         _Appended._Attach_head(_Mypair._Myval2);

	mov	edx, DWORD PTR _this$[ebp]
	push	edx
	lea	ecx, DWORD PTR __Appended$[ebp]
	call	??$_Attach_head@U?$_List_simple_types@VPathEdge@@@std@@@?$_List_node_insert_op@V?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@std@@@std@@QAEXAAV?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@1@@Z ; std::_List_node_insert_op<std::allocator<std::_List_node<PathEdge,void *> > >::_Attach_head<std::_List_simple_types<PathEdge> >

; 799  :         _Proxy._Release();

	lea	ecx, DWORD PTR __Proxy$[ebp]
	call	?_Release@_Basic_container_proxy_ptr12@std@@QAEXXZ ; std::_Basic_container_proxy_ptr12::_Release

; 800  :     }

	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR __Appended$[ebp]
	call	??1?$_List_node_insert_op@V?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@std@@@std@@QAE@XZ ; std::_List_node_insert_op<std::allocator<std::_List_node<PathEdge,void *> > >::~_List_node_insert_op<std::allocator<std::_List_node<PathEdge,void *> > >
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Proxy$[ebp]
	call	??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN10@Construct_
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	add	esp, 120				; 00000078H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	3
$LN10@Construct_:
	DD	3
	DD	$LN9@Construct_
$LN9@Construct_:
	DD	-25					; ffffffe7H
	DD	1
	DD	$LN5@Construct_
	DD	-44					; ffffffd4H
	DD	8
	DD	$LN6@Construct_
	DD	-116					; ffffff8cH
	DD	64					; 00000040H
	DD	$LN7@Construct_
$LN7@Construct_:
	DB	95					; 0000005fH
	DB	65					; 00000041H
	DB	112					; 00000070H
	DB	112					; 00000070H
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	100					; 00000064H
	DB	0
$LN6@Construct_:
	DB	95					; 0000005fH
	DB	80					; 00000050H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	120					; 00000078H
	DB	121					; 00000079H
	DB	0
$LN5@Construct_:
	DB	36					; 00000024H
	DB	83					; 00000053H
	DB	50					; 00000032H
	DB	52					; 00000034H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Construct_range_unchecked@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@U_Iterator_base0@2@@std@@@?$list@VPathEdge@@V?$allocator@VPathEdge@@@std@@@std@@AAEXV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@U_Iterator_base0@2@@1@0@Z$0:
	lea	ecx, DWORD PTR __Proxy$[ebp]
	jmp	??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
__unwindfunclet$??$_Construct_range_unchecked@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@U_Iterator_base0@2@@std@@@?$list@VPathEdge@@V?$allocator@VPathEdge@@@std@@@std@@AAEXV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@U_Iterator_base0@2@@1@0@Z$1:
	lea	ecx, DWORD PTR __Appended$[ebp]
	jmp	??1?$_List_node_insert_op@V?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@std@@@std@@QAE@XZ ; std::_List_node_insert_op<std::allocator<std::_List_node<PathEdge,void *> > >::~_List_node_insert_op<std::allocator<std::_List_node<PathEdge,void *> > >
__ehhandler$??$_Construct_range_unchecked@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@U_Iterator_base0@2@@std@@@?$list@VPathEdge@@V?$allocator@VPathEdge@@@std@@@std@@AAEXV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@U_Iterator_base0@2@@1@0@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-116]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??$_Construct_range_unchecked@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@U_Iterator_base0@2@@std@@@?$list@VPathEdge@@V?$allocator@VPathEdge@@@std@@@std@@AAEXV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@U_Iterator_base0@2@@1@0@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??$_Construct_range_unchecked@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@U_Iterator_base0@2@@std@@@?$list@VPathEdge@@V?$allocator@VPathEdge@@@std@@@std@@AAEXV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@U_Iterator_base0@2@@1@0@Z ENDP ; std::list<PathEdge,std::allocator<PathEdge> >::_Construct_range_unchecked<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<PathEdge> >,std::_Iterator_base0> >
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\list
;	COMDAT ??9?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@U_Iterator_base0@2@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
tv69 = -8						; size = 4
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??9?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@U_Iterator_base0@2@@std@@QBE_NABV01@@Z PROC ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<PathEdge> >,std::_Iterator_base0>::operator!=, COMDAT
; _this$ = ecx

; 75   :     _NODISCARD bool operator!=(const _List_unchecked_const_iterator& _Right) const {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 76   :         return !(*this == _Right);

	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@U_Iterator_base0@2@@std@@QBE_NABV01@@Z ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<PathEdge> >,std::_Iterator_base0>::operator==
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv69[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv69[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv69[ebp]

; 77   :     }

	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??9?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@U_Iterator_base0@2@@std@@QBE_NABV01@@Z ENDP ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<PathEdge> >,std::_Iterator_base0>::operator!=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\list
;	COMDAT ??8?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@U_Iterator_base0@2@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
tv67 = -8						; size = 4
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??8?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@U_Iterator_base0@2@@std@@QBE_NABV01@@Z PROC ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<PathEdge> >,std::_Iterator_base0>::operator==, COMDAT
; _this$ = ecx

; 71   :     _NODISCARD bool operator==(const _List_unchecked_const_iterator& _Right) const {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 72   :         return _Ptr == _Right._Ptr;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR [ecx]
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv67[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv67[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv67[ebp]

; 73   :     }

	mov	esp, ebp
	pop	ebp
	ret	4
??8?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@U_Iterator_base0@2@@std@@QBE_NABV01@@Z ENDP ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<PathEdge> >,std::_Iterator_base0>::operator==
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\list
;	COMDAT ??E?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??E?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ PROC ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<PathEdge> >,std::_Iterator_base0>::operator++, COMDAT
; _this$ = ecx

; 49   :     _List_unchecked_const_iterator& operator++() {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 50   :         _Ptr = _Ptr->_Next;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx]
	mov	DWORD PTR [edx], eax

; 51   :         return *this;

	mov	eax, DWORD PTR _this$[ebp]

; 52   :     }

	mov	esp, ebp
	pop	ebp
	ret	0
??E?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@U_Iterator_base0@2@@std@@QAEAAV01@XZ ENDP ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<PathEdge> >,std::_Iterator_base0>::operator++
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\list
;	COMDAT ??D?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@U_Iterator_base0@2@@std@@QBEABVPathEdge@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??D?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@U_Iterator_base0@2@@std@@QBEABVPathEdge@@XZ PROC ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<PathEdge> >,std::_Iterator_base0>::operator*, COMDAT
; _this$ = ecx

; 41   :     _NODISCARD reference operator*() const {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 42   :         return _Ptr->_Myval;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax]
	add	eax, 8

; 43   :     }

	mov	esp, ebp
	pop	ebp
	ret	0
??D?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@U_Iterator_base0@2@@std@@QBEABVPathEdge@@XZ ENDP ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<PathEdge> >,std::_Iterator_base0>::operator*
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\list
;	COMDAT ??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU?$_List_node@VPathEdge@@PAX@1@PBV?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Pnode$ = 8						; size = 4
__Plist$ = 12						; size = 4
??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU?$_List_node@VPathEdge@@PAX@1@PBV?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@1@@Z PROC ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<PathEdge> >,std::_Iterator_base0>::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<PathEdge> >,std::_Iterator_base0>, COMDAT
; _this$ = ecx

; 36   :     _List_unchecked_const_iterator(_Nodeptr _Pnode, const _Mylist* _Plist)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 37   :         : _Ptr(_Pnode) { // construct with node pointer _Pnode

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax], ecx

; 38   :         this->_Adopt(_Plist);

	mov	edx, DWORD PTR __Plist$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Adopt@_Iterator_base0@std@@QAEXPBX@Z	; std::_Iterator_base0::_Adopt

; 39   :     }

	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU?$_List_node@VPathEdge@@PAX@1@PBV?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@1@@Z ENDP ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<PathEdge> >,std::_Iterator_base0>::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<PathEdge> >,std::_Iterator_base0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$?0V?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@std@@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@$$QAV?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 1
__Val1$ = 12						; size = 4
??$?0V?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@std@@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@$$QAV?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@1@@Z PROC ; std::_Compressed_pair<std::allocator<std::_List_node<PathEdge,void *> >,std::_List_val<std::_List_simple_types<PathEdge> >,1>::_Compressed_pair<std::allocator<std::_List_node<PathEdge,void *> >,std::_List_val<std::_List_simple_types<PathEdge> >,1><std::allocator<std::_List_node<PathEdge,void *> > >, COMDAT
; _this$ = ecx

; 1418 :         : _Ty1(_STD forward<_Other1>(_Val1)), _Myval2(_STD forward<_Other2>(_Val2)...) {}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Val1$[ebp]
	push	eax
	call	??$forward@V?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@std@@@std@@YA$$QAV?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@0@AAV10@@Z ; std::forward<std::allocator<std::_List_node<PathEdge,void *> > >
	add	esp, 4
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@QAE@XZ ; std::_List_val<std::_List_simple_types<PathEdge> >::_List_val<std::_List_simple_types<PathEdge> >
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??$?0V?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@std@@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@$$QAV?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@1@@Z ENDP ; std::_Compressed_pair<std::allocator<std::_List_node<PathEdge,void *> >,std::_List_val<std::_List_simple_types<PathEdge> >,1>::_Compressed_pair<std::allocator<std::_List_node<PathEdge,void *> >,std::_List_val<std::_List_simple_types<PathEdge> >,1><std::allocator<std::_List_node<PathEdge,void *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$?0U?$_List_node@VPathEdge@@PAX@std@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??$?0U?$_List_node@VPathEdge@@PAX@std@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@1@@Z PROC ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::_List_node<PathEdge,void *> >, COMDAT
; _this$ = ecx

; 863  :     constexpr allocator(const allocator<_Other>&) noexcept {}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??$?0U?$_List_node@VPathEdge@@PAX@std@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@1@@Z ENDP ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::_List_node<PathEdge,void *> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstddef
;	COMDAT ??$addressof@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@@std@@YAPAV?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@0@AAV10@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@@std@@YAPAV?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@0@AAV10@@Z PROC ; std::addressof<std::_List_val<std::_List_simple_types<PathEdge> > >, COMDAT

; 279  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept { // return address of _Val

	push	ebp
	mov	ebp, esp

; 280  :     return __builtin_addressof(_Val);

	mov	eax, DWORD PTR __Val$[ebp]

; 281  : }

	pop	ebp
	ret	0
??$addressof@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@@std@@YAPAV?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@0@AAV10@@Z ENDP ; std::addressof<std::_List_val<std::_List_simple_types<PathEdge> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ PROC ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >, COMDAT
; _this$ = ecx

; 1382 :     ~_Container_proxy_ptr12() {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 1383 :         if (_Ptr) {

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN3@Container_

; 1384 :             _Delete_plain_internal(_Al, _Ptr);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	call	??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@QAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
	add	esp, 8
$LN3@Container_:

; 1385 :         }
; 1386 :     }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ ENDP ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@AAV?$allocator@U_Container_proxy@std@@@1@AAU_Container_base12@1@@Z
_TEXT	SEGMENT
$T1 = -8						; size = 4
_this$ = -4						; size = 4
__Al_$ = 8						; size = 4
__Mycont$ = 12						; size = 4
??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@AAV?$allocator@U_Container_proxy@std@@@1@AAU_Container_base12@1@@Z PROC ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >, COMDAT
; _this$ = ecx

; 1368 :     _Container_proxy_ptr12(_Alloc& _Al_, _Container_base12& _Mycont)

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 1369 :         : _Al(_Al_) { // create a new _Container_proxy pointing at _Mycont

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Al_$[ebp]
	mov	DWORD PTR [eax+4], ecx

; 1370 :         _Ptr = _Unfancy(_Al_.allocate(1));

	push	1
	mov	ecx, DWORD PTR __Al_$[ebp]
	call	?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z ; std::allocator<std::_Container_proxy>::allocate
	push	eax
	call	??$_Unfancy@U_Container_proxy@std@@@std@@YAPAU_Container_proxy@0@PAU10@@Z ; std::_Unfancy<std::_Container_proxy>
	add	esp, 4
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], eax

; 1371 :         _Construct_in_place(*_Ptr, _STD addressof(_Mycont));

	mov	eax, DWORD PTR __Mycont$[ebp]
	push	eax
	call	??$addressof@U_Container_base12@std@@@std@@YAPAU_Container_base12@0@AAU10@@Z ; std::addressof<std::_Container_base12>
	add	esp, 4
	mov	DWORD PTR $T1[ebp], eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	push	eax
	call	??$_Construct_in_place@U_Container_proxy@std@@PAU_Container_base12@2@@std@@YAXAAU_Container_proxy@0@$$QAPAU_Container_base12@0@@Z ; std::_Construct_in_place<std::_Container_proxy,std::_Container_base12 *>
	add	esp, 8

; 1372 :         _Mycont._Myproxy = _Ptr;

	mov	ecx, DWORD PTR __Mycont$[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [ecx], eax

; 1373 :     }

	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@AAV?$allocator@U_Container_proxy@std@@@1@AAU_Container_base12@1@@Z ENDP ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@QAU_Container_proxy@0@@Z
_TEXT	SEGMENT
__Al$ = 8						; size = 4
__Ptr$ = 12						; size = 4
??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@QAU_Container_proxy@0@@Z PROC ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >, COMDAT

; 1109 : void _Delete_plain_internal(_Alloc& _Al, typename _Alloc::value_type* const _Ptr) noexcept {

	push	ebp
	mov	ebp, esp

; 1110 :     // destroy *_Ptr in place, then deallocate _Ptr using _Al; used for internal container types the user didn't name
; 1111 :     using _Ty = typename _Alloc::value_type;
; 1112 :     _Ptr->~_Ty();
; 1113 :     _Deallocate_plain(_Al, _Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Al$[ebp]
	push	ecx
	call	??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@QAU_Container_proxy@0@@Z ; std::_Deallocate_plain<std::allocator<std::_Container_proxy> >
	add	esp, 8

; 1114 : }

	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@QAU_Container_proxy@0@@Z ENDP ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z PROC ; std::allocator<std::_Container_proxy>::allocate, COMDAT
; _this$ = ecx

; 870  :     _NODISCARD _DECLSPEC_ALLOCATOR _Ty* allocate(_CRT_GUARDOVERFLOW const size_t _Count) {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 871  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??$_Get_size_of_n@$07@std@@YAII@Z	; std::_Get_size_of_n<8>
	add	esp, 4
	push	eax
	call	??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
	add	esp, 4

; 872  :     }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@U_Container_proxy@std@@@std@@QAEPAU_Container_proxy@2@I@Z ENDP ; std::allocator<std::_Container_proxy>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?pointer_to@?$pointer_traits@PAVPathEdge@@@std@@SAPAVPathEdge@@AAV3@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
?pointer_to@?$pointer_traits@PAVPathEdge@@@std@@SAPAVPathEdge@@AAV3@@Z PROC ; std::pointer_traits<PathEdge *>::pointer_to, COMDAT

; 299  :     _NODISCARD static pointer pointer_to(_Reftype _Val) noexcept {

	push	ebp
	mov	ebp, esp

; 300  :         return _STD addressof(_Val);

	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	call	??$addressof@VPathEdge@@@std@@YAPAVPathEdge@@AAV1@@Z ; std::addressof<PathEdge>
	add	esp, 4

; 301  :     }

	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
?pointer_to@?$pointer_traits@PAVPathEdge@@@std@@SAPAVPathEdge@@AAV3@@Z ENDP ; std::pointer_traits<PathEdge *>::pointer_to
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??4?$_List_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@@std@@QAEAAV01@$$QAV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??4?$_List_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@@std@@QAEAAV01@$$QAV01@@Z PROC ; std::_List_iterator<std::_List_val<std::_List_simple_types<PathEdge> > >::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@@std@@QAEAAV01@$$QAV01@@Z
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4?$_List_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@@std@@QAEAAV01@$$QAV01@@Z ENDP ; std::_List_iterator<std::_List_val<std::_List_simple_types<PathEdge> > >::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_List_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_List_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@@std@@QAE@XZ PROC ; std::_List_iterator<std::_List_val<std::_List_simple_types<PathEdge> > >::~_List_iterator<std::_List_val<std::_List_simple_types<PathEdge> > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@@std@@QAE@XZ
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_List_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_List_iterator<std::_List_val<std::_List_simple_types<PathEdge> > >::~_List_iterator<std::_List_val<std::_List_simple_types<PathEdge> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\list
;	COMDAT ??E?$_List_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??E?$_List_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_List_iterator<std::_List_val<std::_List_simple_types<PathEdge> > >::operator++, COMDAT
; _this$ = ecx

; 260  :     _List_iterator& operator++() {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 261  :         _Mybase::operator++();

	mov	ecx, DWORD PTR _this$[ebp]
	call	??E?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<PathEdge> > >::operator++

; 262  :         return *this;

	mov	eax, DWORD PTR _this$[ebp]

; 263  :     }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??E?$_List_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_List_iterator<std::_List_val<std::_List_simple_types<PathEdge> > >::operator++
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\list
;	COMDAT ??C?$_List_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@@std@@QBEPAVPathEdge@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??C?$_List_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@@std@@QBEPAVPathEdge@@XZ PROC ; std::_List_iterator<std::_List_val<std::_List_simple_types<PathEdge> > >::operator->, COMDAT
; _this$ = ecx

; 256  :     _NODISCARD pointer operator->() const {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 257  :         return pointer_traits<pointer>::pointer_to(**this);

	mov	ecx, DWORD PTR _this$[ebp]
	call	??D?$_List_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@@std@@QBEAAVPathEdge@@XZ ; std::_List_iterator<std::_List_val<std::_List_simple_types<PathEdge> > >::operator*
	push	eax
	call	?pointer_to@?$pointer_traits@PAVPathEdge@@@std@@SAPAVPathEdge@@AAV3@@Z ; std::pointer_traits<PathEdge *>::pointer_to
	add	esp, 4

; 258  :     }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??C?$_List_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@@std@@QBEPAVPathEdge@@XZ ENDP ; std::_List_iterator<std::_List_val<std::_List_simple_types<PathEdge> > >::operator->
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\list
;	COMDAT ??D?$_List_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@@std@@QBEAAVPathEdge@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??D?$_List_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@@std@@QBEAAVPathEdge@@XZ PROC ; std::_List_iterator<std::_List_val<std::_List_simple_types<PathEdge> > >::operator*, COMDAT
; _this$ = ecx

; 252  :     _NODISCARD reference operator*() const {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 253  :         return const_cast<reference>(_Mybase::operator*());

	mov	ecx, DWORD PTR _this$[ebp]
	call	??D?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@@std@@QBEABVPathEdge@@XZ ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<PathEdge> > >::operator*

; 254  :     }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??D?$_List_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@@std@@QBEAAVPathEdge@@XZ ENDP ; std::_List_iterator<std::_List_val<std::_List_simple_types<PathEdge> > >::operator*
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\list
;	COMDAT ??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@@std@@QAE@PAU?$_List_node@VPathEdge@@PAX@1@PBV?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Pnode$ = 8						; size = 4
__Plist$ = 12						; size = 4
??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@@std@@QAE@PAU?$_List_node@VPathEdge@@PAX@1@PBV?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@1@@Z PROC ; std::_List_iterator<std::_List_val<std::_List_simple_types<PathEdge> > >::_List_iterator<std::_List_val<std::_List_simple_types<PathEdge> > >, COMDAT
; _this$ = ecx

; 248  :     _List_iterator(_Nodeptr _Pnode, const _Mylist* _Plist)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 249  :         : _Mybase(_Pnode, _Plist) { // construct with node pointer _Pnode

	mov	eax, DWORD PTR __Plist$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@@std@@QAE@PAU?$_List_node@VPathEdge@@PAX@1@PBV?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@1@@Z ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<PathEdge> > >::_List_const_iterator<std::_List_val<std::_List_simple_types<PathEdge> > >

; 250  :     }

	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@@std@@QAE@PAU?$_List_node@VPathEdge@@PAX@1@PBV?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@1@@Z ENDP ; std::_List_iterator<std::_List_val<std::_List_simple_types<PathEdge> > >::_List_iterator<std::_List_val<std::_List_simple_types<PathEdge> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\list
;	COMDAT ??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@@std@@QAE@XZ PROC ; std::_List_iterator<std::_List_val<std::_List_simple_types<PathEdge> > >::_List_iterator<std::_List_val<std::_List_simple_types<PathEdge> > >, COMDAT
; _this$ = ecx

; 245  :     _List_iterator() { // construct with null node

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@@std@@QAE@XZ ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<PathEdge> > >::_List_const_iterator<std::_List_val<std::_List_simple_types<PathEdge> > >

; 246  :     }

	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_List_iterator<std::_List_val<std::_List_simple_types<PathEdge> > >::_List_iterator<std::_List_val<std::_List_simple_types<PathEdge> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??4?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@@std@@QAEAAV01@$$QAV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??4?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@@std@@QAEAAV01@$$QAV01@@Z PROC ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<PathEdge> > >::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@U_Iterator_base12@2@@std@@QAEAAV01@$$QAV01@@Z
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@@std@@QAEAAV01@$$QAV01@@Z ENDP ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<PathEdge> > >::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@@std@@QAE@XZ PROC ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<PathEdge> > >::~_List_const_iterator<std::_List_val<std::_List_simple_types<PathEdge> > >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@XZ
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<PathEdge> > >::~_List_const_iterator<std::_List_val<std::_List_simple_types<PathEdge> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\list
;	COMDAT ??9?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
tv69 = -8						; size = 4
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??9?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<PathEdge> > >::operator!=, COMDAT
; _this$ = ecx

; 211  :     _NODISCARD bool operator!=(const _List_const_iterator& _Right) const {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 212  :         return !(*this == _Right);

	mov	eax, DWORD PTR __Right$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??8?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<PathEdge> > >::operator==
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN3@operator
	mov	DWORD PTR tv69[ebp], 1
	jmp	SHORT $LN4@operator
$LN3@operator:
	mov	DWORD PTR tv69[ebp], 0
$LN4@operator:
	mov	al, BYTE PTR tv69[ebp]

; 213  :     }

	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??9?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<PathEdge> > >::operator!=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\list
;	COMDAT ??8?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@@std@@QBE_NABV01@@Z
_TEXT	SEGMENT
tv136 = -8						; size = 4
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??8?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@@std@@QBE_NABV01@@Z PROC ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<PathEdge> > >::operator==, COMDAT
; _this$ = ecx

; 203  :     _NODISCARD bool operator==(const _List_const_iterator& _Right) const {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
$LN4@operator:

; 204  : #if _ITERATOR_DEBUG_LEVEL == 2
; 205  :         _STL_VERIFY(this->_Getcont() == _Right._Getcont(), "list iterators incompatible");

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	mov	esi, eax
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	cmp	esi, eax
	jne	SHORT $LN7@operator
	jmp	SHORT $LN2@operator
$LN7@operator:
	push	OFFSET ??_C@_0BM@BALDKKHE@list?5iterators?5incompatible@
	push	OFFSET ??_C@_02DKCKIIND@?$CFs@
	push	0
	push	205					; 000000cdH
	push	OFFSET ??_C@_0GF@GNCHBLDJ@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
	push	2
	call	__CrtDbgReport
	add	esp, 24					; 00000018H
	cmp	eax, 1
	jne	SHORT $LN11@operator
	int	3
$LN11@operator:
	push	0
	push	205					; 000000cdH
	push	OFFSET ??_C@_1MK@DPPFMAIA@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
	push	OFFSET ??_C@_1NO@HMALCLJG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAL?$AAi?$AAs?$AAt?$AA_?$AAc?$AAo?$AAn?$AAs@
	push	OFFSET ??_C@_1DM@KDLJAKOP@?$AA?$CC?$AAl?$AAi?$AAs?$AAt?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AAs@
	call	__invalid_parameter
	add	esp, 20					; 00000014H
	xor	ecx, ecx
	jne	SHORT $LN7@operator
$LN2@operator:
	xor	edx, edx
	jne	SHORT $LN4@operator

; 206  : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 207  : 
; 208  :         return this->_Ptr == _Right._Ptr;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	edx, DWORD PTR [eax+8]
	cmp	edx, DWORD PTR [ecx+8]
	jne	SHORT $LN12@operator
	mov	DWORD PTR tv136[ebp], 1
	jmp	SHORT $LN13@operator
$LN12@operator:
	mov	DWORD PTR tv136[ebp], 0
$LN13@operator:
	mov	al, BYTE PTR tv136[ebp]

; 209  :     }

	pop	esi
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??8?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@@std@@QBE_NABV01@@Z ENDP ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<PathEdge> > >::operator==
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\list
;	COMDAT ??E?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@@std@@QAEAAV01@XZ
_TEXT	SEGMENT
__Mycont$ = -8						; size = 4
_this$ = -4						; size = 4
??E?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@@std@@QAEAAV01@XZ PROC ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<PathEdge> > >::operator++, COMDAT
; _this$ = ecx

; 168  :     _List_const_iterator& operator++() {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 169  : #if _ITERATOR_DEBUG_LEVEL == 2
; 170  :         const auto _Mycont = static_cast<const _Mylist*>(this->_Getcont());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	mov	DWORD PTR __Mycont$[ebp], eax
$LN4@operator:

; 171  :         _STL_ASSERT(_Mycont, "cannot increment value-initialized list iterator");

	cmp	DWORD PTR __Mycont$[ebp], 0
	je	SHORT $LN7@operator
	jmp	SHORT $LN2@operator
$LN7@operator:
	push	OFFSET ??_C@_0DB@ENBCPNKO@cannot?5increment?5value?9initiali@
	push	OFFSET ??_C@_02DKCKIIND@?$CFs@
	push	0
	push	171					; 000000abH
	push	OFFSET ??_C@_0GF@GNCHBLDJ@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
	push	2
	call	__CrtDbgReport
	add	esp, 24					; 00000018H
	cmp	eax, 1
	jne	SHORT $LN19@operator
	int	3
$LN19@operator:
	push	0
	push	171					; 000000abH
	push	OFFSET ??_C@_1MK@DPPFMAIA@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
	push	OFFSET ??_C@_1NO@NMPGMCFD@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAL?$AAi?$AAs?$AAt?$AA_?$AAc?$AAo?$AAn?$AAs@
	push	OFFSET ??_C@_1GG@JLMAGPNK@?$AA?$CC?$AAc?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAi?$AAn?$AAc?$AAr?$AAe?$AAm?$AAe@
	call	__invalid_parameter
	add	esp, 20					; 00000014H
	xor	ecx, ecx
	jne	SHORT $LN7@operator
$LN2@operator:
	xor	edx, edx
	jne	SHORT $LN4@operator
$LN10@operator:

; 172  :         _STL_VERIFY(this->_Ptr != _Mycont->_Myhead, "cannot increment end list iterator");

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Mycont$[ebp]
	mov	edx, DWORD PTR [eax+8]
	cmp	edx, DWORD PTR [ecx+4]
	je	SHORT $LN13@operator
	jmp	SHORT $LN8@operator
$LN13@operator:
	push	OFFSET ??_C@_0CD@PMFMCEG@cannot?5increment?5end?5list?5itera@
	push	OFFSET ??_C@_02DKCKIIND@?$CFs@
	push	0
	push	172					; 000000acH
	push	OFFSET ??_C@_0GF@GNCHBLDJ@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
	push	2
	call	__CrtDbgReport
	add	esp, 24					; 00000018H
	cmp	eax, 1
	jne	SHORT $LN20@operator
	int	3
$LN20@operator:
	push	0
	push	172					; 000000acH
	push	OFFSET ??_C@_1MK@DPPFMAIA@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
	push	OFFSET ??_C@_1NO@NMPGMCFD@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAL?$AAi?$AAs?$AAt?$AA_?$AAc?$AAo?$AAn?$AAs@
	push	OFFSET ??_C@_1EK@OKKCFDJN@?$AA?$CC?$AAc?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAi?$AAn?$AAc?$AAr?$AAe?$AAm?$AAe@
	call	__invalid_parameter
	add	esp, 20					; 00000014H
	xor	ecx, ecx
	jne	SHORT $LN13@operator
$LN8@operator:
	xor	edx, edx
	jne	SHORT $LN10@operator

; 173  : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 174  : 
; 175  :         this->_Ptr = this->_Ptr->_Next;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx]
	mov	DWORD PTR [edx+8], eax

; 176  :         return *this;

	mov	eax, DWORD PTR _this$[ebp]

; 177  :     }

	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??E?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@@std@@QAEAAV01@XZ ENDP ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<PathEdge> > >::operator++
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\list
;	COMDAT ??D?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@@std@@QBEABVPathEdge@@XZ
_TEXT	SEGMENT
__Mycont$ = -8						; size = 4
_this$ = -4						; size = 4
??D?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@@std@@QBEABVPathEdge@@XZ PROC ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<PathEdge> > >::operator*, COMDAT
; _this$ = ecx

; 154  :     _NODISCARD reference operator*() const {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 155  : #if _ITERATOR_DEBUG_LEVEL == 2
; 156  :         const auto _Mycont = static_cast<const _Mylist*>(this->_Getcont());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	mov	DWORD PTR __Mycont$[ebp], eax
$LN4@operator:

; 157  :         _STL_ASSERT(_Mycont, "cannot dereference value-initialized list iterator");

	cmp	DWORD PTR __Mycont$[ebp], 0
	je	SHORT $LN7@operator
	jmp	SHORT $LN2@operator
$LN7@operator:
	push	OFFSET ??_C@_0DD@MBIHGLJE@cannot?5dereference?5value?9initia@
	push	OFFSET ??_C@_02DKCKIIND@?$CFs@
	push	0
	push	157					; 0000009dH
	push	OFFSET ??_C@_0GF@GNCHBLDJ@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
	push	2
	call	__CrtDbgReport
	add	esp, 24					; 00000018H
	cmp	eax, 1
	jne	SHORT $LN19@operator
	int	3
$LN19@operator:
	push	0
	push	157					; 0000009dH
	push	OFFSET ??_C@_1MK@DPPFMAIA@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
	push	OFFSET ??_C@_1NM@GONFAHHJ@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAL?$AAi?$AAs?$AAt?$AA_?$AAc?$AAo?$AAn?$AAs@
	push	OFFSET ??_C@_1GK@NKIMOCIG@?$AA?$CC?$AAc?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr@
	call	__invalid_parameter
	add	esp, 20					; 00000014H
	xor	ecx, ecx
	jne	SHORT $LN7@operator
$LN2@operator:
	xor	edx, edx
	jne	SHORT $LN4@operator
$LN10@operator:

; 158  :         _STL_VERIFY(this->_Ptr != _Mycont->_Myhead, "cannot dereference end list iterator");

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Mycont$[ebp]
	mov	edx, DWORD PTR [eax+8]
	cmp	edx, DWORD PTR [ecx+4]
	je	SHORT $LN13@operator
	jmp	SHORT $LN8@operator
$LN13@operator:
	push	OFFSET ??_C@_0CF@JCBFHMPL@cannot?5dereference?5end?5list?5ite@
	push	OFFSET ??_C@_02DKCKIIND@?$CFs@
	push	0
	push	158					; 0000009eH
	push	OFFSET ??_C@_0GF@GNCHBLDJ@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
	push	2
	call	__CrtDbgReport
	add	esp, 24					; 00000018H
	cmp	eax, 1
	jne	SHORT $LN20@operator
	int	3
$LN20@operator:
	push	0
	push	158					; 0000009eH
	push	OFFSET ??_C@_1MK@DPPFMAIA@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
	push	OFFSET ??_C@_1NM@GONFAHHJ@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAL?$AAi?$AAs?$AAt?$AA_?$AAc?$AAo?$AAn?$AAs@
	push	OFFSET ??_C@_1EO@CNEFBDCF@?$AA?$CC?$AAc?$AAa?$AAn?$AAn?$AAo?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr@
	call	__invalid_parameter
	add	esp, 20					; 00000014H
	xor	ecx, ecx
	jne	SHORT $LN13@operator
$LN8@operator:
	xor	edx, edx
	jne	SHORT $LN10@operator

; 159  : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 160  : 
; 161  :         return this->_Ptr->_Myval;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]
	add	eax, 8

; 162  :     }

	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??D?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@@std@@QBEABVPathEdge@@XZ ENDP ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<PathEdge> > >::operator*
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\list
;	COMDAT ??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@@std@@QAE@PAU?$_List_node@VPathEdge@@PAX@1@PBV?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Pnode$ = 8						; size = 4
__Plist$ = 12						; size = 4
??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@@std@@QAE@PAU?$_List_node@VPathEdge@@PAX@1@PBV?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@1@@Z PROC ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<PathEdge> > >::_List_const_iterator<std::_List_val<std::_List_simple_types<PathEdge> > >, COMDAT
; _this$ = ecx

; 150  :     _List_const_iterator(_Nodeptr _Pnode, const _Mylist* _Plist)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 151  :         : _Mybase(_Pnode, _Plist) { // construct with node pointer _Pnode

	mov	eax, DWORD PTR __Plist$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Pnode$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU?$_List_node@VPathEdge@@PAX@1@PBV?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@1@@Z ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<PathEdge> >,std::_Iterator_base12>::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<PathEdge> >,std::_Iterator_base12>

; 152  :     }

	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@@std@@QAE@PAU?$_List_node@VPathEdge@@PAX@1@PBV?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@1@@Z ENDP ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<PathEdge> > >::_List_const_iterator<std::_List_val<std::_List_simple_types<PathEdge> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\list
;	COMDAT ??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@@std@@QAE@XZ PROC ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<PathEdge> > >::_List_const_iterator<std::_List_val<std::_List_simple_types<PathEdge> > >, COMDAT
; _this$ = ecx

; 147  :     _List_const_iterator() : _Mybase() { // construct with null node pointer

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@XZ ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<PathEdge> >,std::_Iterator_base12>::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<PathEdge> >,std::_Iterator_base12>

; 148  :     }

	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<PathEdge> > >::_List_const_iterator<std::_List_val<std::_List_simple_types<PathEdge> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??4?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@U_Iterator_base12@2@@std@@QAEAAV01@$$QAV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??4?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@U_Iterator_base12@2@@std@@QAEAAV01@$$QAV01@@Z PROC ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<PathEdge> >,std::_Iterator_base12>::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z ; std::_Iterator_base12::operator=
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR ___that$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	DWORD PTR [ecx+8], eax
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@U_Iterator_base12@2@@std@@QAEAAV01@$$QAV01@@Z ENDP ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<PathEdge> >,std::_Iterator_base12>::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@XZ PROC ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<PathEdge> >,std::_Iterator_base12>::~_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<PathEdge> >,std::_Iterator_base12>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1_Iterator_base12@std@@QAE@XZ		; std::_Iterator_base12::~_Iterator_base12
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@XZ ENDP ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<PathEdge> >,std::_Iterator_base12>::~_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<PathEdge> >,std::_Iterator_base12>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\list
;	COMDAT ??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU?$_List_node@VPathEdge@@PAX@1@PBV?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Pnode$ = 8						; size = 4
__Plist$ = 12						; size = 4
??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU?$_List_node@VPathEdge@@PAX@1@PBV?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@1@@Z PROC ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<PathEdge> >,std::_Iterator_base12>::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<PathEdge> >,std::_Iterator_base12>, COMDAT
; _this$ = ecx

; 36   :     _List_unchecked_const_iterator(_Nodeptr _Pnode, const _Mylist* _Plist)

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 37   :         : _Ptr(_Pnode) { // construct with node pointer _Pnode

	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Iterator_base12@std@@QAE@XZ		; std::_Iterator_base12::_Iterator_base12
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Pnode$[ebp]
	mov	DWORD PTR [eax+8], ecx

; 38   :         this->_Adopt(_Plist);

	mov	edx, DWORD PTR __Plist$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z ; std::_Iterator_base12::_Adopt

; 39   :     }

	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@PAU?$_List_node@VPathEdge@@PAX@1@PBV?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@1@@Z ENDP ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<PathEdge> >,std::_Iterator_base12>::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<PathEdge> >,std::_Iterator_base12>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\list
;	COMDAT ??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@XZ PROC ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<PathEdge> >,std::_Iterator_base12>::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<PathEdge> >,std::_Iterator_base12>, COMDAT
; _this$ = ecx

; 33   :     _List_unchecked_const_iterator() : _Ptr() { // construct with null node pointer

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Iterator_base12@std@@QAE@XZ		; std::_Iterator_base12::_Iterator_base12
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+8], 0

; 34   :     }

	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@U_Iterator_base12@2@@std@@QAE@XZ ENDP ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<PathEdge> >,std::_Iterator_base12>::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<PathEdge> >,std::_Iterator_base12>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_GGoal_FollowPath@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_GGoal_FollowPath@@UAEPAXI@Z PROC			; Goal_FollowPath::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1Goal_FollowPath@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@scalar
	push	40					; 00000028H
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
$LN2@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GGoal_FollowPath@@UAEPAXI@Z ENDP			; Goal_FollowPath::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1Goal_FollowPath@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1Goal_FollowPath@@UAE@XZ PROC				; Goal_FollowPath::~Goal_FollowPath, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 28					; 0000001cH
	call	??1?$list@VPathEdge@@V?$allocator@VPathEdge@@@std@@@std@@QAE@XZ ; std::list<PathEdge,std::allocator<PathEdge> >::~list<PathEdge,std::allocator<PathEdge> >
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$Goal_Composite@VRaven_Bot@@@@UAE@XZ ; Goal_Composite<Raven_Bot>::~Goal_Composite<Raven_Bot>
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1Goal_FollowPath@@UAE@XZ ENDP				; Goal_FollowPath::~Goal_FollowPath
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\Réseau neuronnes - Projet Raven\Réseau\solution_lab_apprentissage_a_partir_bot\solution_lab_apprentissage_a_partir_bot\Buckland_Chapter7 to 10_Raven_apprentissage\goals\Goal_FollowPath.h
;	COMDAT ?Terminate@Goal_FollowPath@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Terminate@Goal_FollowPath@@UAEXXZ PROC			; Goal_FollowPath::Terminate, COMDAT
; _this$ = ecx

; 35   :   void Terminate(){}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	0
?Terminate@Goal_FollowPath@@UAEXXZ ENDP			; Goal_FollowPath::Terminate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\Réseau neuronnes - Projet Raven\Réseau\solution_lab_apprentissage_a_partir_bot\solution_lab_apprentissage_a_partir_bot\Buckland_Chapter7 to 10_Raven_apprentissage\goals\Goal_FollowPath.cpp
;	COMDAT ?Render@Goal_FollowPath@@UAEXXZ
_TEXT	SEGMENT
tv166 = -124						; size = 4
tv65 = -120						; size = 4
tv164 = -116						; size = 4
$T2 = -112						; size = 16
$T3 = -96						; size = 16
$T4 = -80						; size = 16
$T5 = -64						; size = 12
$T6 = -49						; size = 1
$T7 = -48						; size = 12
_it$ = -32						; size = 12
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
?Render@Goal_FollowPath@@UAEXXZ PROC			; Goal_FollowPath::Render, COMDAT
; _this$ = ecx

; 97   : { 

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Render@Goal_FollowPath@@UAEXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 112				; 00000070H
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-124]
	mov	ecx, 28					; 0000001cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 98   :   //render all the path waypoints remaining on the path list
; 99   :   std::list<PathEdge>::iterator it;

	lea	ecx, DWORD PTR _it$[ebp]
	call	??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@@std@@QAE@XZ ; std::_List_iterator<std::_List_val<std::_List_simple_types<PathEdge> > >::_List_iterator<std::_List_val<std::_List_simple_types<PathEdge> > >
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 100  :   for (it = m_Path.begin(); it != m_Path.end(); ++it)

	lea	eax, DWORD PTR $T7[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 28					; 0000001cH
	call	?begin@?$list@VPathEdge@@V?$allocator@VPathEdge@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@@2@XZ ; std::list<PathEdge,std::allocator<PathEdge> >::begin
	mov	DWORD PTR tv164[ebp], eax
	mov	ecx, DWORD PTR tv164[ebp]
	push	ecx
	lea	ecx, DWORD PTR _it$[ebp]
	call	??4?$_List_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@@std@@QAEAAV01@$$QAV01@@Z
	lea	ecx, DWORD PTR $T7[ebp]
	call	??1?$_List_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@@std@@QAE@XZ
	jmp	SHORT $LN4@Render
$LN2@Render:
	lea	ecx, DWORD PTR _it$[ebp]
	call	??E?$_List_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_List_iterator<std::_List_val<std::_List_simple_types<PathEdge> > >::operator++
$LN4@Render:
	lea	edx, DWORD PTR $T5[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 28					; 0000001cH
	call	?end@?$list@VPathEdge@@V?$allocator@VPathEdge@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@@2@XZ ; std::list<PathEdge,std::allocator<PathEdge> >::end
	mov	DWORD PTR tv65[ebp], eax
	mov	eax, DWORD PTR tv65[ebp]
	mov	DWORD PTR tv166[ebp], eax
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	ecx, DWORD PTR tv166[ebp]
	push	ecx
	lea	ecx, DWORD PTR _it$[ebp]
	call	??9?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<PathEdge> > >::operator!=
	mov	BYTE PTR $T6[ebp], al
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR $T5[ebp]
	call	??1?$_List_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@@std@@QAE@XZ
	movzx	edx, BYTE PTR $T6[ebp]
	test	edx, edx
	je	$LN3@Render

; 101  :   {  
; 102  :     gdi->BlackPen();

	call	?Instance@Cgdi@@SAPAV1@XZ		; Cgdi::Instance
	mov	ecx, eax
	call	?BlackPen@Cgdi@@QAEXXZ			; Cgdi::BlackPen

; 103  :     gdi->LineWithArrow(it->Source(), it->Destination(), 5);

	sub	esp, 8
	movsd	xmm0, QWORD PTR __real@4014000000000000
	movsd	QWORD PTR [esp], xmm0
	lea	eax, DWORD PTR $T4[ebp]
	push	eax
	lea	ecx, DWORD PTR _it$[ebp]
	call	??C?$_List_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@@std@@QBEPAVPathEdge@@XZ ; std::_List_iterator<std::_List_val<std::_List_simple_types<PathEdge> > >::operator->
	mov	ecx, eax
	call	?Destination@PathEdge@@QBE?AUVector2D@@XZ ; PathEdge::Destination
	sub	esp, 16					; 00000010H
	mov	ecx, esp
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+4], edx
	mov	edx, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+8], edx
	mov	eax, DWORD PTR [eax+12]
	mov	DWORD PTR [ecx+12], eax
	lea	ecx, DWORD PTR $T3[ebp]
	push	ecx
	lea	ecx, DWORD PTR _it$[ebp]
	call	??C?$_List_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@@std@@QBEPAVPathEdge@@XZ ; std::_List_iterator<std::_List_val<std::_List_simple_types<PathEdge> > >::operator->
	mov	ecx, eax
	call	?Source@PathEdge@@QBE?AUVector2D@@XZ	; PathEdge::Source
	sub	esp, 16					; 00000010H
	mov	edx, esp
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [edx], ecx
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR [edx+4], ecx
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR [edx+8], ecx
	mov	eax, DWORD PTR [eax+12]
	mov	DWORD PTR [edx+12], eax
	call	?Instance@Cgdi@@SAPAV1@XZ		; Cgdi::Instance
	mov	ecx, eax
	call	?LineWithArrow@Cgdi@@QAEXUVector2D@@0N@Z ; Cgdi::LineWithArrow

; 104  :     
; 105  :     gdi->RedBrush();

	call	?Instance@Cgdi@@SAPAV1@XZ		; Cgdi::Instance
	mov	ecx, eax
	call	?RedBrush@Cgdi@@QAEXXZ			; Cgdi::RedBrush

; 106  :     gdi->BlackPen();

	call	?Instance@Cgdi@@SAPAV1@XZ		; Cgdi::Instance
	mov	ecx, eax
	call	?BlackPen@Cgdi@@QAEXXZ			; Cgdi::BlackPen

; 107  :     gdi->Circle(it->Destination(), 3);

	sub	esp, 8
	movsd	xmm0, QWORD PTR __real@4008000000000000
	movsd	QWORD PTR [esp], xmm0
	lea	ecx, DWORD PTR $T2[ebp]
	push	ecx
	lea	ecx, DWORD PTR _it$[ebp]
	call	??C?$_List_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@@std@@QBEPAVPathEdge@@XZ ; std::_List_iterator<std::_List_val<std::_List_simple_types<PathEdge> > >::operator->
	mov	ecx, eax
	call	?Destination@PathEdge@@QBE?AUVector2D@@XZ ; PathEdge::Destination
	sub	esp, 16					; 00000010H
	mov	edx, esp
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR [edx], ecx
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR [edx+4], ecx
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR [edx+8], ecx
	mov	eax, DWORD PTR [eax+12]
	mov	DWORD PTR [edx+12], eax
	call	?Instance@Cgdi@@SAPAV1@XZ		; Cgdi::Instance
	mov	ecx, eax
	call	?Circle@Cgdi@@QAEXUVector2D@@N@Z	; Cgdi::Circle

; 108  :   }

	jmp	$LN2@Render
$LN3@Render:

; 109  : 
; 110  :   //forward the request to the subgoals
; 111  :   Goal_Composite<Raven_Bot>::Render();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?Render@?$Goal_Composite@VRaven_Bot@@@@UAEXXZ ; Goal_Composite<Raven_Bot>::Render

; 112  : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _it$[ebp]
	call	??1?$_List_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@@std@@QAE@XZ
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN12@Render
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	add	esp, 124				; 0000007cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN12@Render:
	DD	1
	DD	$LN11@Render
$LN11@Render:
	DD	-32					; ffffffe0H
	DD	12					; 0000000cH
	DD	$LN9@Render
$LN9@Render:
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Render@Goal_FollowPath@@UAEXXZ$0:
	lea	ecx, DWORD PTR _it$[ebp]
	jmp	??1?$_List_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?Render@Goal_FollowPath@@UAEXXZ$2:
	lea	ecx, DWORD PTR $T5[ebp]
	jmp	??1?$_List_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@@std@@QAE@XZ
__ehhandler$?Render@Goal_FollowPath@@UAEXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-120]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?Render@Goal_FollowPath@@UAEXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?Render@Goal_FollowPath@@UAEXXZ ENDP			; Goal_FollowPath::Render
; Function compile flags: /Odtp /RTCsu
; File D:\Réseau neuronnes - Projet Raven\Réseau\solution_lab_apprentissage_a_partir_bot\solution_lab_apprentissage_a_partir_bot\Buckland_Chapter7 to 10_Raven_apprentissage\goals\Goal_FollowPath.cpp
;	COMDAT ?Process@Goal_FollowPath@@UAEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Process@Goal_FollowPath@@UAEHXZ PROC			; Goal_FollowPath::Process, COMDAT
; _this$ = ecx

; 78   : {

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 79   :   //if status is inactive, call Activate()
; 80   :   ActivateIfInactive();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?ActivateIfInactive@?$Goal@VRaven_Bot@@@@IAEXXZ ; Goal<Raven_Bot>::ActivateIfInactive

; 81   : 
; 82   :   m_iStatus = ProcessSubgoals();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?ProcessSubgoals@?$Goal_Composite@VRaven_Bot@@@@IAEHXZ ; Goal_Composite<Raven_Bot>::ProcessSubgoals
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+12], eax

; 83   : 
; 84   :   //if there are no subgoals present check to see if the path still has edges.
; 85   :   //remaining. If it does then call activate to grab the next edge.
; 86   :   if (m_iStatus == completed && !m_Path.empty())

	mov	edx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [edx+12], 2
	jne	SHORT $LN2@Process
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 28					; 0000001cH
	call	?empty@?$list@VPathEdge@@V?$allocator@VPathEdge@@@std@@@std@@QBE_NXZ ; std::list<PathEdge,std::allocator<PathEdge> >::empty
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN2@Process

; 87   :   {
; 88   :     Activate(); 

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@Process:

; 89   :   }
; 90   : 
; 91   :   return m_iStatus;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx+12]

; 92   : }

	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Process@Goal_FollowPath@@UAEHXZ ENDP			; Goal_FollowPath::Process
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\Réseau neuronnes - Projet Raven\Réseau\solution_lab_apprentissage_a_partir_bot\solution_lab_apprentissage_a_partir_bot\Buckland_Chapter7 to 10_Raven_apprentissage\goals\Goal_FollowPath.cpp
;	COMDAT ?Activate@Goal_FollowPath@@UAEXXZ
_TEXT	SEGMENT
tv176 = -104						; size = 4
tv142 = -100						; size = 4
tv77 = -96						; size = 4
$T2 = -92						; size = 12
$T3 = -80						; size = 4
$T4 = -76						; size = 4
$T5 = -72						; size = 4
$T6 = -68						; size = 4
_edge$ = -60						; size = 40
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
?Activate@Goal_FollowPath@@UAEXXZ PROC			; Goal_FollowPath::Activate, COMDAT
; _this$ = ecx

; 24   : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?Activate@Goal_FollowPath@@UAEXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 92					; 0000005cH
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-104]
	mov	ecx, 23					; 00000017H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 25   :   m_iStatus = active;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+12], 0

; 26   :   
; 27   :   //get a reference to the next edge
; 28   :   PathEdge edge = m_Path.front();

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 28					; 0000001cH
	call	?front@?$list@VPathEdge@@V?$allocator@VPathEdge@@@std@@@std@@QAEAAVPathEdge@@XZ ; std::list<PathEdge,std::allocator<PathEdge> >::front
	mov	ecx, 10					; 0000000aH
	mov	esi, eax
	lea	edi, DWORD PTR _edge$[ebp]
	rep movsd

; 29   : 
; 30   :   //remove the edge from the path
; 31   :   m_Path.pop_front(); 

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 28					; 0000001cH
	call	?pop_front@?$list@VPathEdge@@V?$allocator@VPathEdge@@@std@@@std@@QAEXXZ ; std::list<PathEdge,std::allocator<PathEdge> >::pop_front

; 32   : 
; 33   :   //some edges specify that the bot should use a specific behavior when
; 34   :   //following them. This switch statement queries the edge behavior flag and
; 35   :   //adds the appropriate goals/s to the subgoal list.
; 36   :   switch(edge.Behavior())

	lea	ecx, DWORD PTR _edge$[ebp]
	call	?Behavior@PathEdge@@QBEHXZ		; PathEdge::Behavior
	mov	DWORD PTR tv77[ebp], eax
	cmp	DWORD PTR tv77[ebp], 64			; 00000040H
	ja	$LN8@Activate
	mov	ecx, DWORD PTR tv77[ebp]
	movzx	edx, BYTE PTR $LN16@Activate[ecx]
	jmp	DWORD PTR $LN17@Activate[edx*4]
$LN4@Activate:

; 37   :   {
; 38   :   case NavGraphEdge::normal:
; 39   :     {
; 40   :       AddSubgoal(new Goal_TraverseEdge(m_pOwner, edge, m_Path.empty()));

	push	80					; 00000050H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T5[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T5[ebp], 0
	je	SHORT $LN10@Activate
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 28					; 0000001cH
	call	?empty@?$list@VPathEdge@@V?$allocator@VPathEdge@@@std@@@std@@QBE_NXZ ; std::list<PathEdge,std::allocator<PathEdge> >::empty
	movzx	eax, al
	push	eax
	sub	esp, 40					; 00000028H
	mov	ecx, 10					; 0000000aH
	lea	esi, DWORD PTR _edge$[ebp]
	mov	edi, esp
	rep movsd
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	mov	ecx, DWORD PTR $T5[ebp]
	call	??0Goal_TraverseEdge@@QAE@PAVRaven_Bot@@VPathEdge@@_N@Z ; Goal_TraverseEdge::Goal_TraverseEdge
	mov	DWORD PTR tv142[ebp], eax
	jmp	SHORT $LN11@Activate
$LN10@Activate:
	mov	DWORD PTR tv142[ebp], 0
$LN11@Activate:
	mov	eax, DWORD PTR tv142[ebp]
	mov	DWORD PTR $T6[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	mov	ecx, DWORD PTR $T6[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+20]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 41   :     }
; 42   : 
; 43   :     break;

	jmp	$LN9@Activate
$LN5@Activate:

; 44   : 
; 45   :   case NavGraphEdge::goes_through_door:
; 46   :     {
; 47   : 
; 48   :       //also add a goal that is able to handle opening the door
; 49   :       AddSubgoal(new Goal_NegotiateDoor(m_pOwner, edge, m_Path.empty()));

	push	80					; 00000050H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 1
	cmp	DWORD PTR $T3[ebp], 0
	je	SHORT $LN12@Activate
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 28					; 0000001cH
	call	?empty@?$list@VPathEdge@@V?$allocator@VPathEdge@@@std@@@std@@QBE_NXZ ; std::list<PathEdge,std::allocator<PathEdge> >::empty
	movzx	eax, al
	push	eax
	sub	esp, 40					; 00000028H
	mov	ecx, 10					; 0000000aH
	lea	esi, DWORD PTR _edge$[ebp]
	mov	edi, esp
	rep movsd
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+8]
	push	edx
	mov	ecx, DWORD PTR $T3[ebp]
	call	??0Goal_NegotiateDoor@@QAE@PAVRaven_Bot@@VPathEdge@@_N@Z ; Goal_NegotiateDoor::Goal_NegotiateDoor
	mov	DWORD PTR tv176[ebp], eax
	jmp	SHORT $LN13@Activate
$LN12@Activate:
	mov	DWORD PTR tv176[ebp], 0
$LN13@Activate:
	mov	eax, DWORD PTR tv176[ebp]
	mov	DWORD PTR $T4[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	esi, esp
	mov	ecx, DWORD PTR $T4[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+20]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 50   :     }
; 51   : 
; 52   :     break;

	jmp	SHORT $LN9@Activate
$LN6@Activate:

; 53   : 
; 54   :   case NavGraphEdge::jump:
; 55   :     {
; 56   :       //add subgoal to jump along the edge
; 57   :     }
; 58   : 
; 59   :     break;

	jmp	SHORT $LN9@Activate
$LN7@Activate:

; 60   : 
; 61   :   case NavGraphEdge::grapple:
; 62   :     {
; 63   :       //add subgoal to grapple along the edge
; 64   :     }
; 65   : 
; 66   :     break;

	jmp	SHORT $LN9@Activate
$LN8@Activate:

; 67   : 
; 68   :   default:
; 69   : 
; 70   :     throw std::runtime_error("<Goal_FollowPath::Activate>: Unrecognized edge type");

	push	OFFSET $SG172189
	lea	ecx, DWORD PTR $T2[ebp]
	call	??0runtime_error@std@@QAE@PBD@Z		; std::runtime_error::runtime_error
	push	OFFSET __TI2?AVruntime_error@std@@
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	call	__CxxThrowException@8
$LN9@Activate:

; 71   :   }
; 72   : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN21@Activate
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	add	esp, 104				; 00000068H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN21@Activate:
	DD	1
	DD	$LN20@Activate
$LN20@Activate:
	DD	-60					; ffffffc4H
	DD	40					; 00000028H
	DD	$LN18@Activate
$LN18@Activate:
	DB	101					; 00000065H
	DB	100					; 00000064H
	DB	103					; 00000067H
	DB	101					; 00000065H
	DB	0
	npad	3
$LN17@Activate:
	DD	$LN4@Activate
	DD	$LN6@Activate
	DD	$LN7@Activate
	DD	$LN5@Activate
	DD	$LN8@Activate
$LN16@Activate:
	DB	0
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	1
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	2
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	4
	DB	3
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?Activate@Goal_FollowPath@@UAEXXZ$0:
	push	80					; 00000050H
	mov	eax, DWORD PTR $T5[ebp]
	push	eax
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
	ret	0
__unwindfunclet$?Activate@Goal_FollowPath@@UAEXXZ$1:
	push	80					; 00000050H
	mov	eax, DWORD PTR $T3[ebp]
	push	eax
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$?Activate@Goal_FollowPath@@UAEXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-104]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?Activate@Goal_FollowPath@@UAEXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?Activate@Goal_FollowPath@@UAEXXZ ENDP			; Goal_FollowPath::Activate
; Function compile flags: /Odtp /RTCsu
; File D:\Réseau neuronnes - Projet Raven\Réseau\solution_lab_apprentissage_a_partir_bot\solution_lab_apprentissage_a_partir_bot\Buckland_Chapter7 to 10_Raven_apprentissage\goals\Goal_FollowPath.cpp
;	COMDAT ??0Goal_FollowPath@@QAE@PAVRaven_Bot@@V?$list@VPathEdge@@V?$allocator@VPathEdge@@@std@@@std@@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pBot$ = 8						; size = 4
_path$ = 12						; size = 12
??0Goal_FollowPath@@QAE@PAVRaven_Bot@@V?$list@VPathEdge@@V?$allocator@VPathEdge@@@std@@@std@@@Z PROC ; Goal_FollowPath::Goal_FollowPath, COMDAT
; _this$ = ecx

; 17   : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0Goal_FollowPath@@QAE@PAVRaven_Bot@@V?$list@VPathEdge@@V?$allocator@VPathEdge@@@std@@@std@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 15   :                 std::list<PathEdge> path):Goal_Composite<Raven_Bot>(pBot, goal_follow_path),

	push	4
	mov	eax, DWORD PTR _pBot$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$Goal_Composite@VRaven_Bot@@@@QAE@PAVRaven_Bot@@H@Z ; Goal_Composite<Raven_Bot>::Goal_Composite<Raven_Bot>
	mov	BYTE PTR __$EHRec$[ebp+8], 1

; 17   : {

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7Goal_FollowPath@@6B@

; 16   :                                                   m_Path(path)

	lea	edx, DWORD PTR _path$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 28					; 0000001cH
	call	??0?$list@VPathEdge@@V?$allocator@VPathEdge@@@std@@@std@@QAE@ABV01@@Z ; std::list<PathEdge,std::allocator<PathEdge> >::list<PathEdge,std::allocator<PathEdge> >

; 18   : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _path$[ebp]
	call	??1?$list@VPathEdge@@V?$allocator@VPathEdge@@@std@@@std@@QAE@XZ ; std::list<PathEdge,std::allocator<PathEdge> >::~list<PathEdge,std::allocator<PathEdge> >
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0Goal_FollowPath@@QAE@PAVRaven_Bot@@V?$list@VPathEdge@@V?$allocator@VPathEdge@@@std@@@std@@@Z$0:
	lea	ecx, DWORD PTR _path$[ebp]
	jmp	??1?$list@VPathEdge@@V?$allocator@VPathEdge@@@std@@@std@@QAE@XZ ; std::list<PathEdge,std::allocator<PathEdge> >::~list<PathEdge,std::allocator<PathEdge> >
__unwindfunclet$??0Goal_FollowPath@@QAE@PAVRaven_Bot@@V?$list@VPathEdge@@V?$allocator@VPathEdge@@@std@@@std@@@Z$1:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$Goal_Composite@VRaven_Bot@@@@UAE@XZ ; Goal_Composite<Raven_Bot>::~Goal_Composite<Raven_Bot>
__ehhandler$??0Goal_FollowPath@@QAE@PAVRaven_Bot@@V?$list@VPathEdge@@V?$allocator@VPathEdge@@@std@@@std@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0Goal_FollowPath@@QAE@PAVRaven_Bot@@V?$list@VPathEdge@@V?$allocator@VPathEdge@@@std@@@std@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0Goal_FollowPath@@QAE@PAVRaven_Bot@@V?$list@VPathEdge@@V?$allocator@VPathEdge@@@std@@@std@@@Z ENDP ; Goal_FollowPath::Goal_FollowPath
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@std@@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@2@$00@std@@QBEABV?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Get_first@?$_Compressed_pair@V?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@std@@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@2@$00@std@@QBEABV?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<std::_List_node<PathEdge,void *> >,std::_List_val<std::_List_simple_types<PathEdge> >,1>::_Get_first, COMDAT
; _this$ = ecx

; 1424 :     const _Ty1& _Get_first() const noexcept {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 1425 :         return *this;

	mov	eax, DWORD PTR _this$[ebp]

; 1426 :     }

	mov	esp, ebp
	pop	ebp
	ret	0
?_Get_first@?$_Compressed_pair@V?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@std@@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@2@$00@std@@QBEABV?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<std::_List_node<PathEdge,void *> >,std::_List_val<std::_List_simple_types<PathEdge> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@std@@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@2@$00@std@@QAEAAV?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Get_first@?$_Compressed_pair@V?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@std@@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@2@$00@std@@QAEAAV?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<std::_List_node<PathEdge,void *> >,std::_List_val<std::_List_simple_types<PathEdge> >,1>::_Get_first, COMDAT
; _this$ = ecx

; 1420 :     _Ty1& _Get_first() noexcept {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 1421 :         return *this;

	mov	eax, DWORD PTR _this$[ebp]

; 1422 :     }

	mov	esp, ebp
	pop	ebp
	ret	0
?_Get_first@?$_Compressed_pair@V?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@std@@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@2@$00@std@@QAEAAV?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<std::_List_node<PathEdge,void *> >,std::_List_val<std::_List_simple_types<PathEdge> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\list
;	COMDAT ??0?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@QAE@XZ PROC ; std::_List_val<std::_List_simple_types<PathEdge> >::_List_val<std::_List_simple_types<PathEdge> >, COMDAT
; _this$ = ecx

; 368  :     _List_val() : _Myhead(), _Mysize(0) { // initialize data

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Container_base12@std@@QAE@XZ	; std::_Container_base12::_Container_base12
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], 0

; 369  :     }

	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@QAE@XZ ENDP ; std::_List_val<std::_List_simple_types<PathEdge> >::_List_val<std::_List_simple_types<PathEdge> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\list
;	COMDAT ?_Getal@?$list@VPathEdge@@V?$allocator@VPathEdge@@@std@@@std@@ABEABV?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Getal@?$list@VPathEdge@@V?$allocator@VPathEdge@@@std@@@std@@ABEABV?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@2@XZ PROC ; std::list<PathEdge,std::allocator<PathEdge> >::_Getal, COMDAT
; _this$ = ecx

; 1714 :     const _Alnode& _Getal() const noexcept { // return const reference to allocator

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 1715 :         return _Mypair._Get_first();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_first@?$_Compressed_pair@V?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@std@@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@2@$00@std@@QBEABV?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@2@XZ ; std::_Compressed_pair<std::allocator<std::_List_node<PathEdge,void *> >,std::_List_val<std::_List_simple_types<PathEdge> >,1>::_Get_first

; 1716 :     }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Getal@?$list@VPathEdge@@V?$allocator@VPathEdge@@@std@@@std@@ABEABV?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@2@XZ ENDP ; std::list<PathEdge,std::allocator<PathEdge> >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\list
;	COMDAT ?_Getal@?$list@VPathEdge@@V?$allocator@VPathEdge@@@std@@@std@@AAEAAV?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Getal@?$list@VPathEdge@@V?$allocator@VPathEdge@@@std@@@std@@AAEAAV?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@2@XZ PROC ; std::list<PathEdge,std::allocator<PathEdge> >::_Getal, COMDAT
; _this$ = ecx

; 1710 :     _Alnode& _Getal() noexcept { // return reference to allocator

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 1711 :         return _Mypair._Get_first();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_first@?$_Compressed_pair@V?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@std@@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@2@$00@std@@QAEAAV?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@2@XZ ; std::_Compressed_pair<std::allocator<std::_List_node<PathEdge,void *> >,std::_List_val<std::_List_simple_types<PathEdge> >,1>::_Get_first

; 1712 :     }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Getal@?$list@VPathEdge@@V?$allocator@VPathEdge@@@std@@@std@@AAEAAV?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@2@XZ ENDP ; std::list<PathEdge,std::allocator<PathEdge> >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\list
;	COMDAT ?_Tidy@?$list@VPathEdge@@V?$allocator@VPathEdge@@@std@@@std@@AAEXXZ
_TEXT	SEGMENT
__My_data$ = -12					; size = 4
__Al$ = -8						; size = 4
_this$ = -4						; size = 4
?_Tidy@?$list@VPathEdge@@V?$allocator@VPathEdge@@@std@@@std@@AAEXXZ PROC ; std::list<PathEdge,std::allocator<PathEdge> >::_Tidy, COMDAT
; _this$ = ecx

; 1309 :     void _Tidy() noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 1310 :         auto& _Al      = _Getal();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$list@VPathEdge@@V?$allocator@VPathEdge@@@std@@@std@@AAEAAV?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@2@XZ ; std::list<PathEdge,std::allocator<PathEdge> >::_Getal
	mov	DWORD PTR __Al$[ebp], eax

; 1311 :         auto& _My_data = _Mypair._Myval2;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR __My_data$[ebp], eax

; 1312 :         _My_data._Orphan_all();

	mov	ecx, DWORD PTR __My_data$[ebp]
	call	?_Orphan_all@_Container_base12@std@@QAEXXZ ; std::_Container_base12::_Orphan_all

; 1313 :         _Node::_Free_non_head(_Al, _My_data._Myhead);

	mov	ecx, DWORD PTR __My_data$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	eax, DWORD PTR __Al$[ebp]
	push	eax
	call	??$_Free_non_head@V?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@std@@@?$_List_node@VPathEdge@@PAX@std@@SAXAAV?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@1@PAU01@@Z ; std::_List_node<PathEdge,void *>::_Free_non_head<std::allocator<std::_List_node<PathEdge,void *> > >
	add	esp, 8

; 1314 :         _Node::_Freenode0(_Al, _My_data._Myhead);

	mov	ecx, DWORD PTR __My_data$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	eax, DWORD PTR __Al$[ebp]
	push	eax
	call	??$_Freenode0@V?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@std@@@?$_List_node@VPathEdge@@PAX@std@@SAXAAV?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@1@PAU01@@Z ; std::_List_node<PathEdge,void *>::_Freenode0<std::allocator<std::_List_node<PathEdge,void *> > >
	add	esp, 8

; 1315 :     }

	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Tidy@?$list@VPathEdge@@V?$allocator@VPathEdge@@@std@@@std@@AAEXXZ ENDP ; std::list<PathEdge,std::allocator<PathEdge> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\list
;	COMDAT ?_Unchecked_erase@?$list@VPathEdge@@V?$allocator@VPathEdge@@@std@@@std@@AAEPAU?$_List_node@VPathEdge@@PAX@2@QAU32@@Z
_TEXT	SEGMENT
__Result$ = -8						; size = 4
_this$ = -4						; size = 4
__Pnode$ = 8						; size = 4
?_Unchecked_erase@?$list@VPathEdge@@V?$allocator@VPathEdge@@@std@@@std@@AAEPAU?$_List_node@VPathEdge@@PAX@2@QAU32@@Z PROC ; std::list<PathEdge,std::allocator<PathEdge> >::_Unchecked_erase, COMDAT
; _this$ = ecx

; 1268 :     _Nodeptr _Unchecked_erase(const _Nodeptr _Pnode) { // erase element at _Pnode

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 1269 :         const auto _Result   = _Pnode->_Next;

	mov	eax, DWORD PTR __Pnode$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Result$[ebp], ecx

; 1270 :         _Pnode->_Prev->_Next = _Result;

	mov	edx, DWORD PTR __Pnode$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR __Result$[ebp]
	mov	DWORD PTR [eax], ecx

; 1271 :         _Result->_Prev       = _Pnode->_Prev;

	mov	edx, DWORD PTR __Result$[ebp]
	mov	eax, DWORD PTR __Pnode$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR [edx+4], ecx

; 1272 :         _Node::_Freenode(_Getal(), _Pnode);

	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$list@VPathEdge@@V?$allocator@VPathEdge@@@std@@@std@@AAEAAV?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@2@XZ ; std::list<PathEdge,std::allocator<PathEdge> >::_Getal
	push	eax
	call	??$_Freenode@V?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@std@@@?$_List_node@VPathEdge@@PAX@std@@SAXAAV?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@1@PAU01@@Z ; std::_List_node<PathEdge,void *>::_Freenode<std::allocator<std::_List_node<PathEdge,void *> > >
	add	esp, 8

; 1273 :         --_Mypair._Myval2._Mysize;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	sub	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], ecx

; 1274 :         return _Result;

	mov	eax, DWORD PTR __Result$[ebp]

; 1275 :     }

	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Unchecked_erase@?$list@VPathEdge@@V?$allocator@VPathEdge@@@std@@@std@@AAEPAU?$_List_node@VPathEdge@@PAX@2@QAU32@@Z ENDP ; std::list<PathEdge,std::allocator<PathEdge> >::_Unchecked_erase
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\list
;	COMDAT ?pop_front@?$list@VPathEdge@@V?$allocator@VPathEdge@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?pop_front@?$list@VPathEdge@@V?$allocator@VPathEdge@@@std@@@std@@QAEXXZ PROC ; std::list<PathEdge,std::allocator<PathEdge> >::pop_front, COMDAT
; _this$ = ecx

; 1169 :     void pop_front() { // erase element at beginning

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
$LN4@pop_front:

; 1170 : #if _CONTAINER_DEBUG_LEVEL > 0
; 1171 :         _STL_VERIFY(_Mypair._Myval2._Mysize != 0, "pop_front called on empty list<T>");

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	je	SHORT $LN7@pop_front
	jmp	SHORT $LN2@pop_front
$LN7@pop_front:
	push	OFFSET ??_C@_0CC@BNIKFPII@pop_front?5called?5on?5empty?5list?$DM@
	push	OFFSET ??_C@_02DKCKIIND@?$CFs@
	push	0
	push	1171					; 00000493H
	push	OFFSET ??_C@_0GF@GNCHBLDJ@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
	push	2
	call	__CrtDbgReport
	add	esp, 24					; 00000018H
	cmp	eax, 1
	jne	SHORT $LN11@pop_front
	int	3
$LN11@pop_front:
	push	0
	push	1171					; 00000493H
	push	OFFSET ??_C@_1MK@DPPFMAIA@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
	push	OFFSET ??_C@_1JG@GEBLOLD@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAl?$AAi?$AAs?$AAt?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs@
	push	OFFSET ??_C@_1EI@LCNEIDGO@?$AA?$CC?$AAp?$AAo?$AAp?$AA_?$AAf?$AAr?$AAo?$AAn?$AAt?$AA?5?$AAc?$AAa?$AAl?$AAl@
	call	__invalid_parameter
	add	esp, 20					; 00000014H
	xor	edx, edx
	jne	SHORT $LN7@pop_front
$LN2@pop_front:
	xor	eax, eax
	jne	SHORT $LN4@pop_front

; 1172 : #endif // _CONTAINER_DEBUG_LEVEL > 0
; 1173 : 
; 1174 :         _Unchecked_erase(_Mypair._Myval2._Myhead->_Next);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Unchecked_erase@?$list@VPathEdge@@V?$allocator@VPathEdge@@@std@@@std@@AAEPAU?$_List_node@VPathEdge@@PAX@2@QAU32@@Z ; std::list<PathEdge,std::allocator<PathEdge> >::_Unchecked_erase

; 1175 :     }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?pop_front@?$list@VPathEdge@@V?$allocator@VPathEdge@@@std@@@std@@QAEXXZ ENDP ; std::list<PathEdge,std::allocator<PathEdge> >::pop_front
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\list
;	COMDAT ?front@?$list@VPathEdge@@V?$allocator@VPathEdge@@@std@@@std@@QAEAAVPathEdge@@XZ
_TEXT	SEGMENT
tv72 = -40						; size = 4
tv73 = -36						; size = 4
$T2 = -32						; size = 12
$T3 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
?front@?$list@VPathEdge@@V?$allocator@VPathEdge@@@std@@@std@@QAEAAVPathEdge@@XZ PROC ; std::list<PathEdge,std::allocator<PathEdge> >::front, COMDAT
; _this$ = ecx

; 1149 :     _NODISCARD reference front() {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?front@?$list@VPathEdge@@V?$allocator@VPathEdge@@@std@@@std@@QAEAAVPathEdge@@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 28					; 0000001cH
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-40], eax
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 1150 :         return *begin();

	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?begin@?$list@VPathEdge@@V?$allocator@VPathEdge@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@@2@XZ ; std::list<PathEdge,std::allocator<PathEdge> >::begin
	mov	DWORD PTR tv73[ebp], eax
	mov	ecx, DWORD PTR tv73[ebp]
	mov	DWORD PTR tv72[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR tv72[ebp]
	call	??D?$_List_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@@std@@QBEAAVPathEdge@@XZ ; std::_List_iterator<std::_List_val<std::_List_simple_types<PathEdge> > >::operator*
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T2[ebp]
	call	??1?$_List_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR $T3[ebp]

; 1151 :     }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 40					; 00000028H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?front@?$list@VPathEdge@@V?$allocator@VPathEdge@@@std@@@std@@QAEAAVPathEdge@@XZ$0:
	lea	ecx, DWORD PTR $T2[ebp]
	jmp	??1?$_List_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@@std@@QAE@XZ
__ehhandler$?front@?$list@VPathEdge@@V?$allocator@VPathEdge@@@std@@@std@@QAEAAVPathEdge@@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-32]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?front@?$list@VPathEdge@@V?$allocator@VPathEdge@@@std@@@std@@QAEAAVPathEdge@@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?front@?$list@VPathEdge@@V?$allocator@VPathEdge@@@std@@@std@@QAEAAVPathEdge@@XZ ENDP ; std::list<PathEdge,std::allocator<PathEdge> >::front
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\list
;	COMDAT ?empty@?$list@VPathEdge@@V?$allocator@VPathEdge@@@std@@@std@@QBE_NXZ
_TEXT	SEGMENT
tv68 = -8						; size = 4
_this$ = -4						; size = 4
?empty@?$list@VPathEdge@@V?$allocator@VPathEdge@@@std@@@std@@QBE_NXZ PROC ; std::list<PathEdge,std::allocator<PathEdge> >::empty, COMDAT
; _this$ = ecx

; 1141 :     _NODISCARD bool empty() const noexcept { // test if sequence is empty

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 1142 :         return _Mypair._Myval2._Mysize == 0;

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	jne	SHORT $LN3@empty
	mov	DWORD PTR tv68[ebp], 1
	jmp	SHORT $LN4@empty
$LN3@empty:
	mov	DWORD PTR tv68[ebp], 0
$LN4@empty:
	mov	al, BYTE PTR tv68[ebp]

; 1143 :     }

	mov	esp, ebp
	pop	ebp
	ret	0
?empty@?$list@VPathEdge@@V?$allocator@VPathEdge@@@std@@@std@@QBE_NXZ ENDP ; std::list<PathEdge,std::allocator<PathEdge> >::empty
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\list
;	COMDAT ?_Unchecked_end@?$list@VPathEdge@@V?$allocator@VPathEdge@@@std@@@std@@QBE?AV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@U_Iterator_base0@2@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?_Unchecked_end@?$list@VPathEdge@@V?$allocator@VPathEdge@@@std@@@std@@QBE?AV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@U_Iterator_base0@2@@2@XZ PROC ; std::list<PathEdge,std::allocator<PathEdge> >::_Unchecked_end, COMDAT
; _this$ = ecx

; 1058 :     _Unchecked_const_iterator _Unchecked_end() const { // return unchecked iterator for end of nonmutable sequence

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 1059 :         return _Unchecked_const_iterator(_Mypair._Myval2._Myhead, nullptr);

	push	0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU?$_List_node@VPathEdge@@PAX@1@PBV?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@1@@Z ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<PathEdge> >,std::_Iterator_base0>::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<PathEdge> >,std::_Iterator_base0>
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1060 :     }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Unchecked_end@?$list@VPathEdge@@V?$allocator@VPathEdge@@@std@@@std@@QBE?AV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@U_Iterator_base0@2@@2@XZ ENDP ; std::list<PathEdge,std::allocator<PathEdge> >::_Unchecked_end
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\list
;	COMDAT ?_Unchecked_begin@?$list@VPathEdge@@V?$allocator@VPathEdge@@@std@@@std@@QBE?AV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@U_Iterator_base0@2@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?_Unchecked_begin@?$list@VPathEdge@@V?$allocator@VPathEdge@@@std@@@std@@QBE?AV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@U_Iterator_base0@2@@2@XZ PROC ; std::list<PathEdge,std::allocator<PathEdge> >::_Unchecked_begin, COMDAT
; _this$ = ecx

; 1050 :     _Unchecked_const_iterator _Unchecked_begin() const { // return iterator for beginning of nonmutable sequence

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 1051 :         return _Unchecked_const_iterator(_Mypair._Myval2._Myhead->_Next, nullptr);

	push	0
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@U_Iterator_base0@2@@std@@QAE@PAU?$_List_node@VPathEdge@@PAX@1@PBV?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@1@@Z ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<PathEdge> >,std::_Iterator_base0>::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<PathEdge> >,std::_Iterator_base0>
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1052 :     }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Unchecked_begin@?$list@VPathEdge@@V?$allocator@VPathEdge@@@std@@@std@@QBE?AV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@U_Iterator_base0@2@@2@XZ ENDP ; std::list<PathEdge,std::allocator<PathEdge> >::_Unchecked_begin
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\list
;	COMDAT ?end@?$list@VPathEdge@@V?$allocator@VPathEdge@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
?end@?$list@VPathEdge@@V?$allocator@VPathEdge@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@@2@XZ PROC ; std::list<PathEdge,std::allocator<PathEdge> >::end, COMDAT
; _this$ = ecx

; 1038 :     _NODISCARD iterator end() noexcept { // return iterator for end of mutable sequence

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?end@?$list@VPathEdge@@V?$allocator@VPathEdge@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@@2@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 1039 :         return iterator(_Mypair._Myval2._Myhead, _STD addressof(_Mypair._Myval2));

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??$addressof@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@@std@@YAPAV?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@0@AAV10@@Z ; std::addressof<std::_List_val<std::_List_simple_types<PathEdge> > >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@@std@@QAE@PAU?$_List_node@VPathEdge@@PAX@1@PBV?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@1@@Z ; std::_List_iterator<std::_List_val<std::_List_simple_types<PathEdge> > >::_List_iterator<std::_List_val<std::_List_simple_types<PathEdge> > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1040 :     }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?end@?$list@VPathEdge@@V?$allocator@VPathEdge@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@@2@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?end@?$list@VPathEdge@@V?$allocator@VPathEdge@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@@2@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?end@?$list@VPathEdge@@V?$allocator@VPathEdge@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@@2@XZ ENDP ; std::list<PathEdge,std::allocator<PathEdge> >::end
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\list
;	COMDAT ?begin@?$list@VPathEdge@@V?$allocator@VPathEdge@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
?begin@?$list@VPathEdge@@V?$allocator@VPathEdge@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@@2@XZ PROC ; std::list<PathEdge,std::allocator<PathEdge> >::begin, COMDAT
; _this$ = ecx

; 1030 :     _NODISCARD iterator begin() noexcept { // return iterator for beginning of mutable sequence

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?begin@?$list@VPathEdge@@V?$allocator@VPathEdge@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@@2@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 1031 :         return iterator(_Mypair._Myval2._Myhead->_Next, _STD addressof(_Mypair._Myval2));

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??$addressof@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@@std@@YAPAV?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@0@AAV10@@Z ; std::addressof<std::_List_val<std::_List_simple_types<PathEdge> > >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@@std@@QAE@PAU?$_List_node@VPathEdge@@PAX@1@PBV?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@1@@Z ; std::_List_iterator<std::_List_val<std::_List_simple_types<PathEdge> > >::_List_iterator<std::_List_val<std::_List_simple_types<PathEdge> > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1032 :     }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?begin@?$list@VPathEdge@@V?$allocator@VPathEdge@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@@2@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?begin@?$list@VPathEdge@@V?$allocator@VPathEdge@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@@2@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?begin@?$list@VPathEdge@@V?$allocator@VPathEdge@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@@2@XZ ENDP ; std::list<PathEdge,std::allocator<PathEdge> >::begin
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\list
;	COMDAT ??1?$list@VPathEdge@@V?$allocator@VPathEdge@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_$S3$ = -13						; size = 1
__Alproxy$ = -8						; size = 4
_this$ = -4						; size = 4
??1?$list@VPathEdge@@V?$allocator@VPathEdge@@@std@@@std@@QAE@XZ PROC ; std::list<PathEdge,std::allocator<PathEdge> >::~list<PathEdge,std::allocator<PathEdge> >, COMDAT
; _this$ = ecx

; 984  :     ~list() noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx

; 985  :         _Tidy();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$list@VPathEdge@@V?$allocator@VPathEdge@@@std@@@std@@AAEXXZ ; std::list<PathEdge,std::allocator<PathEdge> >::_Tidy

; 986  : #if _ITERATOR_DEBUG_LEVEL != 0 // TRANSITION, ABI
; 987  :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alnode, _Getal());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$list@VPathEdge@@V?$allocator@VPathEdge@@@std@@@std@@AAEAAV?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@2@XZ ; std::list<PathEdge,std::allocator<PathEdge> >::_Getal
	push	eax
	lea	ecx, DWORD PTR _$S3$[ebp]
	call	??$?0U?$_List_node@VPathEdge@@PAX@std@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::_List_node<PathEdge,void *> >
	lea	eax, DWORD PTR _$S3$[ebp]
	mov	DWORD PTR __Alproxy$[ebp], eax

; 988  :         _Delete_plain_internal(_Alproxy, _Mypair._Myval2._Myproxy);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	eax, DWORD PTR __Alproxy$[ebp]
	push	eax
	call	??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@QAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
	add	esp, 8

; 989  : #endif /* _ITERATOR_DEBUG_LEVEL != 0 */
; 990  :     }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@list
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN5@list:
	DD	1
	DD	$LN4@list
$LN4@list:
	DD	-13					; fffffff3H
	DD	1
	DD	$LN3@list
$LN3@list:
	DB	36					; 00000024H
	DB	83					; 00000053H
	DB	51					; 00000033H
	DB	0
??1?$list@VPathEdge@@V?$allocator@VPathEdge@@@std@@@std@@QAE@XZ ENDP ; std::list<PathEdge,std::allocator<PathEdge> >::~list<PathEdge,std::allocator<PathEdge> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\list
;	COMDAT ??0?$list@VPathEdge@@V?$allocator@VPathEdge@@@std@@@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
$T1 = -16						; size = 4
$T2 = -12						; size = 4
$T3 = -6						; size = 1
$T4 = -5						; size = 1
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??0?$list@VPathEdge@@V?$allocator@VPathEdge@@@std@@@std@@QAE@ABV01@@Z PROC ; std::list<PathEdge,std::allocator<PathEdge> >::list<PathEdge,std::allocator<PathEdge> >, COMDAT
; _this$ = ecx

; 805  :                                                    _Right._Getal())) { // construct list by copying _Right

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx

; 804  :         : _Mypair(_One_then_variadic_args_t(), _Alnode_traits::select_on_container_copy_construction(

	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Getal@?$list@VPathEdge@@V?$allocator@VPathEdge@@@std@@@std@@ABEABV?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@2@XZ ; std::list<PathEdge,std::allocator<PathEdge> >::_Getal
	push	eax
	lea	eax, DWORD PTR $T4[ebp]
	push	eax
	call	?select_on_container_copy_construction@?$_Default_allocator_traits@V?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@std@@@std@@SA?AV?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@2@ABV32@@Z ; std::_Default_allocator_traits<std::allocator<std::_List_node<PathEdge,void *> > >::select_on_container_copy_construction
	add	esp, 8
	push	eax
	movzx	ecx, BYTE PTR $T3[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$?0V?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@std@@$$V@?$_Compressed_pair@V?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@std@@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@2@$00@std@@QAE@U_One_then_variadic_args_t@1@$$QAV?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@1@@Z ; std::_Compressed_pair<std::allocator<std::_List_node<PathEdge,void *> >,std::_List_val<std::_List_simple_types<PathEdge> >,1>::_Compressed_pair<std::allocator<std::_List_node<PathEdge,void *> >,std::_List_val<std::_List_simple_types<PathEdge> >,1><std::allocator<std::_List_node<PathEdge,void *> > >

; 806  :         _Construct_range_unchecked(_Right._Unchecked_begin(), _Right._Unchecked_end());

	lea	edx, DWORD PTR $T2[ebp]
	push	edx
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Unchecked_end@?$list@VPathEdge@@V?$allocator@VPathEdge@@@std@@@std@@QBE?AV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@U_Iterator_base0@2@@2@XZ ; std::list<PathEdge,std::allocator<PathEdge> >::_Unchecked_end
	mov	eax, DWORD PTR [eax]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	mov	ecx, DWORD PTR __Right$[ebp]
	call	?_Unchecked_begin@?$list@VPathEdge@@V?$allocator@VPathEdge@@@std@@@std@@QBE?AV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@U_Iterator_base0@2@@2@XZ ; std::list<PathEdge,std::allocator<PathEdge> >::_Unchecked_begin
	mov	edx, DWORD PTR [eax]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Construct_range_unchecked@V?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@U_Iterator_base0@2@@std@@@?$list@VPathEdge@@V?$allocator@VPathEdge@@@std@@@std@@AAEXV?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@VPathEdge@@@std@@@std@@U_Iterator_base0@2@@1@0@Z ; std::list<PathEdge,std::allocator<PathEdge> >::_Construct_range_unchecked<std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<PathEdge> >,std::_Iterator_base0> >

; 807  :     }

	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0?$list@VPathEdge@@V?$allocator@VPathEdge@@@std@@@std@@QAE@ABV01@@Z ENDP ; std::list<PathEdge,std::allocator<PathEdge> >::list<PathEdge,std::allocator<PathEdge> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?select_on_container_copy_construction@?$_Default_allocator_traits@V?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@std@@@std@@SA?AV?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@2@ABV32@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
__Al$ = 12						; size = 4
?select_on_container_copy_construction@?$_Default_allocator_traits@V?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@std@@@std@@SA?AV?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@2@ABV32@@Z PROC ; std::_Default_allocator_traits<std::allocator<std::_List_node<PathEdge,void *> > >::select_on_container_copy_construction, COMDAT

; 770  :     _NODISCARD static _Alloc select_on_container_copy_construction(const _Alloc& _Al) {

	push	ebp
	mov	ebp, esp

; 771  :         return _Al;

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 772  :     }

	pop	ebp
	ret	0
?select_on_container_copy_construction@?$_Default_allocator_traits@V?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@std@@@std@@SA?AV?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@2@ABV32@@Z ENDP ; std::_Default_allocator_traits<std::allocator<std::_List_node<PathEdge,void *> > >::select_on_container_copy_construction
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?deallocate@?$_Default_allocator_traits@V?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@2@QAU?$_List_node@VPathEdge@@PAX@2@I@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
__Ptr$ = 12						; size = 4
__Count$ = 16						; size = 4
?deallocate@?$_Default_allocator_traits@V?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@2@QAU?$_List_node@VPathEdge@@PAX@2@I@Z PROC ; std::_Default_allocator_traits<std::allocator<std::_List_node<PathEdge,void *> > >::deallocate, COMDAT

; 751  :     static void deallocate(_Alloc&, const pointer _Ptr, const size_type _Count) {

	push	ebp
	mov	ebp, esp

; 752  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 753  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

	imul	eax, DWORD PTR __Count$[ebp], 48
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	call	??$_Deallocate@$07$0A@@std@@YAXPAXI@Z	; std::_Deallocate<8,0>
	add	esp, 8

; 754  :     }

	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
?deallocate@?$_Default_allocator_traits@V?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@2@QAU?$_List_node@VPathEdge@@PAX@2@I@Z ENDP ; std::_Default_allocator_traits<std::allocator<std::_List_node<PathEdge,void *> > >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?allocate@?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@std@@QAEPAU?$_List_node@VPathEdge@@PAX@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@std@@QAEPAU?$_List_node@VPathEdge@@PAX@2@I@Z PROC ; std::allocator<std::_List_node<PathEdge,void *> >::allocate, COMDAT
; _this$ = ecx

; 870  :     _NODISCARD _DECLSPEC_ALLOCATOR _Ty* allocate(_CRT_GUARDOVERFLOW const size_t _Count) {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 871  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??$_Get_size_of_n@$0DA@@std@@YAII@Z	; std::_Get_size_of_n<48>
	add	esp, 4
	push	eax
	call	??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
	add	esp, 4

; 872  :     }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@std@@QAEPAU?$_List_node@VPathEdge@@PAX@2@I@Z ENDP ; std::allocator<std::_List_node<PathEdge,void *> >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?deallocate@?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@std@@QAEXQAU?$_List_node@VPathEdge@@PAX@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@std@@QAEXQAU?$_List_node@VPathEdge@@PAX@2@I@Z PROC ; std::allocator<std::_List_node<PathEdge,void *> >::deallocate, COMDAT
; _this$ = ecx

; 865  :     void deallocate(_Ty* const _Ptr, const size_t _Count) {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 866  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 867  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	imul	eax, DWORD PTR __Count$[ebp], 48
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	call	??$_Deallocate@$07$0A@@std@@YAXPAXI@Z	; std::_Deallocate<8,0>
	add	esp, 8

; 868  :     }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@U?$_List_node@VPathEdge@@PAX@std@@@std@@QAEXQAU?$_List_node@VPathEdge@@PAX@2@I@Z ENDP ; std::allocator<std::_List_node<PathEdge,void *> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_G?$Goal_Composite@VRaven_Bot@@@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$Goal_Composite@VRaven_Bot@@@@UAEPAXI@Z PROC	; Goal_Composite<Raven_Bot>::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$Goal_Composite@VRaven_Bot@@@@UAE@XZ ; Goal_Composite<Raven_Bot>::~Goal_Composite<Raven_Bot>
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@scalar
	push	28					; 0000001cH
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
$LN2@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$Goal_Composite@VRaven_Bot@@@@UAEPAXI@Z ENDP	; Goal_Composite<Raven_Bot>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\Réseau neuronnes - Projet Raven\Réseau\solution_lab_apprentissage_a_partir_bot\solution_lab_apprentissage_a_partir_bot\Common\Goals\Goal_Composite.h
;	COMDAT ?Render@?$Goal_Composite@VRaven_Bot@@@@UAEXXZ
_TEXT	SEGMENT
tv74 = -8						; size = 4
_this$ = -4						; size = 4
?Render@?$Goal_Composite@VRaven_Bot@@@@UAEXXZ PROC	; Goal_Composite<Raven_Bot>::Render, COMDAT
; _this$ = ecx

; 182  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 183  :   if (!m_SubGoals.empty())

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?empty@?$list@PAV?$Goal@VRaven_Bot@@@@V?$allocator@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@QBE_NXZ ; std::list<Goal<Raven_Bot> *,std::allocator<Goal<Raven_Bot> *> >::empty
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN1@Render

; 184  :   {
; 185  :     m_SubGoals.front()->Render();

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?front@?$list@PAV?$Goal@VRaven_Bot@@@@V?$allocator@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@QAEAAPAV?$Goal@VRaven_Bot@@@@XZ ; std::list<Goal<Raven_Bot> *,std::allocator<Goal<Raven_Bot> *> >::front
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR tv74[ebp], ecx
	mov	edx, DWORD PTR tv74[ebp]
	mov	eax, DWORD PTR [edx]
	mov	esi, esp
	mov	ecx, DWORD PTR tv74[ebp]
	mov	edx, DWORD PTR [eax+28]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@Render:

; 186  :   }
; 187  : }

	pop	esi
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Render@?$Goal_Composite@VRaven_Bot@@@@UAEXXZ ENDP	; Goal_Composite<Raven_Bot>::Render
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\Réseau neuronnes - Projet Raven\Réseau\solution_lab_apprentissage_a_partir_bot\solution_lab_apprentissage_a_partir_bot\Common\Goals\Goal_Composite.h
;	COMDAT ?RenderAtPos@?$Goal_Composite@VRaven_Bot@@@@UBEXAAUVector2D@@PAVTypeToString@@@Z
_TEXT	SEGMENT
tv135 = -80						; size = 4
tv147 = -76						; size = 4
tv77 = -72						; size = 4
tv145 = -68						; size = 4
$T2 = -64						; size = 12
$T3 = -49						; size = 1
$T4 = -48						; size = 12
_it$ = -32						; size = 12
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pos$ = 8						; size = 4
_tts$ = 12						; size = 4
?RenderAtPos@?$Goal_Composite@VRaven_Bot@@@@UBEXAAUVector2D@@PAVTypeToString@@@Z PROC ; Goal_Composite<Raven_Bot>::RenderAtPos, COMDAT
; _this$ = ecx

; 165  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?RenderAtPos@?$Goal_Composite@VRaven_Bot@@@@UBEXAAUVector2D@@PAVTypeToString@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 68					; 00000044H
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-80]
	mov	ecx, 17					; 00000011H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 166  :   Goal<entity_type>::RenderAtPos(pos, tts);

	mov	eax, DWORD PTR _tts$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pos$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?RenderAtPos@?$Goal@VRaven_Bot@@@@UBEXAAUVector2D@@PAVTypeToString@@@Z ; Goal<Raven_Bot>::RenderAtPos

; 167  : 
; 168  :   pos.x += 10;

	mov	edx, DWORD PTR _pos$[ebp]
	movsd	xmm0, QWORD PTR [edx]
	addsd	xmm0, QWORD PTR __real@4024000000000000
	mov	eax, DWORD PTR _pos$[ebp]
	movsd	QWORD PTR [eax], xmm0

; 169  : 
; 170  :   gdi->TransparentText();

	call	?Instance@Cgdi@@SAPAV1@XZ		; Cgdi::Instance
	mov	ecx, eax
	call	?TransparentText@Cgdi@@QAEXXZ		; Cgdi::TransparentText

; 171  :   SubgoalList::const_reverse_iterator it;

	lea	ecx, DWORD PTR _it$[ebp]
	call	??0?$reverse_iterator@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@@std@@QAE@XZ ; std::reverse_iterator<std::_List_const_iterator<std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> > > >::reverse_iterator<std::_List_const_iterator<std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> > > >
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 172  :   for (it=m_SubGoals.rbegin(); it != m_SubGoals.rend(); ++it)

	lea	ecx, DWORD PTR $T4[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?rbegin@?$list@PAV?$Goal@VRaven_Bot@@@@V?$allocator@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@QBE?AV?$reverse_iterator@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@@2@XZ ; std::list<Goal<Raven_Bot> *,std::allocator<Goal<Raven_Bot> *> >::rbegin
	mov	DWORD PTR tv145[ebp], eax
	mov	edx, DWORD PTR tv145[ebp]
	push	edx
	lea	ecx, DWORD PTR _it$[ebp]
	call	??4?$reverse_iterator@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@@std@@QAEAAV01@$$QAV01@@Z
	lea	ecx, DWORD PTR $T4[ebp]
	call	??1?$reverse_iterator@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@@std@@QAE@XZ
	jmp	SHORT $LN4@RenderAtPo
$LN2@RenderAtPo:
	lea	ecx, DWORD PTR _it$[ebp]
	call	??E?$reverse_iterator@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@@std@@QAEAAV01@XZ ; std::reverse_iterator<std::_List_const_iterator<std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> > > >::operator++
$LN4@RenderAtPo:
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?rend@?$list@PAV?$Goal@VRaven_Bot@@@@V?$allocator@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@QBE?AV?$reverse_iterator@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@@2@XZ ; std::list<Goal<Raven_Bot> *,std::allocator<Goal<Raven_Bot> *> >::rend
	mov	DWORD PTR tv77[ebp], eax
	mov	ecx, DWORD PTR tv77[ebp]
	mov	DWORD PTR tv147[ebp], ecx
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	edx, DWORD PTR tv147[ebp]
	push	edx
	lea	eax, DWORD PTR _it$[ebp]
	push	eax
	call	??$?9V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@V01@@std@@YA_NABV?$reverse_iterator@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@@0@0@Z ; std::operator!=<std::_List_const_iterator<std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> > >,std::_List_const_iterator<std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> > > >
	add	esp, 8
	mov	BYTE PTR $T3[ebp], al
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR $T2[ebp]
	call	??1?$reverse_iterator@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@@std@@QAE@XZ
	movzx	ecx, BYTE PTR $T3[ebp]
	test	ecx, ecx
	je	SHORT $LN3@RenderAtPo

; 173  :   {
; 174  :     (*it)->RenderAtPos(pos, tts);

	lea	ecx, DWORD PTR _it$[ebp]
	call	??D?$reverse_iterator@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@@std@@QBEABQAV?$Goal@VRaven_Bot@@@@XZ ; std::reverse_iterator<std::_List_const_iterator<std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> > > >::operator*
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR tv135[ebp], edx
	mov	esi, esp
	mov	eax, DWORD PTR _tts$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pos$[ebp]
	push	ecx
	mov	edx, DWORD PTR tv135[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR tv135[ebp]
	mov	edx, DWORD PTR [eax+24]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp

; 175  :   }

	jmp	SHORT $LN2@RenderAtPo
$LN3@RenderAtPo:

; 176  : 
; 177  :   pos.x -= 10;

	mov	eax, DWORD PTR _pos$[ebp]
	movsd	xmm0, QWORD PTR [eax]
	subsd	xmm0, QWORD PTR __real@4024000000000000
	mov	ecx, DWORD PTR _pos$[ebp]
	movsd	QWORD PTR [ecx], xmm0

; 178  : }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _it$[ebp]
	call	??1?$reverse_iterator@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@@std@@QAE@XZ
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN12@RenderAtPo
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	add	esp, 80					; 00000050H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	1
$LN12@RenderAtPo:
	DD	1
	DD	$LN11@RenderAtPo
$LN11@RenderAtPo:
	DD	-32					; ffffffe0H
	DD	12					; 0000000cH
	DD	$LN9@RenderAtPo
$LN9@RenderAtPo:
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?RenderAtPos@?$Goal_Composite@VRaven_Bot@@@@UBEXAAUVector2D@@PAVTypeToString@@@Z$0:
	lea	ecx, DWORD PTR _it$[ebp]
	jmp	??1?$reverse_iterator@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?RenderAtPos@?$Goal_Composite@VRaven_Bot@@@@UBEXAAUVector2D@@PAVTypeToString@@@Z$2:
	lea	ecx, DWORD PTR $T2[ebp]
	jmp	??1?$reverse_iterator@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@@std@@QAE@XZ
__ehhandler$?RenderAtPos@?$Goal_Composite@VRaven_Bot@@@@UBEXAAUVector2D@@PAVTypeToString@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-80]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?RenderAtPos@?$Goal_Composite@VRaven_Bot@@@@UBEXAAUVector2D@@PAVTypeToString@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?RenderAtPos@?$Goal_Composite@VRaven_Bot@@@@UBEXAAUVector2D@@PAVTypeToString@@@Z ENDP ; Goal_Composite<Raven_Bot>::RenderAtPos
; Function compile flags: /Odtp /RTCsu
; File D:\Réseau neuronnes - Projet Raven\Réseau\solution_lab_apprentissage_a_partir_bot\solution_lab_apprentissage_a_partir_bot\Common\Goals\Goal_Composite.h
;	COMDAT ?RemoveAllSubgoals@?$Goal_Composite@VRaven_Bot@@@@QAEXXZ
_TEXT	SEGMENT
tv136 = -72						; size = 4
tv93 = -68						; size = 4
tv141 = -64						; size = 4
tv66 = -60						; size = 4
$T2 = -56						; size = 4
$T3 = -52						; size = 12
$T4 = -37						; size = 1
_it$5 = -32						; size = 12
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
?RemoveAllSubgoals@?$Goal_Composite@VRaven_Bot@@@@QAEXXZ PROC ; Goal_Composite<Raven_Bot>::RemoveAllSubgoals, COMDAT
; _this$ = ecx

; 79   : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?RemoveAllSubgoals@?$Goal_Composite@VRaven_Bot@@@@QAEXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 60					; 0000003cH
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-72]
	mov	ecx, 15					; 0000000fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 80   :   for (SubgoalList::iterator it = m_SubGoals.begin();

	lea	eax, DWORD PTR _it$5[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?begin@?$list@PAV?$Goal@VRaven_Bot@@@@V?$allocator@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@2@XZ ; std::list<Goal<Raven_Bot> *,std::allocator<Goal<Raven_Bot> *> >::begin
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	jmp	SHORT $LN4@RemoveAllS
$LN2@RemoveAllS:

; 82   :        ++it)

	lea	ecx, DWORD PTR _it$5[ebp]
	call	??E?$_List_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@QAEAAV01@XZ ; std::_List_iterator<std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> > >::operator++
$LN4@RemoveAllS:

; 81   :        it != m_SubGoals.end();

	lea	ecx, DWORD PTR $T3[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?end@?$list@PAV?$Goal@VRaven_Bot@@@@V?$allocator@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@2@XZ ; std::list<Goal<Raven_Bot> *,std::allocator<Goal<Raven_Bot> *> >::end
	mov	DWORD PTR tv66[ebp], eax
	mov	edx, DWORD PTR tv66[ebp]
	mov	DWORD PTR tv141[ebp], edx
	mov	BYTE PTR __$EHRec$[ebp+8], 1
	mov	eax, DWORD PTR tv141[ebp]
	push	eax
	lea	ecx, DWORD PTR _it$5[ebp]
	call	??9?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@QBE_NABV01@@Z ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> > >::operator!=
	mov	BYTE PTR $T4[ebp], al
	mov	BYTE PTR __$EHRec$[ebp+8], 0
	lea	ecx, DWORD PTR $T3[ebp]
	call	??1?$_List_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@QAE@XZ
	movzx	ecx, BYTE PTR $T4[ebp]
	test	ecx, ecx
	je	SHORT $LN3@RemoveAllS

; 83   :   {  
; 84   :     (*it)->Terminate();

	lea	ecx, DWORD PTR _it$5[ebp]
	call	??D?$_List_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@QBEAAPAV?$Goal@VRaven_Bot@@@@XZ ; std::_List_iterator<std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> > >::operator*
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR tv93[ebp], edx
	mov	eax, DWORD PTR tv93[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR tv93[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp

; 85   :     
; 86   :     delete *it;

	lea	ecx, DWORD PTR _it$5[ebp]
	call	??D?$_List_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@QBEAAPAV?$Goal@VRaven_Bot@@@@XZ ; std::_List_iterator<std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> > >::operator*
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T2[ebp], ecx
	cmp	DWORD PTR $T2[ebp], 0
	je	SHORT $LN6@RemoveAllS
	mov	esi, esp
	push	1
	mov	edx, DWORD PTR $T2[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T2[ebp]
	mov	edx, DWORD PTR [eax]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv136[ebp], eax
	jmp	SHORT $LN7@RemoveAllS
$LN6@RemoveAllS:
	mov	DWORD PTR tv136[ebp], 0
$LN7@RemoveAllS:

; 87   :   }

	jmp	$LN2@RemoveAllS
$LN3@RemoveAllS:
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _it$5[ebp]
	call	??1?$_List_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@QAE@XZ

; 88   : 
; 89   :   m_SubGoals.clear();

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?clear@?$list@PAV?$Goal@VRaven_Bot@@@@V?$allocator@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@QAEXXZ ; std::list<Goal<Raven_Bot> *,std::allocator<Goal<Raven_Bot> *> >::clear

; 90   : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN13@RemoveAllS
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	add	esp, 72					; 00000048H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN13@RemoveAllS:
	DD	1
	DD	$LN12@RemoveAllS
$LN12@RemoveAllS:
	DD	-32					; ffffffe0H
	DD	12					; 0000000cH
	DD	$LN10@RemoveAllS
$LN10@RemoveAllS:
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?RemoveAllSubgoals@?$Goal_Composite@VRaven_Bot@@@@QAEXXZ$0:
	lea	ecx, DWORD PTR _it$5[ebp]
	jmp	??1?$_List_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@QAE@XZ
__unwindfunclet$?RemoveAllSubgoals@?$Goal_Composite@VRaven_Bot@@@@QAEXXZ$1:
	lea	ecx, DWORD PTR $T3[ebp]
	jmp	??1?$_List_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@QAE@XZ
__ehhandler$?RemoveAllSubgoals@?$Goal_Composite@VRaven_Bot@@@@QAEXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-72]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?RemoveAllSubgoals@?$Goal_Composite@VRaven_Bot@@@@QAEXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?RemoveAllSubgoals@?$Goal_Composite@VRaven_Bot@@@@QAEXXZ ENDP ; Goal_Composite<Raven_Bot>::RemoveAllSubgoals
; Function compile flags: /Odtp /RTCsu
; File D:\Réseau neuronnes - Projet Raven\Réseau\solution_lab_apprentissage_a_partir_bot\solution_lab_apprentissage_a_partir_bot\Common\Goals\Goal_Composite.h
;	COMDAT ?AddSubgoal@?$Goal_Composite@VRaven_Bot@@@@UAEXPAV?$Goal@VRaven_Bot@@@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_g$ = 8							; size = 4
?AddSubgoal@?$Goal_Composite@VRaven_Bot@@@@UAEXPAV?$Goal@VRaven_Bot@@@@@Z PROC ; Goal_Composite<Raven_Bot>::AddSubgoal, COMDAT
; _this$ = ecx

; 138  : {   

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 139  :   //add the new goal to the front of the list
; 140  :   m_SubGoals.push_front(g);

	lea	eax, DWORD PTR _g$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?push_front@?$list@PAV?$Goal@VRaven_Bot@@@@V?$allocator@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@QAEXABQAV?$Goal@VRaven_Bot@@@@@Z ; std::list<Goal<Raven_Bot> *,std::allocator<Goal<Raven_Bot> *> >::push_front

; 141  : }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?AddSubgoal@?$Goal_Composite@VRaven_Bot@@@@UAEXPAV?$Goal@VRaven_Bot@@@@@Z ENDP ; Goal_Composite<Raven_Bot>::AddSubgoal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\Réseau neuronnes - Projet Raven\Réseau\solution_lab_apprentissage_a_partir_bot\solution_lab_apprentissage_a_partir_bot\Common\Goals\Goal_Composite.h
;	COMDAT ?HandleMessage@?$Goal_Composite@VRaven_Bot@@@@UAE_NABUTelegram@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_msg$ = 8						; size = 4
?HandleMessage@?$Goal_Composite@VRaven_Bot@@@@UAE_NABUTelegram@@@Z PROC ; Goal_Composite<Raven_Bot>::HandleMessage, COMDAT
; _this$ = ecx

; 56   :   { return ForwardMessageToFrontMostSubgoal(msg);}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _msg$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?ForwardMessageToFrontMostSubgoal@?$Goal_Composite@VRaven_Bot@@@@IAE_NABUTelegram@@@Z ; Goal_Composite<Raven_Bot>::ForwardMessageToFrontMostSubgoal
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?HandleMessage@?$Goal_Composite@VRaven_Bot@@@@UAE_NABUTelegram@@@Z ENDP ; Goal_Composite<Raven_Bot>::HandleMessage
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\Réseau neuronnes - Projet Raven\Réseau\solution_lab_apprentissage_a_partir_bot\solution_lab_apprentissage_a_partir_bot\Common\Goals\Goal_Composite.h
;	COMDAT ??1?$Goal_Composite@VRaven_Bot@@@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$Goal_Composite@VRaven_Bot@@@@UAE@XZ PROC		; Goal_Composite<Raven_Bot>::~Goal_Composite<Raven_Bot>, COMDAT
; _this$ = ecx

; 41   :   virtual ~Goal_Composite(){RemoveAllSubgoals();}

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1?$Goal_Composite@VRaven_Bot@@@@UAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$Goal_Composite@VRaven_Bot@@@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	call	?RemoveAllSubgoals@?$Goal_Composite@VRaven_Bot@@@@QAEXXZ ; Goal_Composite<Raven_Bot>::RemoveAllSubgoals
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	??1?$list@PAV?$Goal@VRaven_Bot@@@@V?$allocator@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@QAE@XZ ; std::list<Goal<Raven_Bot> *,std::allocator<Goal<Raven_Bot> *> >::~list<Goal<Raven_Bot> *,std::allocator<Goal<Raven_Bot> *> >
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$Goal@VRaven_Bot@@@@UAE@XZ		; Goal<Raven_Bot>::~Goal<Raven_Bot>
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1?$Goal_Composite@VRaven_Bot@@@@UAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1?$Goal_Composite@VRaven_Bot@@@@UAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1?$Goal_Composite@VRaven_Bot@@@@UAE@XZ ENDP		; Goal_Composite<Raven_Bot>::~Goal_Composite<Raven_Bot>
; Function compile flags: /Odtp /RTCsu
; File D:\Réseau neuronnes - Projet Raven\Réseau\solution_lab_apprentissage_a_partir_bot\solution_lab_apprentissage_a_partir_bot\Common\Goals\Goal_Composite.h
;	COMDAT ??0?$Goal_Composite@VRaven_Bot@@@@QAE@PAVRaven_Bot@@H@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pE$ = 8						; size = 4
_type$ = 12						; size = 4
??0?$Goal_Composite@VRaven_Bot@@@@QAE@PAVRaven_Bot@@H@Z PROC ; Goal_Composite<Raven_Bot>::Goal_Composite<Raven_Bot>, COMDAT
; _this$ = ecx

; 37   :   Goal_Composite(entity_type* pE, int type):Goal<entity_type>(pE,type){}

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??0?$Goal_Composite@VRaven_Bot@@@@QAE@PAVRaven_Bot@@H@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _type$[ebp]
	push	eax
	mov	ecx, DWORD PTR _pE$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0?$Goal@VRaven_Bot@@@@QAE@PAVRaven_Bot@@H@Z ; Goal<Raven_Bot>::Goal<Raven_Bot>
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx], OFFSET ??_7?$Goal_Composite@VRaven_Bot@@@@6B@
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	??0?$list@PAV?$Goal@VRaven_Bot@@@@V?$allocator@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@QAE@XZ ; std::list<Goal<Raven_Bot> *,std::allocator<Goal<Raven_Bot> *> >::list<Goal<Raven_Bot> *,std::allocator<Goal<Raven_Bot> *> >
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0?$Goal_Composite@VRaven_Bot@@@@QAE@PAVRaven_Bot@@H@Z$0:
	mov	ecx, DWORD PTR _this$[ebp]
	jmp	??1?$Goal@VRaven_Bot@@@@UAE@XZ		; Goal<Raven_Bot>::~Goal<Raven_Bot>
__ehhandler$??0?$Goal_Composite@VRaven_Bot@@@@QAE@PAVRaven_Bot@@H@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??0?$Goal_Composite@VRaven_Bot@@@@QAE@PAVRaven_Bot@@H@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??0?$Goal_Composite@VRaven_Bot@@@@QAE@PAVRaven_Bot@@H@Z ENDP ; Goal_Composite<Raven_Bot>::Goal_Composite<Raven_Bot>
; Function compile flags: /Odtp /RTCsu
; File D:\Réseau neuronnes - Projet Raven\Réseau\solution_lab_apprentissage_a_partir_bot\solution_lab_apprentissage_a_partir_bot\Common\Goals\Goal_Composite.h
;	COMDAT ?ForwardMessageToFrontMostSubgoal@?$Goal_Composite@VRaven_Bot@@@@IAE_NABUTelegram@@@Z
_TEXT	SEGMENT
tv74 = -8						; size = 4
_this$ = -4						; size = 4
_msg$ = 8						; size = 4
?ForwardMessageToFrontMostSubgoal@?$Goal_Composite@VRaven_Bot@@@@IAE_NABUTelegram@@@Z PROC ; Goal_Composite<Raven_Bot>::ForwardMessageToFrontMostSubgoal, COMDAT
; _this$ = ecx

; 151  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	push	esi
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 152  :   if (!m_SubGoals.empty())

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?empty@?$list@PAV?$Goal@VRaven_Bot@@@@V?$allocator@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@QBE_NXZ ; std::list<Goal<Raven_Bot> *,std::allocator<Goal<Raven_Bot> *> >::empty
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN2@ForwardMes

; 153  :   {
; 154  :     return m_SubGoals.front()->HandleMessage(msg);

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?front@?$list@PAV?$Goal@VRaven_Bot@@@@V?$allocator@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@QAEAAPAV?$Goal@VRaven_Bot@@@@XZ ; std::list<Goal<Raven_Bot> *,std::allocator<Goal<Raven_Bot> *> >::front
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR tv74[ebp], ecx
	mov	esi, esp
	mov	edx, DWORD PTR _msg$[ebp]
	push	edx
	mov	eax, DWORD PTR tv74[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR tv74[ebp]
	mov	eax, DWORD PTR [edx+16]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	jmp	SHORT $LN1@ForwardMes
$LN2@ForwardMes:

; 155  :   }
; 156  : 
; 157  :   //return false if the message has not been handled
; 158  :   return false;

	xor	al, al
$LN1@ForwardMes:

; 159  : }

	pop	esi
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?ForwardMessageToFrontMostSubgoal@?$Goal_Composite@VRaven_Bot@@@@IAE_NABUTelegram@@@Z ENDP ; Goal_Composite<Raven_Bot>::ForwardMessageToFrontMostSubgoal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\Réseau neuronnes - Projet Raven\Réseau\solution_lab_apprentissage_a_partir_bot\solution_lab_apprentissage_a_partir_bot\Common\Goals\Goal_Composite.h
;	COMDAT ?ProcessSubgoals@?$Goal_Composite@VRaven_Bot@@@@IAEHXZ
_TEXT	SEGMENT
tv145 = -24						; size = 4
tv132 = -20						; size = 4
tv88 = -16						; size = 4
$T1 = -12						; size = 4
_StatusOfSubGoals$2 = -8				; size = 4
_this$ = -4						; size = 4
?ProcessSubgoals@?$Goal_Composite@VRaven_Bot@@@@IAEHXZ PROC ; Goal_Composite<Raven_Bot>::ProcessSubgoals, COMDAT
; _this$ = ecx

; 100  : { 

	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	push	esi
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
$LN2@ProcessSub:

; 101  :   //remove all completed and failed goals from the front of the subgoal list
; 102  :   while (!m_SubGoals.empty() &&

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?empty@?$list@PAV?$Goal@VRaven_Bot@@@@V?$allocator@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@QBE_NXZ ; std::list<Goal<Raven_Bot> *,std::allocator<Goal<Raven_Bot> *> >::empty
	movzx	eax, al
	test	eax, eax
	jne	$LN3@ProcessSub
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?front@?$list@PAV?$Goal@VRaven_Bot@@@@V?$allocator@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@QAEAAPAV?$Goal@VRaven_Bot@@@@XZ ; std::list<Goal<Raven_Bot> *,std::allocator<Goal<Raven_Bot> *> >::front
	mov	ecx, DWORD PTR [eax]
	call	?isComplete@?$Goal@VRaven_Bot@@@@QBE_NXZ ; Goal<Raven_Bot>::isComplete
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN4@ProcessSub
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?front@?$list@PAV?$Goal@VRaven_Bot@@@@V?$allocator@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@QAEAAPAV?$Goal@VRaven_Bot@@@@XZ ; std::list<Goal<Raven_Bot> *,std::allocator<Goal<Raven_Bot> *> >::front
	mov	ecx, DWORD PTR [eax]
	call	?hasFailed@?$Goal@VRaven_Bot@@@@QBE_NXZ	; Goal<Raven_Bot>::hasFailed
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN3@ProcessSub
$LN4@ProcessSub:

; 103  :          (m_SubGoals.front()->isComplete() || m_SubGoals.front()->hasFailed()))
; 104  :   {    
; 105  :     m_SubGoals.front()->Terminate();

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?front@?$list@PAV?$Goal@VRaven_Bot@@@@V?$allocator@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@QAEAAPAV?$Goal@VRaven_Bot@@@@XZ ; std::list<Goal<Raven_Bot> *,std::allocator<Goal<Raven_Bot> *> >::front
	mov	eax, DWORD PTR [eax]
	mov	DWORD PTR tv88[ebp], eax
	mov	ecx, DWORD PTR tv88[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	esi, esp
	mov	ecx, DWORD PTR tv88[ebp]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp

; 106  :     delete m_SubGoals.front(); 

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?front@?$list@PAV?$Goal@VRaven_Bot@@@@V?$allocator@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@QAEAAPAV?$Goal@VRaven_Bot@@@@XZ ; std::list<Goal<Raven_Bot> *,std::allocator<Goal<Raven_Bot> *> >::front
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR $T1[ebp], ecx
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN9@ProcessSub
	mov	esi, esp
	push	1
	mov	edx, DWORD PTR $T1[ebp]
	mov	eax, DWORD PTR [edx]
	mov	ecx, DWORD PTR $T1[ebp]
	mov	edx, DWORD PTR [eax]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv132[ebp], eax
	jmp	SHORT $LN10@ProcessSub
$LN9@ProcessSub:
	mov	DWORD PTR tv132[ebp], 0
$LN10@ProcessSub:

; 107  :     m_SubGoals.pop_front();

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?pop_front@?$list@PAV?$Goal@VRaven_Bot@@@@V?$allocator@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@QAEXXZ ; std::list<Goal<Raven_Bot> *,std::allocator<Goal<Raven_Bot> *> >::pop_front

; 108  :   }

	jmp	$LN2@ProcessSub
$LN3@ProcessSub:

; 109  : 
; 110  :   //if any subgoals remain, process the one at the front of the list
; 111  :   if (!m_SubGoals.empty())

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?empty@?$list@PAV?$Goal@VRaven_Bot@@@@V?$allocator@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@QBE_NXZ ; std::list<Goal<Raven_Bot> *,std::allocator<Goal<Raven_Bot> *> >::empty
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN5@ProcessSub

; 112  :   { 
; 113  :     //grab the status of the front-most subgoal
; 114  :     int StatusOfSubGoals = m_SubGoals.front()->Process();

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?front@?$list@PAV?$Goal@VRaven_Bot@@@@V?$allocator@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@QAEAAPAV?$Goal@VRaven_Bot@@@@XZ ; std::list<Goal<Raven_Bot> *,std::allocator<Goal<Raven_Bot> *> >::front
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR tv145[ebp], ecx
	mov	edx, DWORD PTR tv145[ebp]
	mov	eax, DWORD PTR [edx]
	mov	esi, esp
	mov	ecx, DWORD PTR tv145[ebp]
	mov	edx, DWORD PTR [eax+8]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _StatusOfSubGoals$2[ebp], eax

; 115  : 
; 116  :     //we have to test for the special case where the front-most subgoal
; 117  :     //reports 'completed' *and* the subgoal list contains additional goals.When
; 118  :     //this is the case, to ensure the parent keeps processing its subgoal list
; 119  :     //we must return the 'active' status.
; 120  :     if (StatusOfSubGoals == completed && m_SubGoals.size() > 1)

	cmp	DWORD PTR _StatusOfSubGoals$2[ebp], 2
	jne	SHORT $LN7@ProcessSub
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 16					; 00000010H
	call	?size@?$list@PAV?$Goal@VRaven_Bot@@@@V?$allocator@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@QBEIXZ ; std::list<Goal<Raven_Bot> *,std::allocator<Goal<Raven_Bot> *> >::size
	cmp	eax, 1
	jbe	SHORT $LN7@ProcessSub

; 121  :     {
; 122  :       return active;

	xor	eax, eax
	jmp	SHORT $LN1@ProcessSub
$LN7@ProcessSub:

; 123  :     }
; 124  : 
; 125  :     return StatusOfSubGoals;

	mov	eax, DWORD PTR _StatusOfSubGoals$2[ebp]
	jmp	SHORT $LN1@ProcessSub

; 126  :   }

	jmp	SHORT $LN1@ProcessSub
$LN5@ProcessSub:

; 127  :   
; 128  :   //no more subgoals to process - return 'completed'
; 129  :   else
; 130  :   {
; 131  :     return completed;

	mov	eax, 2
$LN1@ProcessSub:

; 132  :   }
; 133  : }

	pop	esi
	add	esp, 24					; 00000018H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?ProcessSubgoals@?$Goal_Composite@VRaven_Bot@@@@IAEHXZ ENDP ; Goal_Composite<Raven_Bot>::ProcessSubgoals
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@std@@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@2@$00@std@@QBEABV?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Get_first@?$_Compressed_pair@V?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@std@@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@2@$00@std@@QBEABV?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<std::_List_node<Goal<Raven_Bot> *,void *> >,std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> >,1>::_Get_first, COMDAT
; _this$ = ecx

; 1424 :     const _Ty1& _Get_first() const noexcept {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 1425 :         return *this;

	mov	eax, DWORD PTR _this$[ebp]

; 1426 :     }

	mov	esp, ebp
	pop	ebp
	ret	0
?_Get_first@?$_Compressed_pair@V?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@std@@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@2@$00@std@@QBEABV?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<std::_List_node<Goal<Raven_Bot> *,void *> >,std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@std@@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@2@$00@std@@QAEAAV?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Get_first@?$_Compressed_pair@V?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@std@@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@2@$00@std@@QAEAAV?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<std::_List_node<Goal<Raven_Bot> *,void *> >,std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> >,1>::_Get_first, COMDAT
; _this$ = ecx

; 1420 :     _Ty1& _Get_first() noexcept {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 1421 :         return *this;

	mov	eax, DWORD PTR _this$[ebp]

; 1422 :     }

	mov	esp, ebp
	pop	ebp
	ret	0
?_Get_first@?$_Compressed_pair@V?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@std@@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@2@$00@std@@QAEAAV?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<std::_List_node<Goal<Raven_Bot> *,void *> >,std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\list
;	COMDAT ?_Orphan_non_end@?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
__Pnextnext$2 = -40					; size = 4
__Head$ = -36						; size = 4
__Pnext$ = -32						; size = 4
__Lock$ = -24						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
?_Orphan_non_end@?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@QAEXXZ PROC ; std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> >::_Orphan_non_end, COMDAT
; _this$ = ecx

; 392  :     void _Orphan_non_end() noexcept { // orphan iterators except end()

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Orphan_non_end@?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@QAEXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 28					; 0000001cH
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-40], eax
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 393  : #if _ITERATOR_DEBUG_LEVEL == 2
; 394  :         _Lockit _Lock(_LOCK_DEBUG);

	push	3
	lea	ecx, DWORD PTR __Lock$[ebp]
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit

; 395  :         _Iterator_base12** _Pnext = &this->_Myproxy->_Myfirstiter;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 4
	mov	DWORD PTR __Pnext$[ebp], ecx

; 396  :         const auto _Head          = _Myhead;

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR __Head$[ebp], eax
$LN2@Orphan_non:

; 397  :         while (*_Pnext) {

	mov	ecx, DWORD PTR __Pnext$[ebp]
	cmp	DWORD PTR [ecx], 0
	je	SHORT $LN3@Orphan_non

; 398  :             _Iterator_base12** _Pnextnext = &(*_Pnext)->_Mynextiter;

	mov	edx, DWORD PTR __Pnext$[ebp]
	mov	eax, DWORD PTR [edx]
	add	eax, 4
	mov	DWORD PTR __Pnextnext$2[ebp], eax

; 399  :             if (static_cast<_List_const_iterator<_List_val>&>(**_Pnext)._Ptr == _Head) { // iterator is end(), move on

	mov	ecx, DWORD PTR __Pnext$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx+8]
	cmp	eax, DWORD PTR __Head$[ebp]
	jne	SHORT $LN4@Orphan_non

; 400  :                 _Pnext = _Pnextnext;

	mov	ecx, DWORD PTR __Pnextnext$2[ebp]
	mov	DWORD PTR __Pnext$[ebp], ecx

; 401  :             } else { // orphan the iterator

	jmp	SHORT $LN5@Orphan_non
$LN4@Orphan_non:

; 402  :                 (*_Pnext)->_Myproxy = nullptr;

	mov	edx, DWORD PTR __Pnext$[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [eax], 0

; 403  :                 *_Pnext             = *_Pnextnext;

	mov	ecx, DWORD PTR __Pnext$[ebp]
	mov	edx, DWORD PTR __Pnextnext$2[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [ecx], eax
$LN5@Orphan_non:

; 404  :             }
; 405  :         }

	jmp	SHORT $LN2@Orphan_non
$LN3@Orphan_non:

; 406  : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 407  :     }

	lea	ecx, DWORD PTR __Lock$[ebp]
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN10@Orphan_non
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 40					; 00000028H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN10@Orphan_non:
	DD	1
	DD	$LN9@Orphan_non
$LN9@Orphan_non:
	DD	-24					; ffffffe8H
	DD	4
	DD	$LN7@Orphan_non
$LN7@Orphan_non:
	DB	95					; 0000005fH
	DB	76					; 0000004cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Orphan_non_end@?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@QAEXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-32]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Orphan_non_end@?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@QAEXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Orphan_non_end@?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@QAEXXZ ENDP ; std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> >::_Orphan_non_end
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\list
;	COMDAT ??0?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@QAE@XZ PROC ; std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> >::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> >, COMDAT
; _this$ = ecx

; 368  :     _List_val() : _Myhead(), _Mysize(0) { // initialize data

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0_Container_base12@std@@QAE@XZ	; std::_Container_base12::_Container_base12
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+4], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], 0

; 369  :     }

	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@QAE@XZ ENDP ; std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> >::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\list
;	COMDAT ?_Getal@?$list@PAV?$Goal@VRaven_Bot@@@@V?$allocator@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@ABEABV?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Getal@?$list@PAV?$Goal@VRaven_Bot@@@@V?$allocator@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@ABEABV?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@2@XZ PROC ; std::list<Goal<Raven_Bot> *,std::allocator<Goal<Raven_Bot> *> >::_Getal, COMDAT
; _this$ = ecx

; 1714 :     const _Alnode& _Getal() const noexcept { // return const reference to allocator

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 1715 :         return _Mypair._Get_first();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_first@?$_Compressed_pair@V?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@std@@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@2@$00@std@@QBEABV?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@2@XZ ; std::_Compressed_pair<std::allocator<std::_List_node<Goal<Raven_Bot> *,void *> >,std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> >,1>::_Get_first

; 1716 :     }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Getal@?$list@PAV?$Goal@VRaven_Bot@@@@V?$allocator@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@ABEABV?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@2@XZ ENDP ; std::list<Goal<Raven_Bot> *,std::allocator<Goal<Raven_Bot> *> >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\list
;	COMDAT ?_Getal@?$list@PAV?$Goal@VRaven_Bot@@@@V?$allocator@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@AAEAAV?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Getal@?$list@PAV?$Goal@VRaven_Bot@@@@V?$allocator@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@AAEAAV?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@2@XZ PROC ; std::list<Goal<Raven_Bot> *,std::allocator<Goal<Raven_Bot> *> >::_Getal, COMDAT
; _this$ = ecx

; 1710 :     _Alnode& _Getal() noexcept { // return reference to allocator

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 1711 :         return _Mypair._Get_first();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_first@?$_Compressed_pair@V?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@std@@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@2@$00@std@@QAEAAV?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@2@XZ ; std::_Compressed_pair<std::allocator<std::_List_node<Goal<Raven_Bot> *,void *> >,std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> >,1>::_Get_first

; 1712 :     }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Getal@?$list@PAV?$Goal@VRaven_Bot@@@@V?$allocator@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@AAEAAV?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@2@XZ ENDP ; std::list<Goal<Raven_Bot> *,std::allocator<Goal<Raven_Bot> *> >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\list
;	COMDAT ?_Alloc_sentinel_and_proxy@?$list@PAV?$Goal@VRaven_Bot@@@@V?$allocator@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@AAEXXZ
_TEXT	SEGMENT
__Newhead$ = -60					; size = 4
__Al$ = -52						; size = 4
__Proxy$ = -44						; size = 8
_$S23$ = -25						; size = 1
__Alproxy$ = -20					; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
?_Alloc_sentinel_and_proxy@?$list@PAV?$Goal@VRaven_Bot@@@@V?$allocator@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@AAEXXZ PROC ; std::list<Goal<Raven_Bot> *,std::allocator<Goal<Raven_Bot> *> >::_Alloc_sentinel_and_proxy, COMDAT
; _this$ = ecx

; 1691 :     void _Alloc_sentinel_and_proxy() {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Alloc_sentinel_and_proxy@?$list@PAV?$Goal@VRaven_Bot@@@@V?$allocator@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@AAEXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 52					; 00000034H
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-64]
	mov	ecx, 13					; 0000000dH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 1692 :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alnode, _Getal());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$list@PAV?$Goal@VRaven_Bot@@@@V?$allocator@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@AAEAAV?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@2@XZ ; std::list<Goal<Raven_Bot> *,std::allocator<Goal<Raven_Bot> *> >::_Getal
	push	eax
	lea	ecx, DWORD PTR _$S23$[ebp]
	call	??$?0U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::_List_node<Goal<Raven_Bot> *,void *> >
	lea	eax, DWORD PTR _$S23$[ebp]
	mov	DWORD PTR __Alproxy$[ebp], eax

; 1693 :         _Container_proxy_ptr<_Alty> _Proxy(_Alproxy, _Mypair._Myval2);

	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Alproxy$[ebp]
	push	edx
	lea	ecx, DWORD PTR __Proxy$[ebp]
	call	??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@AAV?$allocator@U_Container_proxy@std@@@1@AAU_Container_base12@1@@Z ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
	mov	DWORD PTR __$EHRec$[ebp+8], 0

; 1694 :         auto& _Al     = _Getal();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$list@PAV?$Goal@VRaven_Bot@@@@V?$allocator@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@AAEAAV?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@2@XZ ; std::list<Goal<Raven_Bot> *,std::allocator<Goal<Raven_Bot> *> >::_Getal
	mov	DWORD PTR __Al$[ebp], eax

; 1695 :         auto _Newhead = _Al.allocate(1);

	push	1
	mov	ecx, DWORD PTR __Al$[ebp]
	call	?allocate@?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@std@@QAEPAU?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@2@I@Z ; std::allocator<std::_List_node<Goal<Raven_Bot> *,void *> >::allocate
	mov	DWORD PTR __Newhead$[ebp], eax

; 1696 :         _Construct_in_place(_Newhead->_Next, _Newhead);

	lea	eax, DWORD PTR __Newhead$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Newhead$[ebp]
	push	ecx
	call	??$_Construct_in_place@PAU?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@0@0@Z ; std::_Construct_in_place<std::_List_node<Goal<Raven_Bot> *,void *> *,std::_List_node<Goal<Raven_Bot> *,void *> * &>
	add	esp, 8

; 1697 :         _Construct_in_place(_Newhead->_Prev, _Newhead);

	lea	edx, DWORD PTR __Newhead$[ebp]
	push	edx
	mov	eax, DWORD PTR __Newhead$[ebp]
	add	eax, 4
	push	eax
	call	??$_Construct_in_place@PAU?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@AAPAU12@@std@@YAXAAPAU?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@0@0@Z ; std::_Construct_in_place<std::_List_node<Goal<Raven_Bot> *,void *> *,std::_List_node<Goal<Raven_Bot> *,void *> * &>
	add	esp, 8

; 1698 :         _Mypair._Myval2._Myhead = _Newhead;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR __Newhead$[ebp]
	mov	DWORD PTR [ecx+4], edx

; 1699 :         _Proxy._Release();

	lea	ecx, DWORD PTR __Proxy$[ebp]
	call	?_Release@_Basic_container_proxy_ptr12@std@@QAEXXZ ; std::_Basic_container_proxy_ptr12::_Release

; 1700 :     }

	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR __Proxy$[ebp]
	call	??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@Alloc_sent
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	add	esp, 64					; 00000040H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN9@Alloc_sent:
	DD	3
	DD	$LN8@Alloc_sent
$LN8@Alloc_sent:
	DD	-25					; ffffffe7H
	DD	1
	DD	$LN4@Alloc_sent
	DD	-44					; ffffffd4H
	DD	8
	DD	$LN5@Alloc_sent
	DD	-60					; ffffffc4H
	DD	4
	DD	$LN6@Alloc_sent
$LN6@Alloc_sent:
	DB	95					; 0000005fH
	DB	78					; 0000004eH
	DB	101					; 00000065H
	DB	119					; 00000077H
	DB	104					; 00000068H
	DB	101					; 00000065H
	DB	97					; 00000061H
	DB	100					; 00000064H
	DB	0
$LN5@Alloc_sent:
	DB	95					; 0000005fH
	DB	80					; 00000050H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	120					; 00000078H
	DB	121					; 00000079H
	DB	0
$LN4@Alloc_sent:
	DB	36					; 00000024H
	DB	83					; 00000053H
	DB	50					; 00000032H
	DB	51					; 00000033H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?_Alloc_sentinel_and_proxy@?$list@PAV?$Goal@VRaven_Bot@@@@V?$allocator@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@AAEXXZ$0:
	lea	ecx, DWORD PTR __Proxy$[ebp]
	jmp	??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QAE@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
__ehhandler$?_Alloc_sentinel_and_proxy@?$list@PAV?$Goal@VRaven_Bot@@@@V?$allocator@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@AAEXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-60]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Alloc_sentinel_and_proxy@?$list@PAV?$Goal@VRaven_Bot@@@@V?$allocator@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@AAEXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Alloc_sentinel_and_proxy@?$list@PAV?$Goal@VRaven_Bot@@@@V?$allocator@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@AAEXXZ ENDP ; std::list<Goal<Raven_Bot> *,std::allocator<Goal<Raven_Bot> *> >::_Alloc_sentinel_and_proxy
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\list
;	COMDAT ?_Tidy@?$list@PAV?$Goal@VRaven_Bot@@@@V?$allocator@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@AAEXXZ
_TEXT	SEGMENT
__My_data$ = -12					; size = 4
__Al$ = -8						; size = 4
_this$ = -4						; size = 4
?_Tidy@?$list@PAV?$Goal@VRaven_Bot@@@@V?$allocator@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@AAEXXZ PROC ; std::list<Goal<Raven_Bot> *,std::allocator<Goal<Raven_Bot> *> >::_Tidy, COMDAT
; _this$ = ecx

; 1309 :     void _Tidy() noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 1310 :         auto& _Al      = _Getal();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$list@PAV?$Goal@VRaven_Bot@@@@V?$allocator@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@AAEAAV?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@2@XZ ; std::list<Goal<Raven_Bot> *,std::allocator<Goal<Raven_Bot> *> >::_Getal
	mov	DWORD PTR __Al$[ebp], eax

; 1311 :         auto& _My_data = _Mypair._Myval2;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR __My_data$[ebp], eax

; 1312 :         _My_data._Orphan_all();

	mov	ecx, DWORD PTR __My_data$[ebp]
	call	?_Orphan_all@_Container_base12@std@@QAEXXZ ; std::_Container_base12::_Orphan_all

; 1313 :         _Node::_Free_non_head(_Al, _My_data._Myhead);

	mov	ecx, DWORD PTR __My_data$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	eax, DWORD PTR __Al$[ebp]
	push	eax
	call	??$_Free_non_head@V?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@std@@@?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@SAXAAV?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@1@PAU01@@Z ; std::_List_node<Goal<Raven_Bot> *,void *>::_Free_non_head<std::allocator<std::_List_node<Goal<Raven_Bot> *,void *> > >
	add	esp, 8

; 1314 :         _Node::_Freenode0(_Al, _My_data._Myhead);

	mov	ecx, DWORD PTR __My_data$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	eax, DWORD PTR __Al$[ebp]
	push	eax
	call	??$_Freenode0@V?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@std@@@?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@SAXAAV?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@1@PAU01@@Z ; std::_List_node<Goal<Raven_Bot> *,void *>::_Freenode0<std::allocator<std::_List_node<Goal<Raven_Bot> *,void *> > >
	add	esp, 8

; 1315 :     }

	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Tidy@?$list@PAV?$Goal@VRaven_Bot@@@@V?$allocator@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@AAEXXZ ENDP ; std::list<Goal<Raven_Bot> *,std::allocator<Goal<Raven_Bot> *> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\list
;	COMDAT ?clear@?$list@PAV?$Goal@VRaven_Bot@@@@V?$allocator@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
__My_data$ = -8						; size = 4
_this$ = -4						; size = 4
?clear@?$list@PAV?$Goal@VRaven_Bot@@@@V?$allocator@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@QAEXXZ PROC ; std::list<Goal<Raven_Bot> *,std::allocator<Goal<Raven_Bot> *> >::clear, COMDAT
; _this$ = ecx

; 1299 :     void clear() noexcept { // erase all

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 1300 :         auto& _My_data = _Mypair._Myval2;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR __My_data$[ebp], eax

; 1301 :         _My_data._Orphan_non_end();

	mov	ecx, DWORD PTR __My_data$[ebp]
	call	?_Orphan_non_end@?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@QAEXXZ ; std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> >::_Orphan_non_end

; 1302 :         _Node::_Free_non_head(_Getal(), _My_data._Myhead);

	mov	ecx, DWORD PTR __My_data$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$list@PAV?$Goal@VRaven_Bot@@@@V?$allocator@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@AAEAAV?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@2@XZ ; std::list<Goal<Raven_Bot> *,std::allocator<Goal<Raven_Bot> *> >::_Getal
	push	eax
	call	??$_Free_non_head@V?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@std@@@?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@SAXAAV?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@1@PAU01@@Z ; std::_List_node<Goal<Raven_Bot> *,void *>::_Free_non_head<std::allocator<std::_List_node<Goal<Raven_Bot> *,void *> > >
	add	esp, 8

; 1303 :         _My_data._Myhead->_Next = _My_data._Myhead;

	mov	eax, DWORD PTR __My_data$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	edx, DWORD PTR __My_data$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR [ecx], eax

; 1304 :         _My_data._Myhead->_Prev = _My_data._Myhead;

	mov	ecx, DWORD PTR __My_data$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR __My_data$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR [edx+4], ecx

; 1305 :         _My_data._Mysize        = 0;

	mov	edx, DWORD PTR __My_data$[ebp]
	mov	DWORD PTR [edx+8], 0

; 1306 :     }

	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?clear@?$list@PAV?$Goal@VRaven_Bot@@@@V?$allocator@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@QAEXXZ ENDP ; std::list<Goal<Raven_Bot> *,std::allocator<Goal<Raven_Bot> *> >::clear
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\list
;	COMDAT ?_Unchecked_erase@?$list@PAV?$Goal@VRaven_Bot@@@@V?$allocator@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@AAEPAU?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@2@QAU32@@Z
_TEXT	SEGMENT
__Result$ = -8						; size = 4
_this$ = -4						; size = 4
__Pnode$ = 8						; size = 4
?_Unchecked_erase@?$list@PAV?$Goal@VRaven_Bot@@@@V?$allocator@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@AAEPAU?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@2@QAU32@@Z PROC ; std::list<Goal<Raven_Bot> *,std::allocator<Goal<Raven_Bot> *> >::_Unchecked_erase, COMDAT
; _this$ = ecx

; 1268 :     _Nodeptr _Unchecked_erase(const _Nodeptr _Pnode) { // erase element at _Pnode

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 1269 :         const auto _Result   = _Pnode->_Next;

	mov	eax, DWORD PTR __Pnode$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Result$[ebp], ecx

; 1270 :         _Pnode->_Prev->_Next = _Result;

	mov	edx, DWORD PTR __Pnode$[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	ecx, DWORD PTR __Result$[ebp]
	mov	DWORD PTR [eax], ecx

; 1271 :         _Result->_Prev       = _Pnode->_Prev;

	mov	edx, DWORD PTR __Result$[ebp]
	mov	eax, DWORD PTR __Pnode$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR [edx+4], ecx

; 1272 :         _Node::_Freenode(_Getal(), _Pnode);

	mov	edx, DWORD PTR __Pnode$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$list@PAV?$Goal@VRaven_Bot@@@@V?$allocator@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@AAEAAV?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@2@XZ ; std::list<Goal<Raven_Bot> *,std::allocator<Goal<Raven_Bot> *> >::_Getal
	push	eax
	call	??$_Freenode@V?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@std@@@?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@SAXAAV?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@1@PAU01@@Z ; std::_List_node<Goal<Raven_Bot> *,void *>::_Freenode<std::allocator<std::_List_node<Goal<Raven_Bot> *,void *> > >
	add	esp, 8

; 1273 :         --_Mypair._Myval2._Mysize;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+8]
	sub	ecx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+8], ecx

; 1274 :         return _Result;

	mov	eax, DWORD PTR __Result$[ebp]

; 1275 :     }

	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?_Unchecked_erase@?$list@PAV?$Goal@VRaven_Bot@@@@V?$allocator@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@AAEPAU?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@2@QAU32@@Z ENDP ; std::list<Goal<Raven_Bot> *,std::allocator<Goal<Raven_Bot> *> >::_Unchecked_erase
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\list
;	COMDAT ?pop_front@?$list@PAV?$Goal@VRaven_Bot@@@@V?$allocator@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?pop_front@?$list@PAV?$Goal@VRaven_Bot@@@@V?$allocator@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@QAEXXZ PROC ; std::list<Goal<Raven_Bot> *,std::allocator<Goal<Raven_Bot> *> >::pop_front, COMDAT
; _this$ = ecx

; 1169 :     void pop_front() { // erase element at beginning

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
$LN4@pop_front:

; 1170 : #if _CONTAINER_DEBUG_LEVEL > 0
; 1171 :         _STL_VERIFY(_Mypair._Myval2._Mysize != 0, "pop_front called on empty list<T>");

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	je	SHORT $LN7@pop_front
	jmp	SHORT $LN2@pop_front
$LN7@pop_front:
	push	OFFSET ??_C@_0CC@BNIKFPII@pop_front?5called?5on?5empty?5list?$DM@
	push	OFFSET ??_C@_02DKCKIIND@?$CFs@
	push	0
	push	1171					; 00000493H
	push	OFFSET ??_C@_0GF@GNCHBLDJ@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
	push	2
	call	__CrtDbgReport
	add	esp, 24					; 00000018H
	cmp	eax, 1
	jne	SHORT $LN11@pop_front
	int	3
$LN11@pop_front:
	push	0
	push	1171					; 00000493H
	push	OFFSET ??_C@_1MK@DPPFMAIA@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
	push	OFFSET ??_C@_1NC@NFPCHBHP@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAl?$AAi?$AAs?$AAt?$AA?$DM?$AAc?$AAl?$AAa?$AAs?$AAs@
	push	OFFSET ??_C@_1EI@LCNEIDGO@?$AA?$CC?$AAp?$AAo?$AAp?$AA_?$AAf?$AAr?$AAo?$AAn?$AAt?$AA?5?$AAc?$AAa?$AAl?$AAl@
	call	__invalid_parameter
	add	esp, 20					; 00000014H
	xor	edx, edx
	jne	SHORT $LN7@pop_front
$LN2@pop_front:
	xor	eax, eax
	jne	SHORT $LN4@pop_front

; 1172 : #endif // _CONTAINER_DEBUG_LEVEL > 0
; 1173 : 
; 1174 :         _Unchecked_erase(_Mypair._Myval2._Myhead->_Next);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Unchecked_erase@?$list@PAV?$Goal@VRaven_Bot@@@@V?$allocator@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@AAEPAU?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@2@QAU32@@Z ; std::list<Goal<Raven_Bot> *,std::allocator<Goal<Raven_Bot> *> >::_Unchecked_erase

; 1175 :     }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?pop_front@?$list@PAV?$Goal@VRaven_Bot@@@@V?$allocator@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@QAEXXZ ENDP ; std::list<Goal<Raven_Bot> *,std::allocator<Goal<Raven_Bot> *> >::pop_front
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\list
;	COMDAT ?push_front@?$list@PAV?$Goal@VRaven_Bot@@@@V?$allocator@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@QAEXABQAV?$Goal@VRaven_Bot@@@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
?push_front@?$list@PAV?$Goal@VRaven_Bot@@@@V?$allocator@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@QAEXABQAV?$Goal@VRaven_Bot@@@@@Z PROC ; std::list<Goal<Raven_Bot> *,std::allocator<Goal<Raven_Bot> *> >::push_front, COMDAT
; _this$ = ecx

; 1165 :     void push_front(const _Ty& _Val) { // insert element at beginning

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 1166 :         _Emplace(_Mypair._Myval2._Myhead->_Next, _Val);

	mov	eax, DWORD PTR __Val$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$_Emplace@ABQAV?$Goal@VRaven_Bot@@@@@?$list@PAV?$Goal@VRaven_Bot@@@@V?$allocator@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@QAEPAU?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@1@QAU21@ABQAV?$Goal@VRaven_Bot@@@@@Z ; std::list<Goal<Raven_Bot> *,std::allocator<Goal<Raven_Bot> *> >::_Emplace<Goal<Raven_Bot> * const &>

; 1167 :     }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?push_front@?$list@PAV?$Goal@VRaven_Bot@@@@V?$allocator@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@QAEXABQAV?$Goal@VRaven_Bot@@@@@Z ENDP ; std::list<Goal<Raven_Bot> *,std::allocator<Goal<Raven_Bot> *> >::push_front
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\list
;	COMDAT ?front@?$list@PAV?$Goal@VRaven_Bot@@@@V?$allocator@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@QAEAAPAV?$Goal@VRaven_Bot@@@@XZ
_TEXT	SEGMENT
tv72 = -40						; size = 4
tv73 = -36						; size = 4
$T2 = -32						; size = 12
$T3 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
?front@?$list@PAV?$Goal@VRaven_Bot@@@@V?$allocator@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@QAEAAPAV?$Goal@VRaven_Bot@@@@XZ PROC ; std::list<Goal<Raven_Bot> *,std::allocator<Goal<Raven_Bot> *> >::front, COMDAT
; _this$ = ecx

; 1149 :     _NODISCARD reference front() {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?front@?$list@PAV?$Goal@VRaven_Bot@@@@V?$allocator@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@QAEAAPAV?$Goal@VRaven_Bot@@@@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 28					; 0000001cH
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-40], eax
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 1150 :         return *begin();

	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?begin@?$list@PAV?$Goal@VRaven_Bot@@@@V?$allocator@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@2@XZ ; std::list<Goal<Raven_Bot> *,std::allocator<Goal<Raven_Bot> *> >::begin
	mov	DWORD PTR tv73[ebp], eax
	mov	ecx, DWORD PTR tv73[ebp]
	mov	DWORD PTR tv72[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, DWORD PTR tv72[ebp]
	call	??D?$_List_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@QBEAAPAV?$Goal@VRaven_Bot@@@@XZ ; std::_List_iterator<std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> > >::operator*
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T2[ebp]
	call	??1?$_List_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@QAE@XZ
	mov	eax, DWORD PTR $T3[ebp]

; 1151 :     }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 40					; 00000028H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?front@?$list@PAV?$Goal@VRaven_Bot@@@@V?$allocator@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@QAEAAPAV?$Goal@VRaven_Bot@@@@XZ$0:
	lea	ecx, DWORD PTR $T2[ebp]
	jmp	??1?$_List_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@QAE@XZ
__ehhandler$?front@?$list@PAV?$Goal@VRaven_Bot@@@@V?$allocator@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@QAEAAPAV?$Goal@VRaven_Bot@@@@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-32]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?front@?$list@PAV?$Goal@VRaven_Bot@@@@V?$allocator@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@QAEAAPAV?$Goal@VRaven_Bot@@@@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?front@?$list@PAV?$Goal@VRaven_Bot@@@@V?$allocator@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@QAEAAPAV?$Goal@VRaven_Bot@@@@XZ ENDP ; std::list<Goal<Raven_Bot> *,std::allocator<Goal<Raven_Bot> *> >::front
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\list
;	COMDAT ?empty@?$list@PAV?$Goal@VRaven_Bot@@@@V?$allocator@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@QBE_NXZ
_TEXT	SEGMENT
tv68 = -8						; size = 4
_this$ = -4						; size = 4
?empty@?$list@PAV?$Goal@VRaven_Bot@@@@V?$allocator@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@QBE_NXZ PROC ; std::list<Goal<Raven_Bot> *,std::allocator<Goal<Raven_Bot> *> >::empty, COMDAT
; _this$ = ecx

; 1141 :     _NODISCARD bool empty() const noexcept { // test if sequence is empty

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 1142 :         return _Mypair._Myval2._Mysize == 0;

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+8], 0
	jne	SHORT $LN3@empty
	mov	DWORD PTR tv68[ebp], 1
	jmp	SHORT $LN4@empty
$LN3@empty:
	mov	DWORD PTR tv68[ebp], 0
$LN4@empty:
	mov	al, BYTE PTR tv68[ebp]

; 1143 :     }

	mov	esp, ebp
	pop	ebp
	ret	0
?empty@?$list@PAV?$Goal@VRaven_Bot@@@@V?$allocator@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@QBE_NXZ ENDP ; std::list<Goal<Raven_Bot> *,std::allocator<Goal<Raven_Bot> *> >::empty
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\list
;	COMDAT ?max_size@?$list@PAV?$Goal@VRaven_Bot@@@@V?$allocator@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
$T1 = -12						; size = 4
$T2 = -8						; size = 4
_this$ = -4						; size = 4
?max_size@?$list@PAV?$Goal@VRaven_Bot@@@@V?$allocator@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@QBEIXZ PROC ; std::list<Goal<Raven_Bot> *,std::allocator<Goal<Raven_Bot> *> >::max_size, COMDAT
; _this$ = ecx

; 1136 :     _NODISCARD size_type max_size() const noexcept { // return maximum possible length of sequence

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 1137 :         return _Min_value(

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$list@PAV?$Goal@VRaven_Bot@@@@V?$allocator@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@ABEABV?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@2@XZ ; std::list<Goal<Raven_Bot> *,std::allocator<Goal<Raven_Bot> *> >::_Getal
	push	eax
	call	?max_size@?$_Default_allocator_traits@V?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@std@@@std@@SAIABV?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@2@@Z ; std::_Default_allocator_traits<std::allocator<std::_List_node<Goal<Raven_Bot> *,void *> > >::max_size
	add	esp, 4
	mov	DWORD PTR $T2[ebp], eax
	call	?max@?$numeric_limits@H@std@@SAHXZ	; std::numeric_limits<int>::max
	mov	DWORD PTR $T1[ebp], eax
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	lea	ecx, DWORD PTR $T1[ebp]
	push	ecx
	call	??$_Min_value@I@std@@YAABIABI0@Z	; std::_Min_value<unsigned int>
	add	esp, 8
	mov	eax, DWORD PTR [eax]

; 1138 :             static_cast<size_type>((numeric_limits<difference_type>::max)()), _Alnode_traits::max_size(_Getal()));
; 1139 :     }

	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?max_size@?$list@PAV?$Goal@VRaven_Bot@@@@V?$allocator@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@QBEIXZ ENDP ; std::list<Goal<Raven_Bot> *,std::allocator<Goal<Raven_Bot> *> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\list
;	COMDAT ?size@?$list@PAV?$Goal@VRaven_Bot@@@@V?$allocator@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?size@?$list@PAV?$Goal@VRaven_Bot@@@@V?$allocator@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@QBEIXZ PROC ; std::list<Goal<Raven_Bot> *,std::allocator<Goal<Raven_Bot> *> >::size, COMDAT
; _this$ = ecx

; 1132 :     _NODISCARD size_type size() const noexcept { // return length of sequence

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 1133 :         return _Mypair._Myval2._Mysize;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+8]

; 1134 :     }

	mov	esp, ebp
	pop	ebp
	ret	0
?size@?$list@PAV?$Goal@VRaven_Bot@@@@V?$allocator@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@QBEIXZ ENDP ; std::list<Goal<Raven_Bot> *,std::allocator<Goal<Raven_Bot> *> >::size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\list
;	COMDAT ?rend@?$list@PAV?$Goal@VRaven_Bot@@@@V?$allocator@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@QBE?AV?$reverse_iterator@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
$T2 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
?rend@?$list@PAV?$Goal@VRaven_Bot@@@@V?$allocator@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@QBE?AV?$reverse_iterator@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@@2@XZ PROC ; std::list<Goal<Raven_Bot> *,std::allocator<Goal<Raven_Bot> *> >::rend, COMDAT
; _this$ = ecx

; 1083 :     _NODISCARD const_reverse_iterator rend() const noexcept { // return iterator for end of reversed nonmutable sequence

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?rend@?$list@PAV?$Goal@VRaven_Bot@@@@V?$allocator@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@QBE?AV?$reverse_iterator@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@@2@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	mov	DWORD PTR [ebp-20], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 1084 :         return const_reverse_iterator(begin());

	sub	esp, 12					; 0000000cH
	mov	eax, esp
	mov	DWORD PTR $T2[ebp], esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?begin@?$list@PAV?$Goal@VRaven_Bot@@@@V?$allocator@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@QBE?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@2@XZ ; std::list<Goal<Raven_Bot> *,std::allocator<Goal<Raven_Bot> *> >::begin
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$reverse_iterator@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@@std@@QAE@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@1@@Z ; std::reverse_iterator<std::_List_const_iterator<std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> > > >::reverse_iterator<std::_List_const_iterator<std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> > > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1085 :     }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?rend@?$list@PAV?$Goal@VRaven_Bot@@@@V?$allocator@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@QBE?AV?$reverse_iterator@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@@2@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?rend@?$list@PAV?$Goal@VRaven_Bot@@@@V?$allocator@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@QBE?AV?$reverse_iterator@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@@2@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?rend@?$list@PAV?$Goal@VRaven_Bot@@@@V?$allocator@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@QBE?AV?$reverse_iterator@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@@2@XZ ENDP ; std::list<Goal<Raven_Bot> *,std::allocator<Goal<Raven_Bot> *> >::rend
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\list
;	COMDAT ?rbegin@?$list@PAV?$Goal@VRaven_Bot@@@@V?$allocator@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@QBE?AV?$reverse_iterator@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
$T2 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
?rbegin@?$list@PAV?$Goal@VRaven_Bot@@@@V?$allocator@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@QBE?AV?$reverse_iterator@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@@2@XZ PROC ; std::list<Goal<Raven_Bot> *,std::allocator<Goal<Raven_Bot> *> >::rbegin, COMDAT
; _this$ = ecx

; 1075 :         noexcept { // return iterator for beginning of reversed nonmutable sequence

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?rbegin@?$list@PAV?$Goal@VRaven_Bot@@@@V?$allocator@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@QBE?AV?$reverse_iterator@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@@2@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 8
	mov	DWORD PTR [ebp-20], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 1076 :         return const_reverse_iterator(end());

	sub	esp, 12					; 0000000cH
	mov	eax, esp
	mov	DWORD PTR $T2[ebp], esp
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?end@?$list@PAV?$Goal@VRaven_Bot@@@@V?$allocator@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@QBE?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@2@XZ ; std::list<Goal<Raven_Bot> *,std::allocator<Goal<Raven_Bot> *> >::end
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$reverse_iterator@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@@std@@QAE@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@1@@Z ; std::reverse_iterator<std::_List_const_iterator<std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> > > >::reverse_iterator<std::_List_const_iterator<std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> > > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1077 :     }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?rbegin@?$list@PAV?$Goal@VRaven_Bot@@@@V?$allocator@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@QBE?AV?$reverse_iterator@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@@2@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-12]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?rbegin@?$list@PAV?$Goal@VRaven_Bot@@@@V?$allocator@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@QBE?AV?$reverse_iterator@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@@2@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?rbegin@?$list@PAV?$Goal@VRaven_Bot@@@@V?$allocator@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@QBE?AV?$reverse_iterator@V?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@@2@XZ ENDP ; std::list<Goal<Raven_Bot> *,std::allocator<Goal<Raven_Bot> *> >::rbegin
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\list
;	COMDAT ?end@?$list@PAV?$Goal@VRaven_Bot@@@@V?$allocator@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@QBE?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
?end@?$list@PAV?$Goal@VRaven_Bot@@@@V?$allocator@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@QBE?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@2@XZ PROC ; std::list<Goal<Raven_Bot> *,std::allocator<Goal<Raven_Bot> *> >::end, COMDAT
; _this$ = ecx

; 1042 :     _NODISCARD const_iterator end() const noexcept { // return iterator for end of nonmutable sequence

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?end@?$list@PAV?$Goal@VRaven_Bot@@@@V?$allocator@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@QBE?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@2@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 1043 :         return const_iterator(_Mypair._Myval2._Myhead, _STD addressof(_Mypair._Myval2));

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??$addressof@$$CBV?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@YAPBV?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@0@ABV10@@Z ; std::addressof<std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> > const >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@QAE@PAU?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@1@PBV?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@1@@Z ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> > >::_List_const_iterator<std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1044 :     }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?end@?$list@PAV?$Goal@VRaven_Bot@@@@V?$allocator@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@QBE?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@2@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?end@?$list@PAV?$Goal@VRaven_Bot@@@@V?$allocator@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@QBE?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@2@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?end@?$list@PAV?$Goal@VRaven_Bot@@@@V?$allocator@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@QBE?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@2@XZ ENDP ; std::list<Goal<Raven_Bot> *,std::allocator<Goal<Raven_Bot> *> >::end
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\list
;	COMDAT ?end@?$list@PAV?$Goal@VRaven_Bot@@@@V?$allocator@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
?end@?$list@PAV?$Goal@VRaven_Bot@@@@V?$allocator@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@2@XZ PROC ; std::list<Goal<Raven_Bot> *,std::allocator<Goal<Raven_Bot> *> >::end, COMDAT
; _this$ = ecx

; 1038 :     _NODISCARD iterator end() noexcept { // return iterator for end of mutable sequence

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?end@?$list@PAV?$Goal@VRaven_Bot@@@@V?$allocator@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@2@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 1039 :         return iterator(_Mypair._Myval2._Myhead, _STD addressof(_Mypair._Myval2));

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??$addressof@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@YAPAV?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@0@AAV10@@Z ; std::addressof<std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> > >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@QAE@PAU?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@1@PBV?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@1@@Z ; std::_List_iterator<std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> > >::_List_iterator<std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1040 :     }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?end@?$list@PAV?$Goal@VRaven_Bot@@@@V?$allocator@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@2@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?end@?$list@PAV?$Goal@VRaven_Bot@@@@V?$allocator@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@2@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?end@?$list@PAV?$Goal@VRaven_Bot@@@@V?$allocator@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@2@XZ ENDP ; std::list<Goal<Raven_Bot> *,std::allocator<Goal<Raven_Bot> *> >::end
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\list
;	COMDAT ?begin@?$list@PAV?$Goal@VRaven_Bot@@@@V?$allocator@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@QBE?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
?begin@?$list@PAV?$Goal@VRaven_Bot@@@@V?$allocator@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@QBE?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@2@XZ PROC ; std::list<Goal<Raven_Bot> *,std::allocator<Goal<Raven_Bot> *> >::begin, COMDAT
; _this$ = ecx

; 1034 :     _NODISCARD const_iterator begin() const noexcept { // return iterator for beginning of nonmutable sequence

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?begin@?$list@PAV?$Goal@VRaven_Bot@@@@V?$allocator@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@QBE?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@2@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 1035 :         return const_iterator(_Mypair._Myval2._Myhead->_Next, _STD addressof(_Mypair._Myval2));

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??$addressof@$$CBV?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@YAPBV?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@0@ABV10@@Z ; std::addressof<std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> > const >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@QAE@PAU?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@1@PBV?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@1@@Z ; std::_List_const_iterator<std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> > >::_List_const_iterator<std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1036 :     }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?begin@?$list@PAV?$Goal@VRaven_Bot@@@@V?$allocator@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@QBE?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@2@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?begin@?$list@PAV?$Goal@VRaven_Bot@@@@V?$allocator@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@QBE?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@2@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?begin@?$list@PAV?$Goal@VRaven_Bot@@@@V?$allocator@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@QBE?AV?$_List_const_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@2@XZ ENDP ; std::list<Goal<Raven_Bot> *,std::allocator<Goal<Raven_Bot> *> >::begin
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\list
;	COMDAT ?begin@?$list@PAV?$Goal@VRaven_Bot@@@@V?$allocator@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
___$ReturnUdt$ = 8					; size = 4
?begin@?$list@PAV?$Goal@VRaven_Bot@@@@V?$allocator@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@2@XZ PROC ; std::list<Goal<Raven_Bot> *,std::allocator<Goal<Raven_Bot> *> >::begin, COMDAT
; _this$ = ecx

; 1030 :     _NODISCARD iterator begin() noexcept { // return iterator for beginning of mutable sequence

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?begin@?$list@PAV?$Goal@VRaven_Bot@@@@V?$allocator@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@2@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 1031 :         return iterator(_Mypair._Myval2._Myhead->_Next, _STD addressof(_Mypair._Myval2));

	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??$addressof@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@YAPAV?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@0@AAV10@@Z ; std::addressof<std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> > >
	add	esp, 4
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0?$_List_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@std@@QAE@PAU?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@1@PBV?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@1@@Z ; std::_List_iterator<std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> > >::_List_iterator<std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> > >
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 1032 :     }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?begin@?$list@PAV?$Goal@VRaven_Bot@@@@V?$allocator@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@2@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?begin@?$list@PAV?$Goal@VRaven_Bot@@@@V?$allocator@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@2@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?begin@?$list@PAV?$Goal@VRaven_Bot@@@@V?$allocator@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@QAE?AV?$_List_iterator@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@@2@XZ ENDP ; std::list<Goal<Raven_Bot> *,std::allocator<Goal<Raven_Bot> *> >::begin
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\list
;	COMDAT ??1?$list@PAV?$Goal@VRaven_Bot@@@@V?$allocator@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_$S22$ = -13						; size = 1
__Alproxy$ = -8						; size = 4
_this$ = -4						; size = 4
??1?$list@PAV?$Goal@VRaven_Bot@@@@V?$allocator@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@QAE@XZ PROC ; std::list<Goal<Raven_Bot> *,std::allocator<Goal<Raven_Bot> *> >::~list<Goal<Raven_Bot> *,std::allocator<Goal<Raven_Bot> *> >, COMDAT
; _this$ = ecx

; 984  :     ~list() noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx

; 985  :         _Tidy();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy@?$list@PAV?$Goal@VRaven_Bot@@@@V?$allocator@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@AAEXXZ ; std::list<Goal<Raven_Bot> *,std::allocator<Goal<Raven_Bot> *> >::_Tidy

; 986  : #if _ITERATOR_DEBUG_LEVEL != 0 // TRANSITION, ABI
; 987  :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alnode, _Getal());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$list@PAV?$Goal@VRaven_Bot@@@@V?$allocator@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@AAEAAV?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@2@XZ ; std::list<Goal<Raven_Bot> *,std::allocator<Goal<Raven_Bot> *> >::_Getal
	push	eax
	lea	ecx, DWORD PTR _$S22$[ebp]
	call	??$?0U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::_List_node<Goal<Raven_Bot> *,void *> >
	lea	eax, DWORD PTR _$S22$[ebp]
	mov	DWORD PTR __Alproxy$[ebp], eax

; 988  :         _Delete_plain_internal(_Alproxy, _Mypair._Myval2._Myproxy);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	eax, DWORD PTR __Alproxy$[ebp]
	push	eax
	call	??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@QAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
	add	esp, 8

; 989  : #endif /* _ITERATOR_DEBUG_LEVEL != 0 */
; 990  :     }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@list
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN5@list:
	DD	1
	DD	$LN4@list
$LN4@list:
	DD	-13					; fffffff3H
	DD	1
	DD	$LN3@list
$LN3@list:
	DB	36					; 00000024H
	DB	83					; 00000053H
	DB	50					; 00000032H
	DB	50					; 00000032H
	DB	0
??1?$list@PAV?$Goal@VRaven_Bot@@@@V?$allocator@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@QAE@XZ ENDP ; std::list<Goal<Raven_Bot> *,std::allocator<Goal<Raven_Bot> *> >::~list<Goal<Raven_Bot> *,std::allocator<Goal<Raven_Bot> *> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\list
;	COMDAT ??0?$list@PAV?$Goal@VRaven_Bot@@@@V?$allocator@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
$T1 = -5						; size = 1
_this$ = -4						; size = 4
??0?$list@PAV?$Goal@VRaven_Bot@@@@V?$allocator@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@QAE@XZ PROC ; std::list<Goal<Raven_Bot> *,std::allocator<Goal<Raven_Bot> *> >::list<Goal<Raven_Bot> *,std::allocator<Goal<Raven_Bot> *> >, COMDAT
; _this$ = ecx

; 736  :     list() : _Mypair(_Zero_then_variadic_args_t()) { // construct empty list

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	movzx	eax, BYTE PTR $T1[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??$?0$$V@?$_Compressed_pair@V?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@std@@V?$_List_val@U?$_List_simple_types@PAV?$Goal@VRaven_Bot@@@@@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<std::_List_node<Goal<Raven_Bot> *,void *> >,std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> >,1>::_Compressed_pair<std::allocator<std::_List_node<Goal<Raven_Bot> *,void *> >,std::_List_val<std::_List_simple_types<Goal<Raven_Bot> *> >,1><>

; 737  :         _Alloc_sentinel_and_proxy();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Alloc_sentinel_and_proxy@?$list@PAV?$Goal@VRaven_Bot@@@@V?$allocator@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@AAEXXZ ; std::list<Goal<Raven_Bot> *,std::allocator<Goal<Raven_Bot> *> >::_Alloc_sentinel_and_proxy

; 738  :     }

	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$list@PAV?$Goal@VRaven_Bot@@@@V?$allocator@PAV?$Goal@VRaven_Bot@@@@@std@@@std@@QAE@XZ ENDP ; std::list<Goal<Raven_Bot> *,std::allocator<Goal<Raven_Bot> *> >::list<Goal<Raven_Bot> *,std::allocator<Goal<Raven_Bot> *> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?max_size@?$_Default_allocator_traits@V?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@std@@@std@@SAIABV?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@2@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?max_size@?$_Default_allocator_traits@V?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@std@@@std@@SAIABV?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@2@@Z PROC ; std::_Default_allocator_traits<std::allocator<std::_List_node<Goal<Raven_Bot> *,void *> > >::max_size, COMDAT

; 766  :     _NODISCARD static size_type max_size(const _Alloc&) noexcept {

	push	ebp
	mov	ebp, esp

; 767  :         return static_cast<size_t>(-1) / sizeof(value_type);

	mov	eax, 357913941				; 15555555H

; 768  :     }

	pop	ebp
	ret	0
?max_size@?$_Default_allocator_traits@V?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@std@@@std@@SAIABV?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@2@@Z ENDP ; std::_Default_allocator_traits<std::allocator<std::_List_node<Goal<Raven_Bot> *,void *> > >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?deallocate@?$_Default_allocator_traits@V?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@2@QAU?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@2@I@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
__Ptr$ = 12						; size = 4
__Count$ = 16						; size = 4
?deallocate@?$_Default_allocator_traits@V?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@2@QAU?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@2@I@Z PROC ; std::_Default_allocator_traits<std::allocator<std::_List_node<Goal<Raven_Bot> *,void *> > >::deallocate, COMDAT

; 751  :     static void deallocate(_Alloc&, const pointer _Ptr, const size_type _Count) {

	push	ebp
	mov	ebp, esp

; 752  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 753  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

	imul	eax, DWORD PTR __Count$[ebp], 12
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	call	??$_Deallocate@$07$0A@@std@@YAXPAXI@Z	; std::_Deallocate<8,0>
	add	esp, 8

; 754  :     }

	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
?deallocate@?$_Default_allocator_traits@V?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@std@@@std@@SAXAAV?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@2@QAU?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@2@I@Z ENDP ; std::_Default_allocator_traits<std::allocator<std::_List_node<Goal<Raven_Bot> *,void *> > >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?allocate@?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@std@@QAEPAU?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@std@@QAEPAU?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@2@I@Z PROC ; std::allocator<std::_List_node<Goal<Raven_Bot> *,void *> >::allocate, COMDAT
; _this$ = ecx

; 870  :     _NODISCARD _DECLSPEC_ALLOCATOR _Ty* allocate(_CRT_GUARDOVERFLOW const size_t _Count) {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 871  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	call	??$_Get_size_of_n@$0M@@std@@YAII@Z	; std::_Get_size_of_n<12>
	add	esp, 4
	push	eax
	call	??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
	add	esp, 4

; 872  :     }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?allocate@?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@std@@QAEPAU?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@2@I@Z ENDP ; std::allocator<std::_List_node<Goal<Raven_Bot> *,void *> >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?deallocate@?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@std@@QAEXQAU?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@2@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@std@@QAEXQAU?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@2@I@Z PROC ; std::allocator<std::_List_node<Goal<Raven_Bot> *,void *> >::deallocate, COMDAT
; _this$ = ecx

; 865  :     void deallocate(_Ty* const _Ptr, const size_t _Count) {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 866  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 867  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	imul	eax, DWORD PTR __Count$[ebp], 12
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	call	??$_Deallocate@$07$0A@@std@@YAXPAXI@Z	; std::_Deallocate<8,0>
	add	esp, 8

; 868  :     }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@std@@QAEXQAU?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@2@I@Z ENDP ; std::allocator<std::_List_node<Goal<Raven_Bot> *,void *> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??0?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@std@@QAE@XZ PROC ; std::allocator<std::_List_node<Goal<Raven_Bot> *,void *> >::allocator<std::_List_node<Goal<Raven_Bot> *,void *> >, COMDAT
; _this$ = ecx

; 859  :     constexpr allocator() noexcept {}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0?$allocator@U?$_List_node@PAV?$Goal@VRaven_Bot@@@@PAX@std@@@std@@QAE@XZ ENDP ; std::allocator<std::_List_node<Goal<Raven_Bot> *,void *> >::allocator<std::_List_node<Goal<Raven_Bot> *,void *> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_G?$Goal@VRaven_Bot@@@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_G?$Goal@VRaven_Bot@@@@UAEPAXI@Z PROC			; Goal<Raven_Bot>::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$Goal@VRaven_Bot@@@@UAE@XZ		; Goal<Raven_Bot>::~Goal<Raven_Bot>
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@scalar
	push	16					; 00000010H
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
$LN2@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_G?$Goal@VRaven_Bot@@@@UAEPAXI@Z ENDP			; Goal<Raven_Bot>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\Réseau neuronnes - Projet Raven\Réseau\solution_lab_apprentissage_a_partir_bot\solution_lab_apprentissage_a_partir_bot\Common\Goals\Goal.h
;	COMDAT ?Render@?$Goal@VRaven_Bot@@@@UAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Render@?$Goal@VRaven_Bot@@@@UAEXXZ PROC		; Goal<Raven_Bot>::Render, COMDAT
; _this$ = ecx

; 93   :   virtual void Render(){}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	0
?Render@?$Goal@VRaven_Bot@@@@UAEXXZ ENDP		; Goal<Raven_Bot>::Render
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\Réseau neuronnes - Projet Raven\Réseau\solution_lab_apprentissage_a_partir_bot\solution_lab_apprentissage_a_partir_bot\Common\Goals\Goal.h
;	COMDAT ?RenderAtPos@?$Goal@VRaven_Bot@@@@UBEXAAUVector2D@@PAVTypeToString@@@Z
_TEXT	SEGMENT
tv155 = -56						; size = 4
tv156 = -52						; size = 4
$T2 = -48						; size = 28
_this$ = -20						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_pos$ = 8						; size = 4
_tts$ = 12						; size = 4
?RenderAtPos@?$Goal@VRaven_Bot@@@@UBEXAAUVector2D@@PAVTypeToString@@@Z PROC ; Goal<Raven_Bot>::RenderAtPos, COMDAT
; _this$ = ecx

; 123  : {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?RenderAtPos@?$Goal@VRaven_Bot@@@@UBEXAAUVector2D@@PAVTypeToString@@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 44					; 0000002cH
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-56]
	mov	ecx, 11					; 0000000bH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 124  :   pos.y += 15;

	mov	eax, DWORD PTR _pos$[ebp]
	movsd	xmm0, QWORD PTR [eax+8]
	addsd	xmm0, QWORD PTR __real@402e000000000000
	mov	ecx, DWORD PTR _pos$[ebp]
	movsd	QWORD PTR [ecx+8], xmm0

; 125  :   gdi->TransparentText();

	call	?Instance@Cgdi@@SAPAV1@XZ		; Cgdi::Instance
	mov	ecx, eax
	call	?TransparentText@Cgdi@@QAEXXZ		; Cgdi::TransparentText

; 126  :   if (isComplete()) gdi->TextColor(0,255,0);

	mov	ecx, DWORD PTR _this$[ebp]
	call	?isComplete@?$Goal@VRaven_Bot@@@@QBE_NXZ ; Goal<Raven_Bot>::isComplete
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN2@RenderAtPo
	push	0
	push	255					; 000000ffH
	push	0
	call	?Instance@Cgdi@@SAPAV1@XZ		; Cgdi::Instance
	mov	ecx, eax
	call	?TextColor@Cgdi@@QAEXHHH@Z		; Cgdi::TextColor
$LN2@RenderAtPo:

; 127  :   if (isInactive()) gdi->TextColor(0,0,0);

	mov	ecx, DWORD PTR _this$[ebp]
	call	?isInactive@?$Goal@VRaven_Bot@@@@QBE_NXZ ; Goal<Raven_Bot>::isInactive
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN3@RenderAtPo
	push	0
	push	0
	push	0
	call	?Instance@Cgdi@@SAPAV1@XZ		; Cgdi::Instance
	mov	ecx, eax
	call	?TextColor@Cgdi@@QAEXHHH@Z		; Cgdi::TextColor
$LN3@RenderAtPo:

; 128  :   if (hasFailed()) gdi->TextColor(255,0,0);

	mov	ecx, DWORD PTR _this$[ebp]
	call	?hasFailed@?$Goal@VRaven_Bot@@@@QBE_NXZ	; Goal<Raven_Bot>::hasFailed
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN4@RenderAtPo
	push	0
	push	0
	push	255					; 000000ffH
	call	?Instance@Cgdi@@SAPAV1@XZ		; Cgdi::Instance
	mov	ecx, eax
	call	?TextColor@Cgdi@@QAEXHHH@Z		; Cgdi::TextColor
$LN4@RenderAtPo:

; 129  :   if (isActive()) gdi->TextColor(0,0,255);

	mov	ecx, DWORD PTR _this$[ebp]
	call	?isActive@?$Goal@VRaven_Bot@@@@QBE_NXZ	; Goal<Raven_Bot>::isActive
	movzx	edx, al
	test	edx, edx
	je	SHORT $LN5@RenderAtPo
	push	255					; 000000ffH
	push	0
	push	0
	call	?Instance@Cgdi@@SAPAV1@XZ		; Cgdi::Instance
	mov	ecx, eax
	call	?TextColor@Cgdi@@QAEXHHH@Z		; Cgdi::TextColor
$LN5@RenderAtPo:

; 130  : 
; 131  :   gdi->TextAtPos(pos.x, pos.y, tts->Convert(GetType())); 

	mov	ecx, DWORD PTR _this$[ebp]
	call	?GetType@?$Goal@VRaven_Bot@@@@QBEHXZ	; Goal<Raven_Bot>::GetType
	mov	esi, esp
	push	eax
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	mov	ecx, DWORD PTR _tts$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _tts$[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR tv156[ebp], eax
	mov	ecx, DWORD PTR tv156[ebp]
	mov	DWORD PTR tv155[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	edx, DWORD PTR tv155[ebp]
	push	edx
	mov	eax, DWORD PTR _pos$[ebp]
	sub	esp, 8
	movsd	xmm0, QWORD PTR [eax+8]
	movsd	QWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _pos$[ebp]
	sub	esp, 8
	movsd	xmm0, QWORD PTR [ecx]
	movsd	QWORD PTR [esp], xmm0
	call	?Instance@Cgdi@@SAPAV1@XZ		; Cgdi::Instance
	mov	ecx, eax
	call	?TextAtPos@Cgdi@@QAEXNNABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ; Cgdi::TextAtPos
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR $T2[ebp]
	call	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

; 132  : }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 56					; 00000038H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?RenderAtPos@?$Goal@VRaven_Bot@@@@UBEXAAUVector2D@@PAVTypeToString@@@Z$0:
	lea	ecx, DWORD PTR $T2[ebp]
	jmp	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
__ehhandler$?RenderAtPos@?$Goal@VRaven_Bot@@@@UBEXAAUVector2D@@PAVTypeToString@@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-56]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?RenderAtPos@?$Goal@VRaven_Bot@@@@UBEXAAUVector2D@@PAVTypeToString@@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?RenderAtPos@?$Goal@VRaven_Bot@@@@UBEXAAUVector2D@@PAVTypeToString@@@Z ENDP ; Goal<Raven_Bot>::RenderAtPos
; Function compile flags: /Odtp /RTCsu
; File D:\Réseau neuronnes - Projet Raven\Réseau\solution_lab_apprentissage_a_partir_bot\solution_lab_apprentissage_a_partir_bot\Common\Goals\Goal.h
;	COMDAT ?GetType@?$Goal@VRaven_Bot@@@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetType@?$Goal@VRaven_Bot@@@@QBEHXZ PROC		; Goal<Raven_Bot>::GetType, COMDAT
; _this$ = ecx

; 84   :   int          GetType()const{return m_iType;}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+4]
	mov	esp, ebp
	pop	ebp
	ret	0
?GetType@?$Goal@VRaven_Bot@@@@QBEHXZ ENDP		; Goal<Raven_Bot>::GetType
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\Réseau neuronnes - Projet Raven\Réseau\solution_lab_apprentissage_a_partir_bot\solution_lab_apprentissage_a_partir_bot\Common\Goals\Goal.h
;	COMDAT ?hasFailed@?$Goal@VRaven_Bot@@@@QBE_NXZ
_TEXT	SEGMENT
tv66 = -8						; size = 4
_this$ = -4						; size = 4
?hasFailed@?$Goal@VRaven_Bot@@@@QBE_NXZ PROC		; Goal<Raven_Bot>::hasFailed, COMDAT
; _this$ = ecx

; 83   :   bool         hasFailed()const{return m_iStatus == failed;}

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+12], 3
	jne	SHORT $LN3@hasFailed
	mov	DWORD PTR tv66[ebp], 1
	jmp	SHORT $LN4@hasFailed
$LN3@hasFailed:
	mov	DWORD PTR tv66[ebp], 0
$LN4@hasFailed:
	mov	al, BYTE PTR tv66[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
?hasFailed@?$Goal@VRaven_Bot@@@@QBE_NXZ ENDP		; Goal<Raven_Bot>::hasFailed
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\Réseau neuronnes - Projet Raven\Réseau\solution_lab_apprentissage_a_partir_bot\solution_lab_apprentissage_a_partir_bot\Common\Goals\Goal.h
;	COMDAT ?isInactive@?$Goal@VRaven_Bot@@@@QBE_NXZ
_TEXT	SEGMENT
tv66 = -8						; size = 4
_this$ = -4						; size = 4
?isInactive@?$Goal@VRaven_Bot@@@@QBE_NXZ PROC		; Goal<Raven_Bot>::isInactive, COMDAT
; _this$ = ecx

; 82   :   bool         isInactive()const{return m_iStatus == inactive;}

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+12], 1
	jne	SHORT $LN3@isInactive
	mov	DWORD PTR tv66[ebp], 1
	jmp	SHORT $LN4@isInactive
$LN3@isInactive:
	mov	DWORD PTR tv66[ebp], 0
$LN4@isInactive:
	mov	al, BYTE PTR tv66[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
?isInactive@?$Goal@VRaven_Bot@@@@QBE_NXZ ENDP		; Goal<Raven_Bot>::isInactive
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\Réseau neuronnes - Projet Raven\Réseau\solution_lab_apprentissage_a_partir_bot\solution_lab_apprentissage_a_partir_bot\Common\Goals\Goal.h
;	COMDAT ?isActive@?$Goal@VRaven_Bot@@@@QBE_NXZ
_TEXT	SEGMENT
tv66 = -8						; size = 4
_this$ = -4						; size = 4
?isActive@?$Goal@VRaven_Bot@@@@QBE_NXZ PROC		; Goal<Raven_Bot>::isActive, COMDAT
; _this$ = ecx

; 81   :   bool         isActive()const{return m_iStatus == active;}

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+12], 0
	jne	SHORT $LN3@isActive
	mov	DWORD PTR tv66[ebp], 1
	jmp	SHORT $LN4@isActive
$LN3@isActive:
	mov	DWORD PTR tv66[ebp], 0
$LN4@isActive:
	mov	al, BYTE PTR tv66[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
?isActive@?$Goal@VRaven_Bot@@@@QBE_NXZ ENDP		; Goal<Raven_Bot>::isActive
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\Réseau neuronnes - Projet Raven\Réseau\solution_lab_apprentissage_a_partir_bot\solution_lab_apprentissage_a_partir_bot\Common\Goals\Goal.h
;	COMDAT ?isComplete@?$Goal@VRaven_Bot@@@@QBE_NXZ
_TEXT	SEGMENT
tv66 = -8						; size = 4
_this$ = -4						; size = 4
?isComplete@?$Goal@VRaven_Bot@@@@QBE_NXZ PROC		; Goal<Raven_Bot>::isComplete, COMDAT
; _this$ = ecx

; 80   :   bool         isComplete()const{return m_iStatus == completed;} 

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+12], 2
	jne	SHORT $LN3@isComplete
	mov	DWORD PTR tv66[ebp], 1
	jmp	SHORT $LN4@isComplete
$LN3@isComplete:
	mov	DWORD PTR tv66[ebp], 0
$LN4@isComplete:
	mov	al, BYTE PTR tv66[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
?isComplete@?$Goal@VRaven_Bot@@@@QBE_NXZ ENDP		; Goal<Raven_Bot>::isComplete
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\Réseau neuronnes - Projet Raven\Réseau\solution_lab_apprentissage_a_partir_bot\solution_lab_apprentissage_a_partir_bot\Common\Goals\Goal.h
;	COMDAT ?AddSubgoal@?$Goal@VRaven_Bot@@@@UAEXPAV1@@Z
_TEXT	SEGMENT
$T1 = -16						; size = 12
_this$ = -4						; size = 4
_g$ = 8							; size = 4
?AddSubgoal@?$Goal@VRaven_Bot@@@@UAEXPAV1@@Z PROC	; Goal<Raven_Bot>::AddSubgoal, COMDAT
; _this$ = ecx

; 77   :   {throw std::runtime_error("Cannot add goals to atomic goals");}

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	push	OFFSET ??_C@_0CB@OHIHCHGJ@Cannot?5add?5goals?5to?5atomic?5goal@
	lea	ecx, DWORD PTR $T1[ebp]
	call	??0runtime_error@std@@QAE@PBD@Z		; std::runtime_error::runtime_error
	push	OFFSET __TI2?AVruntime_error@std@@
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	call	__CxxThrowException@8
$LN2@AddSubgoal:
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?AddSubgoal@?$Goal@VRaven_Bot@@@@UAEXPAV1@@Z ENDP	; Goal<Raven_Bot>::AddSubgoal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\Réseau neuronnes - Projet Raven\Réseau\solution_lab_apprentissage_a_partir_bot\solution_lab_apprentissage_a_partir_bot\Common\Goals\Goal.h
;	COMDAT ?HandleMessage@?$Goal@VRaven_Bot@@@@UAE_NABUTelegram@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_msg$ = 8						; size = 4
?HandleMessage@?$Goal@VRaven_Bot@@@@UAE_NABUTelegram@@@Z PROC ; Goal<Raven_Bot>::HandleMessage, COMDAT
; _this$ = ecx

; 70   :   virtual bool HandleMessage(const Telegram& msg){return false;}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	xor	al, al
	mov	esp, ebp
	pop	ebp
	ret	4
?HandleMessage@?$Goal@VRaven_Bot@@@@UAE_NABUTelegram@@@Z ENDP ; Goal<Raven_Bot>::HandleMessage
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\Réseau neuronnes - Projet Raven\Réseau\solution_lab_apprentissage_a_partir_bot\solution_lab_apprentissage_a_partir_bot\Common\Goals\Goal.h
;	COMDAT ??1?$Goal@VRaven_Bot@@@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$Goal@VRaven_Bot@@@@UAE@XZ PROC			; Goal<Raven_Bot>::~Goal<Raven_Bot>, COMDAT
; _this$ = ecx

; 56   :   virtual ~Goal(){}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$Goal@VRaven_Bot@@@@6B@
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$Goal@VRaven_Bot@@@@UAE@XZ ENDP			; Goal<Raven_Bot>::~Goal<Raven_Bot>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\Réseau neuronnes - Projet Raven\Réseau\solution_lab_apprentissage_a_partir_bot\solution_lab_apprentissage_a_partir_bot\Common\Goals\Goal.h
;	COMDAT ??0?$Goal@VRaven_Bot@@@@QAE@PAVRaven_Bot@@H@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pE$ = 8						; size = 4
_type$ = 12						; size = 4
??0?$Goal@VRaven_Bot@@@@QAE@PAVRaven_Bot@@H@Z PROC	; Goal<Raven_Bot>::Goal<Raven_Bot>, COMDAT
; _this$ = ecx

; 54   :   {}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7?$Goal@VRaven_Bot@@@@6B@

; 51   :   Goal(entity_type*  pE, int type):m_iType(type),

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _type$[ebp]
	mov	DWORD PTR [ecx+4], edx

; 52   :                                    m_pOwner(pE),

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _pE$[ebp]
	mov	DWORD PTR [eax+8], ecx

; 53   :                                    m_iStatus(inactive)

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+12], 1

; 54   :   {}

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0?$Goal@VRaven_Bot@@@@QAE@PAVRaven_Bot@@H@Z ENDP	; Goal<Raven_Bot>::Goal<Raven_Bot>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\Réseau neuronnes - Projet Raven\Réseau\solution_lab_apprentissage_a_partir_bot\solution_lab_apprentissage_a_partir_bot\Common\Goals\Goal.h
;	COMDAT ?ActivateIfInactive@?$Goal@VRaven_Bot@@@@IAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?ActivateIfInactive@?$Goal@VRaven_Bot@@@@IAEXXZ PROC	; Goal<Raven_Bot>::ActivateIfInactive, COMDAT
; _this$ = ecx

; 114  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 115  :   if (isInactive())

	mov	ecx, DWORD PTR _this$[ebp]
	call	?isInactive@?$Goal@VRaven_Bot@@@@QBE_NXZ ; Goal<Raven_Bot>::isInactive
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN1@ActivateIf

; 116  :   {
; 117  :     Activate();   

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@ActivateIf:

; 118  :   }
; 119  : }

	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?ActivateIfInactive@?$Goal@VRaven_Bot@@@@IAEXXZ ENDP	; Goal<Raven_Bot>::ActivateIfInactive
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\Réseau neuronnes - Projet Raven\Réseau\solution_lab_apprentissage_a_partir_bot\solution_lab_apprentissage_a_partir_bot\Buckland_Chapter7 to 10_Raven_apprentissage\navigation\PathEdge.h
;	COMDAT ?Behavior@PathEdge@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Behavior@PathEdge@@QBEHXZ PROC				; PathEdge::Behavior, COMDAT
; _this$ = ecx

; 46   :   int      Behavior()const{return m_iBehavior;}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+32]
	mov	esp, ebp
	pop	ebp
	ret	0
?Behavior@PathEdge@@QBEHXZ ENDP				; PathEdge::Behavior
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\Réseau neuronnes - Projet Raven\Réseau\solution_lab_apprentissage_a_partir_bot\solution_lab_apprentissage_a_partir_bot\Buckland_Chapter7 to 10_Raven_apprentissage\navigation\PathEdge.h
;	COMDAT ?Source@PathEdge@@QBE?AUVector2D@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?Source@PathEdge@@QBE?AUVector2D@@XZ PROC		; PathEdge::Source, COMDAT
; _this$ = ecx

; 42   :   Vector2D Source()const{return m_vSource;}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+4], edx
	mov	edx, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+8], edx
	mov	eax, DWORD PTR [eax+12]
	mov	DWORD PTR [ecx+12], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
?Source@PathEdge@@QBE?AUVector2D@@XZ ENDP		; PathEdge::Source
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\Réseau neuronnes - Projet Raven\Réseau\solution_lab_apprentissage_a_partir_bot\solution_lab_apprentissage_a_partir_bot\Buckland_Chapter7 to 10_Raven_apprentissage\navigation\PathEdge.h
;	COMDAT ?Destination@PathEdge@@QBE?AUVector2D@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?Destination@PathEdge@@QBE?AUVector2D@@XZ PROC		; PathEdge::Destination, COMDAT
; _this$ = ecx

; 39   :   Vector2D Destination()const{return m_vDestination;}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 16					; 00000010H
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+4], edx
	mov	edx, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+8], edx
	mov	eax, DWORD PTR [eax+12]
	mov	DWORD PTR [ecx+12], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
?Destination@PathEdge@@QBE?AUVector2D@@XZ ENDP		; PathEdge::Destination
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\Réseau neuronnes - Projet Raven\Réseau\solution_lab_apprentissage_a_partir_bot\solution_lab_apprentissage_a_partir_bot\Common\misc\cgdi.h
;	COMDAT ?Circle@Cgdi@@QAEXUVector2D@@N@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_pos$ = 8						; size = 16
_radius$ = 24						; size = 8
?Circle@Cgdi@@QAEXUVector2D@@N@Z PROC			; Cgdi::Circle, COMDAT
; _this$ = ecx

; 338  :   {

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 339  :     Ellipse(m_hdc,

	movsd	xmm0, QWORD PTR _pos$[ebp+8]
	addsd	xmm0, QWORD PTR _radius$[ebp]
	addsd	xmm0, QWORD PTR __real@3ff0000000000000
	cvttsd2si eax, xmm0
	mov	esi, esp
	push	eax
	movsd	xmm0, QWORD PTR _pos$[ebp]
	addsd	xmm0, QWORD PTR _radius$[ebp]
	addsd	xmm0, QWORD PTR __real@3ff0000000000000
	cvttsd2si ecx, xmm0
	push	ecx
	movsd	xmm0, QWORD PTR _pos$[ebp+8]
	subsd	xmm0, QWORD PTR _radius$[ebp]
	cvttsd2si edx, xmm0
	push	edx
	movsd	xmm0, QWORD PTR _pos$[ebp]
	subsd	xmm0, QWORD PTR _radius$[ebp]
	cvttsd2si eax, xmm0
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+124]
	push	edx
	call	DWORD PTR __imp__Ellipse@20
	cmp	esi, esp
	call	__RTC_CheckEsp

; 340  :            (int)(pos.x-radius),
; 341  :            (int)(pos.y-radius),
; 342  :            (int)(pos.x+radius+1),
; 343  :            (int)(pos.y+radius+1));
; 344  :   }

	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	24					; 00000018H
?Circle@Cgdi@@QAEXUVector2D@@N@Z ENDP			; Cgdi::Circle
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\Réseau neuronnes - Projet Raven\Réseau\solution_lab_apprentissage_a_partir_bot\solution_lab_apprentissage_a_partir_bot\Common\misc\cgdi.h
;	COMDAT ?LineWithArrow@Cgdi@@QAEXUVector2D@@0N@Z
_TEXT	SEGMENT
$T1 = -288						; size = 8
$T2 = -280						; size = 8
$T3 = -272						; size = 8
$T4 = -264						; size = 16
$T5 = -248						; size = 16
$T6 = -232						; size = 16
$T7 = -216						; size = 16
$T8 = -200						; size = 16
$T9 = -184						; size = 16
$T10 = -168						; size = 16
$T11 = -152						; size = 16
_p$ = -132						; size = 24
_ArrowPoint2$ = -100					; size = 16
_ArrowPoint1$ = -76					; size = 16
_CrossingPoint$ = -52					; size = 16
_norm$ = -28						; size = 16
_this$ = -8						; size = 4
__$ArrayPad$ = -4					; size = 4
_from$ = 8						; size = 16
_to$ = 24						; size = 16
_size$ = 40						; size = 8
?LineWithArrow@Cgdi@@QAEXUVector2D@@0N@Z PROC		; Cgdi::LineWithArrow, COMDAT
; _this$ = ecx

; 277  :   {

	push	ebp
	mov	ebp, esp
	sub	esp, 288				; 00000120H
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-288]
	mov	ecx, 72					; 00000048H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	DWORD PTR _this$[ebp], ecx

; 278  :     Vector2D norm = Vec2DNormalize(to-from);

	lea	eax, DWORD PTR _from$[ebp]
	push	eax
	lea	ecx, DWORD PTR _to$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T11[ebp]
	push	edx
	call	??G@YA?AUVector2D@@ABU0@0@Z		; operator-
	add	esp, 12					; 0000000cH
	push	eax
	lea	eax, DWORD PTR _norm$[ebp]
	push	eax
	call	?Vec2DNormalize@@YA?AUVector2D@@ABU1@@Z	; Vec2DNormalize
	add	esp, 8

; 279  : 
; 280  :     //calculate where the arrow is attached
; 281  :     Vector2D CrossingPoint = to - (norm * size);

	sub	esp, 8
	movsd	xmm0, QWORD PTR _size$[ebp]
	movsd	QWORD PTR [esp], xmm0
	lea	ecx, DWORD PTR _norm$[ebp]
	push	ecx
	lea	edx, DWORD PTR $T10[ebp]
	push	edx
	call	??D@YA?AUVector2D@@ABU0@N@Z		; operator*
	add	esp, 16					; 00000010H
	push	eax
	lea	eax, DWORD PTR _to$[ebp]
	push	eax
	lea	ecx, DWORD PTR _CrossingPoint$[ebp]
	push	ecx
	call	??G@YA?AUVector2D@@ABU0@0@Z		; operator-
	add	esp, 12					; 0000000cH

; 282  :     
; 283  :     //calculate the two extra points required to make the arrowhead
; 284  :     Vector2D ArrowPoint1 = CrossingPoint + (norm.Perp() * 0.4f * size); 

	sub	esp, 8
	movsd	xmm0, QWORD PTR _size$[ebp]
	movsd	QWORD PTR [esp], xmm0
	sub	esp, 8
	movsd	xmm0, QWORD PTR __real@3fd99999a0000000
	movsd	QWORD PTR [esp], xmm0
	lea	edx, DWORD PTR $T9[ebp]
	push	edx
	lea	ecx, DWORD PTR _norm$[ebp]
	call	?Perp@Vector2D@@QBE?AU1@XZ		; Vector2D::Perp
	push	eax
	lea	eax, DWORD PTR $T8[ebp]
	push	eax
	call	??D@YA?AUVector2D@@ABU0@N@Z		; operator*
	add	esp, 16					; 00000010H
	push	eax
	lea	ecx, DWORD PTR $T7[ebp]
	push	ecx
	call	??D@YA?AUVector2D@@ABU0@N@Z		; operator*
	add	esp, 16					; 00000010H
	push	eax
	lea	edx, DWORD PTR _CrossingPoint$[ebp]
	push	edx
	lea	eax, DWORD PTR _ArrowPoint1$[ebp]
	push	eax
	call	??H@YA?AUVector2D@@ABU0@0@Z		; operator+
	add	esp, 12					; 0000000cH

; 285  :     Vector2D ArrowPoint2 = CrossingPoint - (norm.Perp() * 0.4f * size); 

	sub	esp, 8
	movsd	xmm0, QWORD PTR _size$[ebp]
	movsd	QWORD PTR [esp], xmm0
	sub	esp, 8
	movsd	xmm0, QWORD PTR __real@3fd99999a0000000
	movsd	QWORD PTR [esp], xmm0
	lea	ecx, DWORD PTR $T6[ebp]
	push	ecx
	lea	ecx, DWORD PTR _norm$[ebp]
	call	?Perp@Vector2D@@QBE?AU1@XZ		; Vector2D::Perp
	push	eax
	lea	edx, DWORD PTR $T5[ebp]
	push	edx
	call	??D@YA?AUVector2D@@ABU0@N@Z		; operator*
	add	esp, 16					; 00000010H
	push	eax
	lea	eax, DWORD PTR $T4[ebp]
	push	eax
	call	??D@YA?AUVector2D@@ABU0@N@Z		; operator*
	add	esp, 16					; 00000010H
	push	eax
	lea	ecx, DWORD PTR _CrossingPoint$[ebp]
	push	ecx
	lea	edx, DWORD PTR _ArrowPoint2$[ebp]
	push	edx
	call	??G@YA?AUVector2D@@ABU0@0@Z		; operator-
	add	esp, 12					; 0000000cH

; 286  : 
; 287  :     //draw the line
; 288  :     MoveToEx(m_hdc, (int)from.x, (int)from.y, NULL);

	mov	esi, esp
	push	0
	cvttsd2si eax, QWORD PTR _from$[ebp+8]
	push	eax
	cvttsd2si ecx, QWORD PTR _from$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+124]
	push	eax
	call	DWORD PTR __imp__MoveToEx@16
	cmp	esi, esp
	call	__RTC_CheckEsp

; 289  :     LineTo(m_hdc, (int)CrossingPoint.x, (int)CrossingPoint.y);

	cvttsd2si ecx, QWORD PTR _CrossingPoint$[ebp+8]
	mov	esi, esp
	push	ecx
	cvttsd2si edx, QWORD PTR _CrossingPoint$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+124]
	push	ecx
	call	DWORD PTR __imp__LineTo@12
	cmp	esi, esp
	call	__RTC_CheckEsp

; 290  : 
; 291  :     //draw the arrowhead (filled with the currently selected brush)
; 292  :     POINT p[3];
; 293  :     
; 294  :     p[0] = VectorToPOINT(ArrowPoint1);

	lea	edx, DWORD PTR _ArrowPoint1$[ebp]
	push	edx
	call	?VectorToPOINT@@YA?AUtagPOINT@@ABUVector2D@@@Z ; VectorToPOINT
	add	esp, 4
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR $T3[ebp+4], edx
	mov	eax, 8
	imul	ecx, eax, 0
	mov	edx, DWORD PTR $T3[ebp]
	mov	DWORD PTR _p$[ebp+ecx], edx
	mov	eax, DWORD PTR $T3[ebp+4]
	mov	DWORD PTR _p$[ebp+ecx+4], eax

; 295  :     p[1] = VectorToPOINT(ArrowPoint2);

	lea	ecx, DWORD PTR _ArrowPoint2$[ebp]
	push	ecx
	call	?VectorToPOINT@@YA?AUtagPOINT@@ABUVector2D@@@Z ; VectorToPOINT
	add	esp, 4
	mov	DWORD PTR $T2[ebp], eax
	mov	DWORD PTR $T2[ebp+4], edx
	mov	edx, 8
	shl	edx, 0
	mov	eax, DWORD PTR $T2[ebp]
	mov	DWORD PTR _p$[ebp+edx], eax
	mov	ecx, DWORD PTR $T2[ebp+4]
	mov	DWORD PTR _p$[ebp+edx+4], ecx

; 296  :     p[2] = VectorToPOINT(to);                  

	lea	edx, DWORD PTR _to$[ebp]
	push	edx
	call	?VectorToPOINT@@YA?AUtagPOINT@@ABUVector2D@@@Z ; VectorToPOINT
	add	esp, 4
	mov	DWORD PTR $T1[ebp], eax
	mov	DWORD PTR $T1[ebp+4], edx
	mov	eax, 8
	shl	eax, 1
	mov	ecx, DWORD PTR $T1[ebp]
	mov	DWORD PTR _p$[ebp+eax], ecx
	mov	edx, DWORD PTR $T1[ebp+4]
	mov	DWORD PTR _p$[ebp+eax+4], edx

; 297  :                        
; 298  :     SetPolyFillMode(m_hdc, WINDING);

	mov	esi, esp
	push	2
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+124]
	push	ecx
	call	DWORD PTR __imp__SetPolyFillMode@8
	cmp	esi, esp
	call	__RTC_CheckEsp

; 299  :     Polygon(m_hdc, p, 3);

	mov	esi, esp
	push	3
	lea	edx, DWORD PTR _p$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+124]
	push	ecx
	call	DWORD PTR __imp__Polygon@12
	cmp	esi, esp
	call	__RTC_CheckEsp

; 300  : 
; 301  :   }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@LineWithAr
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 288				; 00000120H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	40					; 00000028H
$LN9@LineWithAr:
	DD	5
	DD	$LN8@LineWithAr
$LN8@LineWithAr:
	DD	-28					; ffffffe4H
	DD	16					; 00000010H
	DD	$LN3@LineWithAr
	DD	-52					; ffffffccH
	DD	16					; 00000010H
	DD	$LN4@LineWithAr
	DD	-76					; ffffffb4H
	DD	16					; 00000010H
	DD	$LN5@LineWithAr
	DD	-100					; ffffff9cH
	DD	16					; 00000010H
	DD	$LN6@LineWithAr
	DD	-132					; ffffff7cH
	DD	24					; 00000018H
	DD	$LN7@LineWithAr
$LN7@LineWithAr:
	DB	112					; 00000070H
	DB	0
$LN6@LineWithAr:
	DB	65					; 00000041H
	DB	114					; 00000072H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	119					; 00000077H
	DB	80					; 00000050H
	DB	111					; 0000006fH
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	50					; 00000032H
	DB	0
$LN5@LineWithAr:
	DB	65					; 00000041H
	DB	114					; 00000072H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	119					; 00000077H
	DB	80					; 00000050H
	DB	111					; 0000006fH
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	49					; 00000031H
	DB	0
$LN4@LineWithAr:
	DB	67					; 00000043H
	DB	114					; 00000072H
	DB	111					; 0000006fH
	DB	115					; 00000073H
	DB	115					; 00000073H
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	103					; 00000067H
	DB	80					; 00000050H
	DB	111					; 0000006fH
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	0
$LN3@LineWithAr:
	DB	110					; 0000006eH
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	109					; 0000006dH
	DB	0
?LineWithArrow@Cgdi@@QAEXUVector2D@@0N@Z ENDP		; Cgdi::LineWithArrow
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\Réseau neuronnes - Projet Raven\Réseau\solution_lab_apprentissage_a_partir_bot\solution_lab_apprentissage_a_partir_bot\Common\misc\cgdi.h
;	COMDAT ?TextColor@Cgdi@@QAEXHHH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_r$ = 8							; size = 4
_g$ = 12						; size = 4
_b$ = 16						; size = 4
?TextColor@Cgdi@@QAEXHHH@Z PROC				; Cgdi::TextColor, COMDAT
; _this$ = ecx

; 227  :   void TextColor(int r, int g, int b){SetTextColor(m_hdc, RGB(r,g,b));}

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	movzx	eax, BYTE PTR _r$[ebp]
	movzx	ecx, BYTE PTR _g$[ebp]
	shl	ecx, 8
	or	eax, ecx
	movzx	edx, BYTE PTR _b$[ebp]
	shl	edx, 16					; 00000010H
	or	eax, edx
	mov	esi, esp
	push	eax
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+124]
	push	ecx
	call	DWORD PTR __imp__SetTextColor@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
?TextColor@Cgdi@@QAEXHHH@Z ENDP				; Cgdi::TextColor
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\Réseau neuronnes - Projet Raven\Réseau\solution_lab_apprentissage_a_partir_bot\solution_lab_apprentissage_a_partir_bot\Common\misc\cgdi.h
;	COMDAT ?TransparentText@Cgdi@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?TransparentText@Cgdi@@QAEXXZ PROC			; Cgdi::TransparentText, COMDAT
; _this$ = ecx

; 222  :   void TransparentText(){SetBkMode(m_hdc, TRANSPARENT);}

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	esi, esp
	push	1
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+124]
	push	ecx
	call	DWORD PTR __imp__SetBkMode@8
	cmp	esi, esp
	call	__RTC_CheckEsp
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?TransparentText@Cgdi@@QAEXXZ ENDP			; Cgdi::TransparentText
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\Réseau neuronnes - Projet Raven\Réseau\solution_lab_apprentissage_a_partir_bot\solution_lab_apprentissage_a_partir_bot\Common\misc\cgdi.h
;	COMDAT ?TextAtPos@Cgdi@@QAEXNNABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_x$ = 8							; size = 8
_y$ = 16						; size = 8
_s$ = 24						; size = 4
?TextAtPos@Cgdi@@QAEXNNABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z PROC ; Cgdi::TextAtPos, COMDAT
; _this$ = ecx

; 213  :   {

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 214  :     TextOut(m_hdc, (int)x, (int)y, s.c_str(), (int)s.size());

	mov	ecx, DWORD PTR _s$[ebp]
	call	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
	mov	esi, esp
	push	eax
	mov	ecx, DWORD PTR _s$[ebp]
	call	?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
	push	eax
	cvttsd2si eax, QWORD PTR _y$[ebp]
	push	eax
	cvttsd2si ecx, QWORD PTR _x$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+124]
	push	eax
	call	DWORD PTR __imp__TextOutA@20
	cmp	esi, esp
	call	__RTC_CheckEsp

; 215  :   }

	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?TextAtPos@Cgdi@@QAEXNNABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@Z ENDP ; Cgdi::TextAtPos
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\Réseau neuronnes - Projet Raven\Réseau\solution_lab_apprentissage_a_partir_bot\solution_lab_apprentissage_a_partir_bot\Common\misc\cgdi.h
;	COMDAT ?RedBrush@Cgdi@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?RedBrush@Cgdi@@QAEXXZ PROC				; Cgdi::RedBrush, COMDAT
; _this$ = ecx

; 163  :   void RedBrush()  {if(m_hdc)SelectObject(m_hdc, m_RedBrush);}

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+124], 0
	je	SHORT $LN1@RedBrush
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+88]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+124]
	push	ecx
	call	DWORD PTR __imp__SelectObject@8
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@RedBrush:
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?RedBrush@Cgdi@@QAEXXZ ENDP				; Cgdi::RedBrush
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\Réseau neuronnes - Projet Raven\Réseau\solution_lab_apprentissage_a_partir_bot\solution_lab_apprentissage_a_partir_bot\Common\misc\cgdi.h
;	COMDAT ?BlackPen@Cgdi@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?BlackPen@Cgdi@@QAEXXZ PROC				; Cgdi::BlackPen, COMDAT
; _this$ = ecx

; 136  :   void BlackPen(){if(m_hdc){SelectObject(m_hdc, m_BlackPen);}}

	push	ebp
	mov	ebp, esp
	push	ecx
	push	esi
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+124], 0
	je	SHORT $LN1@BlackPen
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+124]
	push	ecx
	call	DWORD PTR __imp__SelectObject@8
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@BlackPen:
	pop	esi
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?BlackPen@Cgdi@@QAEXXZ ENDP				; Cgdi::BlackPen
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\Réseau neuronnes - Projet Raven\Réseau\solution_lab_apprentissage_a_partir_bot\solution_lab_apprentissage_a_partir_bot\Common\2D\Vector2D.h
;	COMDAT ?VectorToPOINT@@YA?AUtagPOINT@@ABUVector2D@@@Z
_TEXT	SEGMENT
_p$ = -12						; size = 8
_v$ = 8							; size = 4
?VectorToPOINT@@YA?AUtagPOINT@@ABUVector2D@@@Z PROC	; VectorToPOINT, COMDAT

; 322  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax

; 323  :   POINT p;
; 324  :   p.x = (long)v.x;

	mov	eax, DWORD PTR _v$[ebp]
	cvttsd2si ecx, QWORD PTR [eax]
	mov	DWORD PTR _p$[ebp], ecx

; 325  :   p.y = (long)v.y;

	mov	edx, DWORD PTR _v$[ebp]
	cvttsd2si eax, QWORD PTR [edx+8]
	mov	DWORD PTR _p$[ebp+4], eax

; 326  : 
; 327  :   return p;

	mov	eax, DWORD PTR _p$[ebp]
	mov	edx, DWORD PTR _p$[ebp+4]

; 328  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@VectorToPO
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN5@VectorToPO:
	DD	1
	DD	$LN4@VectorToPO
$LN4@VectorToPO:
	DD	-12					; fffffff4H
	DD	8
	DD	$LN3@VectorToPO
$LN3@VectorToPO:
	DB	112					; 00000070H
	DB	0
?VectorToPOINT@@YA?AUtagPOINT@@ABUVector2D@@@Z ENDP	; VectorToPOINT
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\Réseau neuronnes - Projet Raven\Réseau\solution_lab_apprentissage_a_partir_bot\solution_lab_apprentissage_a_partir_bot\Common\2D\Vector2D.h
;	COMDAT ?Vec2DNormalize@@YA?AUVector2D@@ABU1@@Z
_TEXT	SEGMENT
tv87 = -40						; size = 8
_vector_length$ = -32					; size = 8
_vec$ = -20						; size = 16
___$ReturnUdt$ = 8					; size = 4
_v$ = 12						; size = 4
?Vec2DNormalize@@YA?AUVector2D@@ABU1@@Z PROC		; Vec2DNormalize, COMDAT

; 258  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 40					; 00000028H
	push	edi
	lea	edi, DWORD PTR [ebp-40]
	mov	ecx, 10					; 0000000aH
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 259  :   Vector2D vec = v;

	mov	eax, DWORD PTR _v$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _vec$[ebp], ecx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR _vec$[ebp+4], edx
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _vec$[ebp+8], ecx
	mov	edx, DWORD PTR [eax+12]
	mov	DWORD PTR _vec$[ebp+12], edx

; 260  : 
; 261  :   double vector_length = vec.Length();

	lea	ecx, DWORD PTR _vec$[ebp]
	call	?Length@Vector2D@@QBENXZ		; Vector2D::Length
	fstp	QWORD PTR _vector_length$[ebp]

; 262  : 
; 263  :   if (vector_length > std::numeric_limits<double>::epsilon())

	call	?epsilon@?$numeric_limits@N@std@@SANXZ	; std::numeric_limits<double>::epsilon
	fstp	QWORD PTR tv87[ebp]
	movsd	xmm0, QWORD PTR _vector_length$[ebp]
	comisd	xmm0, QWORD PTR tv87[ebp]
	jbe	SHORT $LN2@Vec2DNorma

; 264  :   {
; 265  :     vec.x /= vector_length;

	movsd	xmm0, QWORD PTR _vec$[ebp]
	divsd	xmm0, QWORD PTR _vector_length$[ebp]
	movsd	QWORD PTR _vec$[ebp], xmm0

; 266  :     vec.y /= vector_length;

	movsd	xmm0, QWORD PTR _vec$[ebp+8]
	divsd	xmm0, QWORD PTR _vector_length$[ebp]
	movsd	QWORD PTR _vec$[ebp+8], xmm0
$LN2@Vec2DNorma:

; 267  :   }
; 268  : 
; 269  :   return vec;

	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]
	mov	ecx, DWORD PTR _vec$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _vec$[ebp+4]
	mov	DWORD PTR [eax+4], edx
	mov	ecx, DWORD PTR _vec$[ebp+8]
	mov	DWORD PTR [eax+8], ecx
	mov	edx, DWORD PTR _vec$[ebp+12]
	mov	DWORD PTR [eax+12], edx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 270  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@Vec2DNorma
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	add	esp, 40					; 00000028H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN6@Vec2DNorma:
	DD	1
	DD	$LN5@Vec2DNorma
$LN5@Vec2DNorma:
	DD	-20					; ffffffecH
	DD	16					; 00000010H
	DD	$LN4@Vec2DNorma
$LN4@Vec2DNorma:
	DB	118					; 00000076H
	DB	101					; 00000065H
	DB	99					; 00000063H
	DB	0
?Vec2DNormalize@@YA?AUVector2D@@ABU1@@Z ENDP		; Vec2DNormalize
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\Réseau neuronnes - Projet Raven\Réseau\solution_lab_apprentissage_a_partir_bot\solution_lab_apprentissage_a_partir_bot\Common\2D\Vector2D.h
;	COMDAT ??H@YA?AUVector2D@@ABU0@0@Z
_TEXT	SEGMENT
_result$ = -20						; size = 16
___$ReturnUdt$ = 8					; size = 4
_lhs$ = 12						; size = 4
_rhs$ = 16						; size = 4
??H@YA?AUVector2D@@ABU0@0@Z PROC			; operator+, COMDAT

; 359  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax

; 360  :   Vector2D result(lhs);

	mov	eax, DWORD PTR _lhs$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _result$[ebp], ecx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR _result$[ebp+4], edx
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _result$[ebp+8], ecx
	mov	edx, DWORD PTR [eax+12]
	mov	DWORD PTR _result$[ebp+12], edx

; 361  :   result.x += rhs.x;

	mov	eax, DWORD PTR _rhs$[ebp]
	movsd	xmm0, QWORD PTR _result$[ebp]
	addsd	xmm0, QWORD PTR [eax]
	movsd	QWORD PTR _result$[ebp], xmm0

; 362  :   result.y += rhs.y;

	mov	ecx, DWORD PTR _rhs$[ebp]
	movsd	xmm0, QWORD PTR _result$[ebp+8]
	addsd	xmm0, QWORD PTR [ecx+8]
	movsd	QWORD PTR _result$[ebp+8], xmm0

; 363  :   
; 364  :   return result;

	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
	mov	eax, DWORD PTR _result$[ebp]
	mov	DWORD PTR [edx], eax
	mov	ecx, DWORD PTR _result$[ebp+4]
	mov	DWORD PTR [edx+4], ecx
	mov	eax, DWORD PTR _result$[ebp+8]
	mov	DWORD PTR [edx+8], eax
	mov	ecx, DWORD PTR _result$[ebp+12]
	mov	DWORD PTR [edx+12], ecx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 365  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@operator
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	esp, ebp
	pop	ebp
	ret	0
$LN5@operator:
	DD	1
	DD	$LN4@operator
$LN4@operator:
	DD	-20					; ffffffecH
	DD	16					; 00000010H
	DD	$LN3@operator
$LN3@operator:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	116					; 00000074H
	DB	0
??H@YA?AUVector2D@@ABU0@0@Z ENDP			; operator+
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\Réseau neuronnes - Projet Raven\Réseau\solution_lab_apprentissage_a_partir_bot\solution_lab_apprentissage_a_partir_bot\Common\2D\Vector2D.h
;	COMDAT ??G@YA?AUVector2D@@ABU0@0@Z
_TEXT	SEGMENT
_result$ = -20						; size = 16
___$ReturnUdt$ = 8					; size = 4
_lhs$ = 12						; size = 4
_rhs$ = 16						; size = 4
??G@YA?AUVector2D@@ABU0@0@Z PROC			; operator-, COMDAT

; 349  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax

; 350  :   Vector2D result(lhs);

	mov	eax, DWORD PTR _lhs$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _result$[ebp], ecx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR _result$[ebp+4], edx
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _result$[ebp+8], ecx
	mov	edx, DWORD PTR [eax+12]
	mov	DWORD PTR _result$[ebp+12], edx

; 351  :   result.x -= rhs.x;

	mov	eax, DWORD PTR _rhs$[ebp]
	movsd	xmm0, QWORD PTR _result$[ebp]
	subsd	xmm0, QWORD PTR [eax]
	movsd	QWORD PTR _result$[ebp], xmm0

; 352  :   result.y -= rhs.y;

	mov	ecx, DWORD PTR _rhs$[ebp]
	movsd	xmm0, QWORD PTR _result$[ebp+8]
	subsd	xmm0, QWORD PTR [ecx+8]
	movsd	QWORD PTR _result$[ebp+8], xmm0

; 353  :   
; 354  :   return result;

	mov	edx, DWORD PTR ___$ReturnUdt$[ebp]
	mov	eax, DWORD PTR _result$[ebp]
	mov	DWORD PTR [edx], eax
	mov	ecx, DWORD PTR _result$[ebp+4]
	mov	DWORD PTR [edx+4], ecx
	mov	eax, DWORD PTR _result$[ebp+8]
	mov	DWORD PTR [edx+8], eax
	mov	ecx, DWORD PTR _result$[ebp+12]
	mov	DWORD PTR [edx+12], ecx
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 355  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@operator
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	esp, ebp
	pop	ebp
	ret	0
$LN5@operator:
	DD	1
	DD	$LN4@operator
$LN4@operator:
	DD	-20					; ffffffecH
	DD	16					; 00000010H
	DD	$LN3@operator
$LN3@operator:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	116					; 00000074H
	DB	0
??G@YA?AUVector2D@@ABU0@0@Z ENDP			; operator-
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\Réseau neuronnes - Projet Raven\Réseau\solution_lab_apprentissage_a_partir_bot\solution_lab_apprentissage_a_partir_bot\Common\2D\Vector2D.h
;	COMDAT ??D@YA?AUVector2D@@ABU0@N@Z
_TEXT	SEGMENT
_result$ = -20						; size = 16
___$ReturnUdt$ = 8					; size = 4
_lhs$ = 12						; size = 4
_rhs$ = 16						; size = 8
??D@YA?AUVector2D@@ABU0@N@Z PROC			; operator*, COMDAT

; 334  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax

; 335  :   Vector2D result(lhs);

	mov	eax, DWORD PTR _lhs$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _result$[ebp], ecx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR _result$[ebp+4], edx
	mov	ecx, DWORD PTR [eax+8]
	mov	DWORD PTR _result$[ebp+8], ecx
	mov	edx, DWORD PTR [eax+12]
	mov	DWORD PTR _result$[ebp+12], edx

; 336  :   result *= rhs;

	lea	eax, DWORD PTR _rhs$[ebp]
	push	eax
	lea	ecx, DWORD PTR _result$[ebp]
	call	??XVector2D@@QAEABU0@ABN@Z		; Vector2D::operator*=

; 337  :   return result;

	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	mov	edx, DWORD PTR _result$[ebp]
	mov	DWORD PTR [ecx], edx
	mov	eax, DWORD PTR _result$[ebp+4]
	mov	DWORD PTR [ecx+4], eax
	mov	edx, DWORD PTR _result$[ebp+8]
	mov	DWORD PTR [ecx+8], edx
	mov	eax, DWORD PTR _result$[ebp+12]
	mov	DWORD PTR [ecx+12], eax
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 338  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@operator
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 24					; 00000018H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN5@operator:
	DD	1
	DD	$LN4@operator
$LN4@operator:
	DD	-20					; ffffffecH
	DD	16					; 00000010H
	DD	$LN3@operator
$LN3@operator:
	DB	114					; 00000072H
	DB	101					; 00000065H
	DB	115					; 00000073H
	DB	117					; 00000075H
	DB	108					; 0000006cH
	DB	116					; 00000074H
	DB	0
??D@YA?AUVector2D@@ABU0@N@Z ENDP			; operator*
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\Réseau neuronnes - Projet Raven\Réseau\solution_lab_apprentissage_a_partir_bot\solution_lab_apprentissage_a_partir_bot\Common\2D\Vector2D.h
;	COMDAT ??XVector2D@@QAEABU0@ABN@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_rhs$ = 8						; size = 4
??XVector2D@@QAEABU0@ABN@Z PROC				; Vector2D::operator*=, COMDAT
; _this$ = ecx

; 84   :   {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 85   :     x *= rhs;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _rhs$[ebp]
	movsd	xmm0, QWORD PTR [eax]
	mulsd	xmm0, QWORD PTR [ecx]
	mov	edx, DWORD PTR _this$[ebp]
	movsd	QWORD PTR [edx], xmm0

; 86   :     y *= rhs;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _rhs$[ebp]
	movsd	xmm0, QWORD PTR [eax+8]
	mulsd	xmm0, QWORD PTR [ecx]
	mov	edx, DWORD PTR _this$[ebp]
	movsd	QWORD PTR [edx+8], xmm0

; 87   : 
; 88   :     return *this;

	mov	eax, DWORD PTR _this$[ebp]

; 89   :   }

	mov	esp, ebp
	pop	ebp
	ret	4
??XVector2D@@QAEABU0@ABN@Z ENDP				; Vector2D::operator*=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\Réseau neuronnes - Projet Raven\Réseau\solution_lab_apprentissage_a_partir_bot\solution_lab_apprentissage_a_partir_bot\Common\2D\Vector2D.h
;	COMDAT ?Perp@Vector2D@@QBE?AU1@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
___$ReturnUdt$ = 8					; size = 4
?Perp@Vector2D@@QBE?AU1@XZ PROC				; Vector2D::Perp, COMDAT
; _this$ = ecx

; 176  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 177  :   return Vector2D(-y, x);

	mov	eax, DWORD PTR _this$[ebp]
	sub	esp, 8
	movsd	xmm0, QWORD PTR [eax]
	movsd	QWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	movsd	xmm0, QWORD PTR [ecx+8]
	xorps	xmm0, QWORD PTR __xmm@80000000000000008000000000000000
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	mov	ecx, DWORD PTR ___$ReturnUdt$[ebp]
	call	??0Vector2D@@QAE@NN@Z			; Vector2D::Vector2D
	mov	eax, DWORD PTR ___$ReturnUdt$[ebp]

; 178  : }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?Perp@Vector2D@@QBE?AU1@XZ ENDP				; Vector2D::Perp
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\Réseau neuronnes - Projet Raven\Réseau\solution_lab_apprentissage_a_partir_bot\solution_lab_apprentissage_a_partir_bot\Common\2D\Vector2D.h
;	COMDAT ?Length@Vector2D@@QBENXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?Length@Vector2D@@QBENXZ PROC				; Vector2D::Length, COMDAT
; _this$ = ecx

; 128  : {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 129  :   return sqrt(x * x + y * y);

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	movsd	xmm0, QWORD PTR [eax]
	mulsd	xmm0, QWORD PTR [ecx]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR _this$[ebp]
	movsd	xmm1, QWORD PTR [edx+8]
	mulsd	xmm1, QWORD PTR [eax+8]
	addsd	xmm0, xmm1
	sub	esp, 8
	movsd	QWORD PTR [esp], xmm0
	call	_sqrt
	add	esp, 8

; 130  : }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?Length@Vector2D@@QBENXZ ENDP				; Vector2D::Length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\Réseau neuronnes - Projet Raven\Réseau\solution_lab_apprentissage_a_partir_bot\solution_lab_apprentissage_a_partir_bot\Common\2D\Vector2D.h
;	COMDAT ??0Vector2D@@QAE@NN@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_a$ = 8							; size = 8
_b$ = 16						; size = 8
??0Vector2D@@QAE@NN@Z PROC				; Vector2D::Vector2D, COMDAT
; _this$ = ecx

; 25   :   Vector2D(double a, double b):x(a),y(b){}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	movsd	xmm0, QWORD PTR _a$[ebp]
	movsd	QWORD PTR [eax], xmm0
	mov	ecx, DWORD PTR _this$[ebp]
	movsd	xmm0, QWORD PTR _b$[ebp]
	movsd	QWORD PTR [ecx+8], xmm0
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
??0Vector2D@@QAE@NN@Z ENDP				; Vector2D::Vector2D
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\Réseau neuronnes - Projet Raven\Réseau\solution_lab_apprentissage_a_partir_bot\solution_lab_apprentissage_a_partir_bot\Common\misc\utils.h
;	COMDAT ??__EMinFloat@@YAXXZ
text$di	SEGMENT
??__EMinFloat@@YAXXZ PROC				; `dynamic initializer for 'MinFloat'', COMDAT

; 27   : const float   MinFloat  = (std::numeric_limits<float>::min)();

	push	ebp
	mov	ebp, esp
	call	?min@?$numeric_limits@M@std@@SAMXZ	; std::numeric_limits<float>::min
	fstp	DWORD PTR ?MinFloat@@3MB
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??__EMinFloat@@YAXXZ ENDP				; `dynamic initializer for 'MinFloat''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\Réseau neuronnes - Projet Raven\Réseau\solution_lab_apprentissage_a_partir_bot\solution_lab_apprentissage_a_partir_bot\Common\misc\utils.h
;	COMDAT ??__EMaxFloat@@YAXXZ
text$di	SEGMENT
??__EMaxFloat@@YAXXZ PROC				; `dynamic initializer for 'MaxFloat'', COMDAT

; 26   : const float   MaxFloat  = (std::numeric_limits<float>::max)();

	push	ebp
	mov	ebp, esp
	call	?max@?$numeric_limits@M@std@@SAMXZ	; std::numeric_limits<float>::max
	fstp	DWORD PTR ?MaxFloat@@3MB
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??__EMaxFloat@@YAXXZ ENDP				; `dynamic initializer for 'MaxFloat''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\Réseau neuronnes - Projet Raven\Réseau\solution_lab_apprentissage_a_partir_bot\solution_lab_apprentissage_a_partir_bot\Common\misc\utils.h
;	COMDAT ??__EMinDouble@@YAXXZ
text$di	SEGMENT
??__EMinDouble@@YAXXZ PROC				; `dynamic initializer for 'MinDouble'', COMDAT

; 25   : const double  MinDouble = (std::numeric_limits<double>::min)();

	push	ebp
	mov	ebp, esp
	call	?min@?$numeric_limits@N@std@@SANXZ	; std::numeric_limits<double>::min
	fstp	QWORD PTR ?MinDouble@@3NB
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??__EMinDouble@@YAXXZ ENDP				; `dynamic initializer for 'MinDouble''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\Réseau neuronnes - Projet Raven\Réseau\solution_lab_apprentissage_a_partir_bot\solution_lab_apprentissage_a_partir_bot\Common\misc\utils.h
;	COMDAT ??__EMaxDouble@@YAXXZ
text$di	SEGMENT
??__EMaxDouble@@YAXXZ PROC				; `dynamic initializer for 'MaxDouble'', COMDAT

; 24   : const double  MaxDouble = (std::numeric_limits<double>::max)();

	push	ebp
	mov	ebp, esp
	call	?max@?$numeric_limits@N@std@@SANXZ	; std::numeric_limits<double>::max
	fstp	QWORD PTR ?MaxDouble@@3NB
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??__EMaxDouble@@YAXXZ ENDP				; `dynamic initializer for 'MaxDouble''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\Réseau neuronnes - Projet Raven\Réseau\solution_lab_apprentissage_a_partir_bot\solution_lab_apprentissage_a_partir_bot\Common\misc\utils.h
;	COMDAT ??__EMaxInt@@YAXXZ
text$di	SEGMENT
??__EMaxInt@@YAXXZ PROC					; `dynamic initializer for 'MaxInt'', COMDAT

; 23   : const int     MaxInt    = (std::numeric_limits<int>::max)();

	push	ebp
	mov	ebp, esp
	call	?max@?$numeric_limits@H@std@@SAHXZ	; std::numeric_limits<int>::max
	mov	DWORD PTR ?MaxInt@@3HB, eax
	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
??__EMaxInt@@YAXXZ ENDP					; `dynamic initializer for 'MaxInt''
text$di	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xlocale
;	COMDAT ??0id@locale@std@@QAE@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
??0id@locale@std@@QAE@I@Z PROC				; std::locale::id::id, COMDAT
; _this$ = ecx

; 96   :         __CLR_OR_THIS_CALL id(size_t _Val = 0) : _Id(_Val) { // construct with specified stamp value

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Val$[ebp]
	mov	DWORD PTR [eax], ecx

; 97   :         }

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0id@locale@std@@QAE@I@Z ENDP				; std::locale::id::id
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_Gruntime_error@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_Gruntime_error@std@@UAEPAXI@Z PROC			; std::runtime_error::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1runtime_error@std@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@scalar
	push	12					; 0000000cH
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
$LN2@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_Gruntime_error@std@@UAEPAXI@Z ENDP			; std::runtime_error::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0runtime_error@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0runtime_error@std@@QAE@ABV01@@Z PROC			; std::runtime_error::runtime_error, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0exception@std@@QAE@ABV01@@Z		; std::exception::exception
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7runtime_error@std@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0runtime_error@std@@QAE@ABV01@@Z ENDP			; std::runtime_error::runtime_error
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1runtime_error@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1runtime_error@std@@UAE@XZ PROC			; std::runtime_error::~runtime_error, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1exception@std@@UAE@XZ		; std::exception::~exception
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1runtime_error@std@@UAE@XZ ENDP			; std::runtime_error::~runtime_error
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\stdexcept
;	COMDAT ??0runtime_error@std@@QAE@PBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Message$ = 8						; size = 4
??0runtime_error@std@@QAE@PBD@Z PROC			; std::runtime_error::runtime_error, COMDAT
; _this$ = ecx

; 130  :     explicit runtime_error(const char* _Message) : _Mybase(_Message) { // construct from message string

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR __Message$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0exception@std@@QAE@QBD@Z		; std::exception::exception
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7runtime_error@std@@6B@

; 131  :     }

	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0runtime_error@std@@QAE@PBD@Z ENDP			; std::runtime_error::runtime_error
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAE@XZ PROC ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::~_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAE@XZ ENDP ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::~_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAEAAV?$allocator@D@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAEAAV?$allocator@D@2@XZ PROC ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_first, COMDAT
; _this$ = ecx

; 1420 :     _Ty1& _Get_first() noexcept {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 1421 :         return *this;

	mov	eax, DWORD PTR _this$[ebp]

; 1422 :     }

	mov	esp, ebp
	pop	ebp
	ret	0
?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAEAAV?$allocator@D@2@XZ ENDP ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEAAV?$allocator@D@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEAAV?$allocator@D@2@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal, COMDAT
; _this$ = ecx

; 4194 :     _Alty& _Getal() noexcept { // return reference to allocator

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 4195 :         return _Mypair._Get_first();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAEAAV?$allocator@D@2@XZ ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_first

; 4196 :     }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEAAV?$allocator@D@2@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXXZ
_TEXT	SEGMENT
$T2 = -25						; size = 1
__Al$3 = -24						; size = 4
__Ptr$4 = -20						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate, COMDAT
; _this$ = ecx

; 4164 :     void _Tidy_deallocate() noexcept { // initialize buffer, deallocating any storage

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 4165 :         _Mypair._Myval2._Orphan_all();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_all@_Container_base12@std@@QAEXXZ ; std::_Container_base12::_Orphan_all

; 4166 :         if (_Mypair._Myval2._Large_string_engaged()) {

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QBE_NXZ ; std::_String_val<std::_Simple_types<char> >::_Large_string_engaged
	movzx	eax, al
	test	eax, eax
	je	SHORT $LN2@Tidy_deall

; 4167 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR __Ptr$4[ebp], edx

; 4168 :             auto& _Al          = _Getal();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEAAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
	mov	DWORD PTR __Al$3[ebp], eax

; 4169 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	push	eax
	call	??$_Destroy_in_place@PAD@std@@YAXAAPAD@Z ; std::_Destroy_in_place<char *>
	add	esp, 4

; 4170 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	add	edx, 1
	push	edx
	mov	eax, DWORD PTR __Ptr$4[ebp]
	push	eax
	mov	ecx, DWORD PTR __Al$3[ebp]
	call	?deallocate@?$allocator@D@std@@QAEXQADI@Z ; std::allocator<char>::deallocate
$LN2@Tidy_deall:

; 4171 :         }
; 4172 : 
; 4173 :         _Mypair._Myval2._Mysize = 0;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+20], 0

; 4174 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+24], 15			; 0000000fH

; 4175 :         // the _Traits::assign is last so the codegen doesn't think the char
; 4176 :         // write can alias this
; 4177 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

	mov	BYTE PTR $T2[ebp], 0
	lea	eax, DWORD PTR $T2[ebp]
	push	eax
	mov	ecx, 1
	imul	edx, ecx, 0
	mov	eax, DWORD PTR _this$[ebp]
	lea	ecx, DWORD PTR [eax+edx+4]
	push	ecx
	call	?assign@?$_Narrow_char_traits@DH@std@@SAXAADABD@Z ; std::_Narrow_char_traits<char,int>::assign
	add	esp, 8

; 4178 :     }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 28					; 0000001cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size, COMDAT
; _this$ = ecx

; 3566 :     _NODISCARD size_type size() const noexcept { // return length of sequence

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 3567 :         return _Mypair._Myval2._Mysize;

	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+20]

; 3568 :     }

	mov	esp, ebp
	pop	ebp
	ret	0
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEIXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str, COMDAT
; _this$ = ecx

; 3548 :     _NODISCARD _Ret_z_ const _Elem* c_str() const noexcept { // return pointer to null-terminated immutable array

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	push	ecx
	mov	DWORD PTR [ebp-16], -858993460		; ccccccccH
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 3549 :         return _Mypair._Myval2._Myptr();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr

; 3550 :     }

	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-8]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QBEPBDXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
_TEXT	SEGMENT
__To_delete$ = -24					; size = 4
_$S17$ = -13						; size = 1
__Alproxy$ = -8						; size = 4
_this$ = -4						; size = 4
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT
; _this$ = ecx

; 2597 :     ~basic_string() noexcept { // destroy the string

	push	ebp
	mov	ebp, esp
	sub	esp, 24					; 00000018H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx

; 2598 :         _Tidy_deallocate();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate

; 2599 : #if _ITERATOR_DEBUG_LEVEL != 0
; 2600 :         auto&& _Alproxy          = _GET_PROXY_ALLOCATOR(_Alty, _Getal());

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AAEAAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
	push	eax
	lea	ecx, DWORD PTR _$S17$[ebp]
	call	??$?0D@?$allocator@U_Container_proxy@std@@@std@@QAE@ABV?$allocator@D@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char>
	lea	eax, DWORD PTR _$S17$[ebp]
	mov	DWORD PTR __Alproxy$[ebp], eax

; 2601 :         const auto _To_delete    = _Mypair._Myval2._Myproxy;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR __To_delete$[ebp], edx

; 2602 :         _Mypair._Myval2._Myproxy = nullptr;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0

; 2603 :         _Delete_plain_internal(_Alproxy, _To_delete);

	mov	ecx, DWORD PTR __To_delete$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Alproxy$[ebp]
	push	edx
	call	??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAAV?$allocator@U_Container_proxy@std@@@0@QAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
	add	esp, 8

; 2604 : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 2605 :     }

	mov	ecx, DWORD PTR _this$[ebp]
	call	??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QAE@XZ
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@basic_stri
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 24					; 00000018H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN5@basic_stri:
	DD	1
	DD	$LN4@basic_stri
$LN4@basic_stri:
	DD	-13					; fffffff3H
	DD	1
	DD	$LN3@basic_stri
$LN3@basic_stri:
	DB	36					; 00000024H
	DB	83					; 00000053H
	DB	49					; 00000031H
	DB	55					; 00000037H
	DB	0
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ PROC ; std::_String_val<std::_Simple_types<char> >::~_String_val<std::_Simple_types<char> >, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	call	??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ; std::_String_val<std::_Simple_types<char> >::_Bxty::~_Bxty
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ENDP ; std::_String_val<std::_Simple_types<char> >::~_String_val<std::_Simple_types<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ PROC ; std::_String_val<std::_Simple_types<char> >::_Bxty::~_Bxty, COMDAT
; _this$ = ecx

; 2148 :         ~_Bxty() noexcept {} // user-provided, for fancy pointers

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	0
??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QAE@XZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Bxty::~_Bxty
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QBE_NXZ
_TEXT	SEGMENT
tv66 = -8						; size = 4
_this$ = -4						; size = 4
?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QBE_NXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Large_string_engaged, COMDAT
; _this$ = ecx

; 2120 :     bool _Large_string_engaged() const { // returns whether the large string mode (allocated memory) is engaged

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 2121 :         return _BUF_SIZE <= _Myres;

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+24], 16			; 00000010H
	jb	SHORT $LN3@Large_stri
	mov	DWORD PTR tv66[ebp], 1
	jmp	SHORT $LN4@Large_stri
$LN3@Large_stri:
	mov	DWORD PTR tv66[ebp], 0
$LN4@Large_stri:
	mov	al, BYTE PTR tv66[ebp]

; 2122 :     }

	mov	esp, ebp
	pop	ebp
	ret	0
?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QBE_NXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Large_string_engaged
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ
_TEXT	SEGMENT
__Result$ = -8						; size = 4
_this$ = -4						; size = 4
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Myptr, COMDAT
; _this$ = ecx

; 2111 :     const value_type* _Myptr() const { // determine current pointer to buffer for immutable string

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 2112 :         const value_type* _Result = _Bx._Buf;

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	mov	DWORD PTR __Result$[ebp], eax

; 2113 :         if (_Large_string_engaged()) {

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QBE_NXZ ; std::_String_val<std::_Simple_types<char> >::_Large_string_engaged
	movzx	ecx, al
	test	ecx, ecx
	je	SHORT $LN2@Myptr

; 2114 :             _Result = _Unfancy(_Bx._Ptr);

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	call	??$_Unfancy@D@std@@YAPADPAD@Z		; std::_Unfancy<char>
	add	esp, 4
	mov	DWORD PTR __Result$[ebp], eax
$LN2@Myptr:

; 2115 :         }
; 2116 : 
; 2117 :         return _Result;

	mov	eax, DWORD PTR __Result$[ebp]

; 2118 :     }

	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QBEPBDXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Myptr
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?deallocate@?$allocator@D@std@@QAEXQADI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$allocator@D@std@@QAEXQADI@Z PROC		; std::allocator<char>::deallocate, COMDAT
; _this$ = ecx

; 865  :     void deallocate(_Ty* const _Ptr, const size_t _Count) {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 866  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 867  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	mov	eax, DWORD PTR __Count$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Ptr$[ebp]
	push	ecx
	call	??$_Deallocate@$07$0A@@std@@YAXPAXI@Z	; std::_Deallocate<8,0>
	add	esp, 8

; 868  :     }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?deallocate@?$allocator@D@std@@QAEXQADI@Z ENDP		; std::allocator<char>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?assign@?$_Narrow_char_traits@DH@std@@SAXAADABD@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
?assign@?$_Narrow_char_traits@DH@std@@SAXAADABD@Z PROC	; std::_Narrow_char_traits<char,int>::assign, COMDAT

; 377  :     static _CONSTEXPR17 void assign(_Elem& _Left, const _Elem& _Right) noexcept { // assign an element

	push	ebp
	mov	ebp, esp

; 378  :         _Left = _Right;

	mov	eax, DWORD PTR __Left$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	dl, BYTE PTR [ecx]
	mov	BYTE PTR [eax], dl

; 379  :     }

	pop	ebp
	ret	0
?assign@?$_Narrow_char_traits@DH@std@@SAXAADABD@Z ENDP	; std::_Narrow_char_traits<char,int>::assign
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Release@_Basic_container_proxy_ptr12@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Release@_Basic_container_proxy_ptr12@std@@QAEXXZ PROC	; std::_Basic_container_proxy_ptr12::_Release, COMDAT
; _this$ = ecx

; 1348 :     void _Release() noexcept { // disengage this _Basic_container_proxy_ptr12

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 1349 :         _Ptr = nullptr;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0

; 1350 :     }

	mov	esp, ebp
	pop	ebp
	ret	0
?_Release@_Basic_container_proxy_ptr12@std@@QAEXXZ ENDP	; std::_Basic_container_proxy_ptr12::_Release
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Orphan_me@_Iterator_base12@std@@QAEXXZ
_TEXT	SEGMENT
__Pnext$1 = -8						; size = 4
_this$ = -4						; size = 4
?_Orphan_me@_Iterator_base12@std@@QAEXXZ PROC		; std::_Iterator_base12::_Orphan_me, COMDAT
; _this$ = ecx

; 1267 :     void _Orphan_me() noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 1268 :         if (_Myproxy) { // adopted, remove self from list

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	$LN13@Orphan_me

; 1269 :             _Iterator_base12** _Pnext = &_Myproxy->_Myfirstiter;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	add	edx, 4
	mov	DWORD PTR __Pnext$1[ebp], edx
$LN2@Orphan_me:

; 1270 :             while (*_Pnext && *_Pnext != this) {

	mov	eax, DWORD PTR __Pnext$1[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN6@Orphan_me
	mov	ecx, DWORD PTR __Pnext$1[ebp]
	mov	edx, DWORD PTR [ecx]
	cmp	edx, DWORD PTR _this$[ebp]
	je	SHORT $LN6@Orphan_me

; 1271 :                 _Pnext = &(*_Pnext)->_Mynextiter;

	mov	eax, DWORD PTR __Pnext$1[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 4
	mov	DWORD PTR __Pnext$1[ebp], ecx

; 1272 :             }

	jmp	SHORT $LN2@Orphan_me
$LN6@Orphan_me:

; 1273 : 
; 1274 :             _STL_VERIFY(*_Pnext, "ITERATOR LIST CORRUPTED!");

	mov	edx, DWORD PTR __Pnext$1[ebp]
	cmp	DWORD PTR [edx], 0
	je	SHORT $LN9@Orphan_me
	jmp	SHORT $LN4@Orphan_me
$LN9@Orphan_me:
	push	OFFSET ??_C@_0BJ@LFDBABJJ@ITERATOR?5LIST?5CORRUPTED?$CB@
	push	OFFSET ??_C@_02DKCKIIND@?$CFs@
	push	0
	push	1274					; 000004faH
	push	OFFSET ??_C@_0GI@FJIKDGOA@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
	push	2
	call	__CrtDbgReport
	add	esp, 24					; 00000018H
	cmp	eax, 1
	jne	SHORT $LN14@Orphan_me
	int	3
$LN14@Orphan_me:
	push	0
	push	1274					; 000004faH
	push	OFFSET ??_C@_1NA@CDBIFGMM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
	push	OFFSET ??_C@_1EE@KLDMFDFL@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAI?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA_@
	push	OFFSET ??_C@_1DG@PLBPCAEM@?$AA?$CC?$AAI?$AAT?$AAE?$AAR?$AAA?$AAT?$AAO?$AAR?$AA?5?$AAL?$AAI?$AAS?$AAT?$AA?5@
	call	__invalid_parameter
	add	esp, 20					; 00000014H
	xor	ecx, ecx
	jne	SHORT $LN9@Orphan_me
$LN4@Orphan_me:
	xor	edx, edx
	jne	SHORT $LN6@Orphan_me

; 1275 :             *_Pnext  = _Mynextiter;

	mov	eax, DWORD PTR __Pnext$1[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR [eax], edx

; 1276 :             _Myproxy = nullptr;

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
$LN13@Orphan_me:

; 1277 :         }
; 1278 :     }

	add	esp, 8
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Orphan_me@_Iterator_base12@std@@QAEXXZ ENDP		; std::_Iterator_base12::_Orphan_me
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ
_TEXT	SEGMENT
tv68 = -8						; size = 4
_this$ = -4						; size = 4
?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ PROC ; std::_Iterator_base12::_Getcont, COMDAT
; _this$ = ecx

; 1262 :     const _Container_base12* _Getcont() const noexcept {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 1263 :         return _Myproxy ? _Myproxy->_Mycont : nullptr;

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN3@Getcont
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR tv68[ebp], eax
	jmp	SHORT $LN4@Getcont
$LN3@Getcont:
	mov	DWORD PTR tv68[ebp], 0
$LN4@Getcont:
	mov	eax, DWORD PTR tv68[ebp]

; 1264 :     }

	mov	esp, ebp
	pop	ebp
	ret	0
?_Getcont@_Iterator_base12@std@@QBEPBU_Container_base12@2@XZ ENDP ; std::_Iterator_base12::_Getcont
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z
_TEXT	SEGMENT
__Lock$2 = -40						; size = 4
__Lock$3 = -28						; size = 4
__Parent_proxy$4 = -20					; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Parent$ = 8						; size = 4
?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z PROC ; std::_Iterator_base12::_Adopt, COMDAT
; _this$ = ecx

; 1234 :     void _Adopt(const _Container_base12* _Parent) noexcept {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 32					; 00000020H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-44], eax
	mov	DWORD PTR [ebp-40], eax
	mov	DWORD PTR [ebp-36], eax
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 1235 :         if (_Parent) {

	cmp	DWORD PTR __Parent$[ebp], 0
	je	SHORT $LN2@Adopt

; 1236 :             // have a parent, do adoption
; 1237 :             _Container_proxy* _Parent_proxy = _Parent->_Myproxy;

	mov	eax, DWORD PTR __Parent$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Parent_proxy$4[ebp], ecx

; 1238 : 
; 1239 : #if _ITERATOR_DEBUG_LEVEL == 2
; 1240 :             if (_Myproxy != _Parent_proxy) { // change parentage

	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	cmp	eax, DWORD PTR __Parent_proxy$4[ebp]
	je	SHORT $LN4@Adopt

; 1241 :                 _Lockit _Lock(_LOCK_DEBUG);

	push	3
	lea	ecx, DWORD PTR __Lock$3[ebp]
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit

; 1242 :                 _Orphan_me();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_me@_Iterator_base12@std@@QAEXXZ ; std::_Iterator_base12::_Orphan_me

; 1243 :                 _Mynextiter                 = _Parent_proxy->_Myfirstiter;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR __Parent_proxy$4[ebp]
	mov	eax, DWORD PTR [edx+4]
	mov	DWORD PTR [ecx+4], eax

; 1244 :                 _Parent_proxy->_Myfirstiter = this;

	mov	ecx, DWORD PTR __Parent_proxy$4[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], edx

; 1245 :                 _Myproxy                    = _Parent_proxy;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Parent_proxy$4[ebp]
	mov	DWORD PTR [eax], ecx

; 1246 :             }

	lea	ecx, DWORD PTR __Lock$3[ebp]
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
$LN4@Adopt:

; 1247 : 
; 1248 : #else // _ITERATOR_DEBUG_LEVEL == 2
; 1249 :             _Myproxy = _Parent_proxy;
; 1250 : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 1251 :         } else {

	jmp	SHORT $LN5@Adopt
$LN2@Adopt:

; 1252 :             // no future parent, just disown current parent
; 1253 : #if _ITERATOR_DEBUG_LEVEL == 2
; 1254 :             _Lockit _Lock(_LOCK_DEBUG);

	push	3
	lea	ecx, DWORD PTR __Lock$2[ebp]
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit

; 1255 :             _Orphan_me();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_me@_Iterator_base12@std@@QAEXXZ ; std::_Iterator_base12::_Orphan_me

; 1256 : #else // _ITERATOR_DEBUG_LEVEL == 2
; 1257 :             _Myproxy = nullptr;
; 1258 : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 1259 :         }

	lea	ecx, DWORD PTR __Lock$2[ebp]
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
$LN5@Adopt:

; 1260 :     }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN10@Adopt
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 44					; 0000002cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
$LN10@Adopt:
	DD	2
	DD	$LN9@Adopt
$LN9@Adopt:
	DD	-28					; ffffffe4H
	DD	4
	DD	$LN6@Adopt
	DD	-40					; ffffffd8H
	DD	4
	DD	$LN7@Adopt
$LN7@Adopt:
	DB	95					; 0000005fH
	DB	76					; 0000004cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
$LN6@Adopt:
	DB	95					; 0000005fH
	DB	76					; 0000004cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-36]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z ENDP ; std::_Iterator_base12::_Adopt
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??1_Iterator_base12@std@@QAE@XZ
_TEXT	SEGMENT
__Lock$ = -24						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1_Iterator_base12@std@@QAE@XZ PROC			; std::_Iterator_base12::~_Iterator_base12, COMDAT
; _this$ = ecx

; 1227 :     ~_Iterator_base12() noexcept {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??1_Iterator_base12@std@@QAE@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 1228 : #if _ITERATOR_DEBUG_LEVEL == 2
; 1229 :         _Lockit _Lock(_LOCK_DEBUG);

	push	3
	lea	ecx, DWORD PTR __Lock$[ebp]
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit

; 1230 :         _Orphan_me();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_me@_Iterator_base12@std@@QAEXXZ ; std::_Iterator_base12::_Orphan_me

; 1231 : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 1232 :     }

	lea	ecx, DWORD PTR __Lock$[ebp]
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN6@Iterator_b
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 28					; 0000001cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	3
$LN6@Iterator_b:
	DD	1
	DD	$LN5@Iterator_b
$LN5@Iterator_b:
	DD	-24					; ffffffe8H
	DD	4
	DD	$LN3@Iterator_b
$LN3@Iterator_b:
	DB	95					; 0000005fH
	DB	76					; 0000004cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1_Iterator_base12@std@@QAE@XZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??1_Iterator_base12@std@@QAE@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
??1_Iterator_base12@std@@QAE@XZ ENDP			; std::_Iterator_base12::~_Iterator_base12
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z
_TEXT	SEGMENT
__Lock$2 = -24						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Right$ = 8						; size = 4
??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z PROC		; std::_Iterator_base12::operator=, COMDAT
; _this$ = ecx

; 1210 :     _Iterator_base12& operator=(const _Iterator_base12& _Right) noexcept {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 1211 :         if (_Myproxy != _Right._Myproxy) {

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Right$[ebp]
	mov	edx, DWORD PTR [eax]
	cmp	edx, DWORD PTR [ecx]
	je	SHORT $LN2@operator

; 1212 :             if (_Right._Myproxy) {

	mov	eax, DWORD PTR __Right$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN3@operator

; 1213 :                 _Adopt(_Right._Myproxy->_Mycont);

	mov	ecx, DWORD PTR __Right$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	eax, DWORD PTR [edx]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Adopt@_Iterator_base12@std@@QAEXPBU_Container_base12@2@@Z ; std::_Iterator_base12::_Adopt

; 1214 :             } else { // becoming invalid, disown current parent

	jmp	SHORT $LN2@operator
$LN3@operator:

; 1215 : #if _ITERATOR_DEBUG_LEVEL == 2
; 1216 :                 _Lockit _Lock(_LOCK_DEBUG);

	push	3
	lea	ecx, DWORD PTR __Lock$2[ebp]
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit

; 1217 :                 _Orphan_me();

	mov	ecx, DWORD PTR _this$[ebp]
	call	?_Orphan_me@_Iterator_base12@std@@QAEXXZ ; std::_Iterator_base12::_Orphan_me

; 1218 : #else // _ITERATOR_DEBUG_LEVEL == 2
; 1219 :                 _Myproxy = nullptr;
; 1220 : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 1221 :             }

	lea	ecx, DWORD PTR __Lock$2[ebp]
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
$LN2@operator:

; 1222 :         }
; 1223 : 
; 1224 :         return *this;

	mov	eax, DWORD PTR _this$[ebp]

; 1225 :     }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN9@operator
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 28					; 0000001cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
$LN9@operator:
	DD	1
	DD	$LN8@operator
$LN8@operator:
	DD	-24					; ffffffe8H
	DD	4
	DD	$LN6@operator
$LN6@operator:
	DB	95					; 0000005fH
	DB	76					; 0000004cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-20]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z ENDP		; std::_Iterator_base12::operator=
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??0_Iterator_base12@std@@QAE@ABU01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
??0_Iterator_base12@std@@QAE@ABU01@@Z PROC		; std::_Iterator_base12::_Iterator_base12, COMDAT
; _this$ = ecx

; 1206 :     _Iterator_base12(const _Iterator_base12& _Right) noexcept : _Myproxy(nullptr), _Mynextiter(nullptr) {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0

; 1207 :         *this = _Right;

	mov	edx, DWORD PTR __Right$[ebp]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4_Iterator_base12@std@@QAEAAU01@ABU01@@Z ; std::_Iterator_base12::operator=

; 1208 :     }

	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0_Iterator_base12@std@@QAE@ABU01@@Z ENDP		; std::_Iterator_base12::_Iterator_base12
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??0_Iterator_base12@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0_Iterator_base12@std@@QAE@XZ PROC			; std::_Iterator_base12::_Iterator_base12, COMDAT
; _this$ = ecx

; 1204 :     _Iterator_base12() noexcept : _Myproxy(nullptr), _Mynextiter(nullptr) {} // construct orphaned iterator

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+4], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0_Iterator_base12@std@@QAE@XZ ENDP			; std::_Iterator_base12::_Iterator_base12
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Orphan_all@_Container_base12@std@@QAEXXZ
_TEXT	SEGMENT
__Pnext$2 = -32						; size = 4
__Lock$3 = -24						; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
?_Orphan_all@_Container_base12@std@@QAEXXZ PROC		; std::_Container_base12::_Orphan_all, COMDAT
; _this$ = ecx

; 1288 : inline void _Container_base12::_Orphan_all() noexcept {

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?_Orphan_all@_Container_base12@std@@QAEXXZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-32], eax
	mov	DWORD PTR [ebp-28], eax
	mov	DWORD PTR [ebp-24], eax
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx

; 1289 : #if _ITERATOR_DEBUG_LEVEL == 2
; 1290 :     if (_Myproxy) { // proxy allocated, drain it

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax], 0
	je	SHORT $LN6@Orphan_all

; 1291 :         _Lockit _Lock(_LOCK_DEBUG);

	push	3
	lea	ecx, DWORD PTR __Lock$3[ebp]
	call	??0_Lockit@std@@QAE@H@Z			; std::_Lockit::_Lockit

; 1292 : 
; 1293 :         for (auto _Pnext = &_Myproxy->_Myfirstiter; *_Pnext; *_Pnext = (*_Pnext)->_Mynextiter) {

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	add	edx, 4
	mov	DWORD PTR __Pnext$2[ebp], edx
	jmp	SHORT $LN4@Orphan_all
$LN2@Orphan_all:
	mov	eax, DWORD PTR __Pnext$2[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	edx, DWORD PTR __Pnext$2[ebp]
	mov	eax, DWORD PTR [ecx+4]
	mov	DWORD PTR [edx], eax
$LN4@Orphan_all:
	mov	ecx, DWORD PTR __Pnext$2[ebp]
	cmp	DWORD PTR [ecx], 0
	je	SHORT $LN3@Orphan_all

; 1294 :             (*_Pnext)->_Myproxy = nullptr;

	mov	edx, DWORD PTR __Pnext$2[ebp]
	mov	eax, DWORD PTR [edx]
	mov	DWORD PTR [eax], 0

; 1295 :         }

	jmp	SHORT $LN2@Orphan_all
$LN3@Orphan_all:

; 1296 : 
; 1297 :         _Myproxy->_Myfirstiter = nullptr;

	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	DWORD PTR [edx+4], 0

; 1298 :     }

	lea	ecx, DWORD PTR __Lock$3[ebp]
	call	??1_Lockit@std@@QAE@XZ			; std::_Lockit::~_Lockit
$LN6@Orphan_all:

; 1299 : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 1300 : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN10@Orphan_all
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	add	esp, 32					; 00000020H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	1
$LN10@Orphan_all:
	DD	1
	DD	$LN9@Orphan_all
$LN9@Orphan_all:
	DD	-24					; ffffffe8H
	DD	4
	DD	$LN7@Orphan_all
$LN7@Orphan_all:
	DB	95					; 0000005fH
	DB	76					; 0000004cH
	DB	111					; 0000006fH
	DB	99					; 00000063H
	DB	107					; 0000006bH
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Orphan_all@_Container_base12@std@@QAEXXZ:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-24]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?_Orphan_all@_Container_base12@std@@QAEXXZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?_Orphan_all@_Container_base12@std@@QAEXXZ ENDP		; std::_Container_base12::_Orphan_all
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??0_Container_base12@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0_Container_base12@std@@QAE@XZ PROC			; std::_Container_base12::_Container_base12, COMDAT
; _this$ = ecx

; 1175 :     _Container_base12() : _Myproxy(nullptr) {} // construct childless container

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0_Container_base12@std@@QAE@XZ ENDP			; std::_Container_base12::_Container_base12
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??0_Container_proxy@std@@QAE@PAU_Container_base12@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Mycont_$ = 8						; size = 4
??0_Container_proxy@std@@QAE@PAU_Container_base12@1@@Z PROC ; std::_Container_proxy::_Container_proxy, COMDAT
; _this$ = ecx

; 1167 :     _Container_proxy(_Container_base12* _Mycont_) noexcept : _Mycont(_Mycont_), _Myfirstiter(nullptr) {}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Mycont_$[ebp]
	mov	DWORD PTR [eax], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+4], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	4
??0_Container_proxy@std@@QAE@PAU_Container_base12@1@@Z ENDP ; std::_Container_proxy::_Container_proxy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Adopt@_Iterator_base0@std@@QAEXPBX@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
?_Adopt@_Iterator_base0@std@@QAEXPBX@Z PROC		; std::_Iterator_base0::_Adopt, COMDAT
; _this$ = ecx

; 1155 :     void _Adopt(const void*) noexcept {}

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	esp, ebp
	pop	ebp
	ret	4
?_Adopt@_Iterator_base0@std@@QAEXPBX@Z ENDP		; std::_Iterator_base0::_Adopt
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Adjust_manually_vector_aligned@std@@YAXAAPAXAAI@Z
_TEXT	SEGMENT
__Back_shift$ = -16					; size = 4
__Min_back_shift$ = -12					; size = 4
__Ptr_container$ = -8					; size = 4
__Ptr_user$ = -4					; size = 4
__Ptr$ = 8						; size = 4
__Bytes$ = 12						; size = 4
?_Adjust_manually_vector_aligned@std@@YAXAAPAXAAI@Z PROC ; std::_Adjust_manually_vector_aligned, COMDAT

; 102  : inline void _Adjust_manually_vector_aligned(void*& _Ptr, size_t& _Bytes) {

	push	ebp
	mov	ebp, esp
	sub	esp, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax

; 103  :     // adjust parameters from _Allocate_manually_vector_aligned to pass to operator delete
; 104  :     _Bytes += _Non_user_size;

	mov	eax, DWORD PTR __Bytes$[ebp]
	mov	ecx, DWORD PTR [eax]
	add	ecx, 39					; 00000027H
	mov	edx, DWORD PTR __Bytes$[ebp]
	mov	DWORD PTR [edx], ecx

; 105  : 
; 106  :     const uintptr_t* const _Ptr_user = reinterpret_cast<uintptr_t*>(_Ptr);

	mov	eax, DWORD PTR __Ptr$[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR __Ptr_user$[ebp], ecx

; 107  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	edx, 4
	imul	eax, edx, -1
	mov	ecx, DWORD PTR __Ptr_user$[ebp]
	mov	edx, DWORD PTR [ecx+eax]
	mov	DWORD PTR __Ptr_container$[ebp], edx
$LN4@Adjust_man:

; 108  : 
; 109  :     // If the following asserts, it likely means that we are performing
; 110  :     // an aligned delete on memory coming from an unaligned allocation.
; 111  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");

	mov	eax, 4
	imul	ecx, eax, -2
	mov	edx, DWORD PTR __Ptr_user$[ebp]
	cmp	DWORD PTR [edx+ecx], -84215046		; fafafafaH
	jne	SHORT $LN7@Adjust_man
	jmp	SHORT $LN2@Adjust_man
$LN7@Adjust_man:
	push	OFFSET ??_C@_0BB@FCMFBGOM@invalid?5argument@
	push	OFFSET ??_C@_02DKCKIIND@?$CFs@
	push	0
	push	111					; 0000006fH
	push	OFFSET ??_C@_0GI@FJIKDGOA@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
	push	2
	call	__CrtDbgReport
	add	esp, 24					; 00000018H
	cmp	eax, 1
	jne	SHORT $LN19@Adjust_man
	int	3
$LN19@Adjust_man:
	push	0
	push	111					; 0000006fH
	push	OFFSET ??_C@_1NA@CDBIFGMM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
	push	OFFSET ??_C@_1EK@NIFDJFDG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAd?$AAj?$AAu?$AAs?$AAt?$AA_?$AAm?$AAa@
	push	OFFSET ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@
	call	__invalid_parameter
	add	esp, 20					; 00000014H
	xor	ecx, ecx
	jne	SHORT $LN7@Adjust_man
$LN2@Adjust_man:
	xor	edx, edx
	jne	SHORT $LN4@Adjust_man

; 112  : 
; 113  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 114  :     // in range [_Min_back_shift, _Non_user_size]
; 115  : #ifdef _DEBUG
; 116  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);

	mov	DWORD PTR __Min_back_shift$[ebp], 8

; 117  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 118  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 119  : #endif // _DEBUG
; 120  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

	mov	eax, DWORD PTR __Ptr$[ebp]
	mov	ecx, DWORD PTR [eax]
	sub	ecx, DWORD PTR __Ptr_container$[ebp]
	mov	DWORD PTR __Back_shift$[ebp], ecx
$LN10@Adjust_man:

; 121  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	cmp	DWORD PTR __Back_shift$[ebp], 8
	jb	SHORT $LN13@Adjust_man
	cmp	DWORD PTR __Back_shift$[ebp], 39	; 00000027H
	ja	SHORT $LN13@Adjust_man
	jmp	SHORT $LN8@Adjust_man
$LN13@Adjust_man:
	push	OFFSET ??_C@_0BB@FCMFBGOM@invalid?5argument@
	push	OFFSET ??_C@_02DKCKIIND@?$CFs@
	push	0
	push	121					; 00000079H
	push	OFFSET ??_C@_0GI@FJIKDGOA@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
	push	2
	call	__CrtDbgReport
	add	esp, 24					; 00000018H
	cmp	eax, 1
	jne	SHORT $LN20@Adjust_man
	int	3
$LN20@Adjust_man:
	push	0
	push	121					; 00000079H
	push	OFFSET ??_C@_1NA@CDBIFGMM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
	push	OFFSET ??_C@_1EK@NIFDJFDG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAd?$AAj?$AAu?$AAs?$AAt?$AA_?$AAm?$AAa@
	push	OFFSET ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@
	call	__invalid_parameter
	add	esp, 20					; 00000014H
	xor	eax, eax
	jne	SHORT $LN13@Adjust_man
$LN8@Adjust_man:
	xor	ecx, ecx
	jne	SHORT $LN10@Adjust_man

; 122  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

	mov	edx, DWORD PTR __Ptr$[ebp]
	mov	eax, DWORD PTR __Ptr_container$[ebp]
	mov	DWORD PTR [edx], eax

; 123  : }

	add	esp, 16					; 00000010H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Adjust_manually_vector_aligned@std@@YAXAAPAXAAI@Z ENDP ; std::_Adjust_manually_vector_aligned
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Allocate@_Default_allocate_traits@std@@SAPAXI@Z
_TEXT	SEGMENT
__Bytes$ = 8						; size = 4
?_Allocate@_Default_allocate_traits@std@@SAPAXI@Z PROC	; std::_Default_allocate_traits::_Allocate, COMDAT

; 46   :     _DECLSPEC_ALLOCATOR static void* _Allocate(const size_t _Bytes) {

	push	ebp
	mov	ebp, esp

; 47   :         return ::operator new(_Bytes);

	mov	eax, DWORD PTR __Bytes$[ebp]
	push	eax
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4

; 48   :     }

	cmp	ebp, esp
	call	__RTC_CheckEsp
	pop	ebp
	ret	0
?_Allocate@_Default_allocate_traits@std@@SAPAXI@Z ENDP	; std::_Default_allocate_traits::_Allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\exception
;	COMDAT ?_Throw_bad_array_new_length@std@@YAXXZ
_TEXT	SEGMENT
$T1 = -12						; size = 12
?_Throw_bad_array_new_length@std@@YAXXZ PROC		; std::_Throw_bad_array_new_length, COMDAT

; 323  : [[noreturn]] inline void _Throw_bad_array_new_length() {

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH
	mov	DWORD PTR [ebp-12], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH

; 324  :     _THROW(bad_array_new_length{});

	lea	ecx, DWORD PTR $T1[ebp]
	call	??0bad_array_new_length@std@@QAE@XZ	; std::bad_array_new_length::bad_array_new_length
	push	OFFSET __TI3?AVbad_array_new_length@std@@
	lea	eax, DWORD PTR $T1[ebp]
	push	eax
	call	__CxxThrowException@8
$LN2@Throw_bad_:

; 325  : }

	add	esp, 12					; 0000000cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?_Throw_bad_array_new_length@std@@YAXXZ ENDP		; std::_Throw_bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_Gbad_array_new_length@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_Gbad_array_new_length@std@@UAEPAXI@Z PROC		; std::bad_array_new_length::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1bad_array_new_length@std@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@scalar
	push	12					; 0000000cH
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
$LN2@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_Gbad_array_new_length@std@@UAEPAXI@Z ENDP		; std::bad_array_new_length::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0bad_array_new_length@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0bad_array_new_length@std@@QAE@ABV01@@Z PROC		; std::bad_array_new_length::bad_array_new_length, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0bad_alloc@std@@QAE@ABV01@@Z
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7bad_array_new_length@std@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0bad_array_new_length@std@@QAE@ABV01@@Z ENDP		; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1bad_array_new_length@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1bad_array_new_length@std@@UAE@XZ PROC		; std::bad_array_new_length::~bad_array_new_length, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1bad_alloc@std@@UAE@XZ
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1bad_array_new_length@std@@UAE@XZ ENDP		; std::bad_array_new_length::~bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vcruntime_exception.h
;	COMDAT ??0bad_array_new_length@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0bad_array_new_length@std@@QAE@XZ PROC		; std::bad_array_new_length::bad_array_new_length, COMDAT
; _this$ = ecx

; 138  :     {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 137  :         : bad_alloc("bad array new length")

	push	OFFSET ??_C@_0BF@KINCDENJ@bad?5array?5new?5length@
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0bad_alloc@std@@AAE@QBD@Z		; std::bad_alloc::bad_alloc

; 138  :     {

	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7bad_array_new_length@std@@6B@

; 139  :     }

	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0bad_array_new_length@std@@QAE@XZ ENDP		; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_Gbad_alloc@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_Gbad_alloc@std@@UAEPAXI@Z PROC			; std::bad_alloc::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1bad_alloc@std@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@scalar
	push	12					; 0000000cH
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
$LN2@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_Gbad_alloc@std@@UAEPAXI@Z ENDP			; std::bad_alloc::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??0bad_alloc@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0bad_alloc@std@@QAE@ABV01@@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0exception@std@@QAE@ABV01@@Z		; std::exception::exception
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7bad_alloc@std@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0bad_alloc@std@@QAE@ABV01@@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??1bad_alloc@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1bad_alloc@std@@UAE@XZ PROC				; std::bad_alloc::~bad_alloc, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1exception@std@@UAE@XZ		; std::exception::~exception
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1bad_alloc@std@@UAE@XZ ENDP				; std::bad_alloc::~bad_alloc
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vcruntime_exception.h
;	COMDAT ??0bad_alloc@std@@AAE@QBD@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Message$ = 8						; size = 4
??0bad_alloc@std@@AAE@QBD@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
; _this$ = ecx

; 127  :     {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 126  :         : exception(_Message, 1)

	push	1
	mov	eax, DWORD PTR __Message$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0exception@std@@QAE@QBDH@Z		; std::exception::exception

; 127  :     {

	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx], OFFSET ??_7bad_alloc@std@@6B@

; 128  :     }

	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0bad_alloc@std@@AAE@QBD@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
;	COMDAT ??_Gexception@std@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___flags$ = 8						; size = 4
??_Gexception@std@@UAEPAXI@Z PROC			; std::exception::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1exception@std@@UAE@XZ		; std::exception::~exception
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@scalar
	push	12					; 0000000cH
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
$LN2@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_Gexception@std@@UAEPAXI@Z ENDP			; std::exception::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vcruntime_exception.h
;	COMDAT ?what@exception@std@@UBEPBDXZ
_TEXT	SEGMENT
tv69 = -8						; size = 4
_this$ = -4						; size = 4
?what@exception@std@@UBEPBDXZ PROC			; std::exception::what, COMDAT
; _this$ = ecx

; 91   :     {

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR [ebp-8], -858993460		; ccccccccH
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx

; 92   :         return _Data._What ? _Data._What : "Unknown exception";

	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+4], 0
	je	SHORT $LN3@what
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+4]
	mov	DWORD PTR tv69[ebp], edx
	jmp	SHORT $LN4@what
$LN3@what:
	mov	DWORD PTR tv69[ebp], OFFSET ??_C@_0BC@EOODALEL@Unknown?5exception@
$LN4@what:
	mov	eax, DWORD PTR tv69[ebp]

; 93   :     }

	mov	esp, ebp
	pop	ebp
	ret	0
?what@exception@std@@UBEPBDXZ ENDP			; std::exception::what
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vcruntime_exception.h
;	COMDAT ??1exception@std@@UAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??1exception@std@@UAE@XZ PROC				; std::exception::~exception, COMDAT
; _this$ = ecx

; 86   :     {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7exception@std@@6B@

; 87   :         __std_exception_destroy(&_Data);

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	push	ecx
	call	___std_exception_destroy
	add	esp, 4

; 88   :     }

	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1exception@std@@UAE@XZ ENDP				; std::exception::~exception
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vcruntime_exception.h
;	COMDAT ??0exception@std@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Other$ = 8						; size = 4
??0exception@std@@QAE@ABV01@@Z PROC			; std::exception::exception, COMDAT
; _this$ = ecx

; 69   :     {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7exception@std@@6B@

; 68   :         : _Data()

	xor	ecx, ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 4
	mov	DWORD PTR [edx], ecx
	mov	DWORD PTR [edx+4], ecx

; 70   :         __std_exception_copy(&_Other._Data, &_Data);

	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 4
	push	eax
	mov	ecx, DWORD PTR __Other$[ebp]
	add	ecx, 4
	push	ecx
	call	___std_exception_copy
	add	esp, 8

; 71   :     }

	mov	eax, DWORD PTR _this$[ebp]
	add	esp, 4
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??0exception@std@@QAE@ABV01@@Z ENDP			; std::exception::exception
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vcruntime_exception.h
;	COMDAT ??0exception@std@@QAE@QBDH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Message$ = 8						; size = 4
___formal$ = 12						; size = 4
??0exception@std@@QAE@QBDH@Z PROC			; std::exception::exception, COMDAT
; _this$ = ecx

; 63   :     {

	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR [ebp-4], -858993460		; ccccccccH
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7exception@std@@6B@

; 62   :         : _Data()

	xor	ecx, ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 4
	mov	DWORD PTR [edx], ecx
	mov	DWORD PTR [edx+4], ecx

; 64   :         _Data._What = _Message;

	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __Message$[ebp]
	mov	DWORD PTR [eax+4], ecx

; 65   :     }

	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	8
??0exception@std@@QAE@QBDH@Z ENDP			; std::exception::exception
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vcruntime_exception.h
;	COMDAT ??0exception@std@@QAE@QBD@Z
_TEXT	SEGMENT
__InitData$ = -16					; size = 8
_this$ = -4						; size = 4
__Message$ = 8						; size = 4
??0exception@std@@QAE@QBD@Z PROC			; std::exception::exception, COMDAT
; _this$ = ecx

; 56   :     {

	push	ebp
	mov	ebp, esp
	sub	esp, 20					; 00000014H
	mov	eax, -858993460				; ccccccccH
	mov	DWORD PTR [ebp-20], eax
	mov	DWORD PTR [ebp-16], eax
	mov	DWORD PTR [ebp-12], eax
	mov	DWORD PTR [ebp-8], eax
	mov	DWORD PTR [ebp-4], eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7exception@std@@6B@

; 55   :         : _Data()

	xor	ecx, ecx
	mov	edx, DWORD PTR _this$[ebp]
	add	edx, 4
	mov	DWORD PTR [edx], ecx
	mov	DWORD PTR [edx+4], ecx

; 57   :         __std_exception_data _InitData = { _Message, true };

	mov	eax, DWORD PTR __Message$[ebp]
	mov	DWORD PTR __InitData$[ebp], eax
	mov	BYTE PTR __InitData$[ebp+4], 1

; 58   :         __std_exception_copy(&_InitData, &_Data);

	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 4
	push	ecx
	lea	edx, DWORD PTR __InitData$[ebp]
	push	edx
	call	___std_exception_copy
	add	esp, 8

; 59   :     }

	mov	eax, DWORD PTR _this$[ebp]
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@exception
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	add	esp, 20					; 00000014H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
$LN5@exception:
	DD	1
	DD	$LN4@exception
$LN4@exception:
	DD	-16					; fffffff0H
	DD	8
	DD	$LN3@exception
$LN3@exception:
	DB	95					; 0000005fH
	DB	73					; 00000049H
	DB	110					; 0000006eH
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	68					; 00000044H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	0
??0exception@std@@QAE@QBD@Z ENDP			; std::exception::exception
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\limits
;	COMDAT ?epsilon@?$numeric_limits@N@std@@SANXZ
_TEXT	SEGMENT
?epsilon@?$numeric_limits@N@std@@SANXZ PROC		; std::numeric_limits<double>::epsilon, COMDAT

; 929  :     _NODISCARD static constexpr double epsilon() noexcept { // return smallest effective increment from 1.0

	push	ebp
	mov	ebp, esp

; 930  :         return DBL_EPSILON;

	fld	QWORD PTR __real@3cb0000000000000

; 931  :     }

	pop	ebp
	ret	0
?epsilon@?$numeric_limits@N@std@@SANXZ ENDP		; std::numeric_limits<double>::epsilon
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\limits
;	COMDAT ?max@?$numeric_limits@N@std@@SANXZ
_TEXT	SEGMENT
?max@?$numeric_limits@N@std@@SANXZ PROC			; std::numeric_limits<double>::max, COMDAT

; 921  :     _NODISCARD static constexpr double(max)() noexcept { // return maximum value

	push	ebp
	mov	ebp, esp

; 922  :         return DBL_MAX;

	fld	QWORD PTR __real@7fefffffffffffff

; 923  :     }

	pop	ebp
	ret	0
?max@?$numeric_limits@N@std@@SANXZ ENDP			; std::numeric_limits<double>::max
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\limits
;	COMDAT ?min@?$numeric_limits@N@std@@SANXZ
_TEXT	SEGMENT
?min@?$numeric_limits@N@std@@SANXZ PROC			; std::numeric_limits<double>::min, COMDAT

; 917  :     _NODISCARD static constexpr double(min)() noexcept { // return minimum value

	push	ebp
	mov	ebp, esp

; 918  :         return DBL_MIN;

	fld	QWORD PTR __real@0010000000000000

; 919  :     }

	pop	ebp
	ret	0
?min@?$numeric_limits@N@std@@SANXZ ENDP			; std::numeric_limits<double>::min
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\limits
;	COMDAT ?max@?$numeric_limits@M@std@@SAMXZ
_TEXT	SEGMENT
?max@?$numeric_limits@M@std@@SAMXZ PROC			; std::numeric_limits<float>::max, COMDAT

; 872  :     _NODISCARD static constexpr float(max)() noexcept { // return maximum value

	push	ebp
	mov	ebp, esp

; 873  :         return FLT_MAX;

	fld	DWORD PTR __real@7f7fffff

; 874  :     }

	pop	ebp
	ret	0
?max@?$numeric_limits@M@std@@SAMXZ ENDP			; std::numeric_limits<float>::max
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\limits
;	COMDAT ?min@?$numeric_limits@M@std@@SAMXZ
_TEXT	SEGMENT
?min@?$numeric_limits@M@std@@SAMXZ PROC			; std::numeric_limits<float>::min, COMDAT

; 868  :     _NODISCARD static constexpr float(min)() noexcept { // return minimum value

	push	ebp
	mov	ebp, esp

; 869  :         return FLT_MIN;

	fld	DWORD PTR __real@00800000

; 870  :     }

	pop	ebp
	ret	0
?min@?$numeric_limits@M@std@@SAMXZ ENDP			; std::numeric_limits<float>::min
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\limits
;	COMDAT ?max@?$numeric_limits@H@std@@SAHXZ
_TEXT	SEGMENT
?max@?$numeric_limits@H@std@@SAHXZ PROC			; std::numeric_limits<int>::max, COMDAT

; 553  :     _NODISCARD static constexpr int(max)() noexcept { // return maximum value

	push	ebp
	mov	ebp, esp

; 554  :         return INT_MAX;

	mov	eax, 2147483647				; 7fffffffH

; 555  :     }

	pop	ebp
	ret	0
?max@?$numeric_limits@H@std@@SAHXZ ENDP			; std::numeric_limits<int>::max
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vcruntime_new.h
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT
__Size$ = 8						; size = 4
__Where$ = 12						; size = 4
??2@YAPAXIPAX@Z PROC					; operator new, COMDAT

; 168  :     {

	push	ebp
	mov	ebp, esp

; 169  :         (void)_Size;
; 170  :         return _Where;

	mov	eax, DWORD PTR __Where$[ebp]

; 171  :     }

	pop	ebp
	ret	0
??2@YAPAXIPAX@Z ENDP					; operator new
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\Réseau neuronnes - Projet Raven\Réseau\solution_lab_apprentissage_a_partir_bot\solution_lab_apprentissage_a_partir_bot\Buckland_Chapter7 to 10_Raven_apprentissage\goals\Goal_FollowPath.cpp
;	COMDAT ?__empty_global_delete@@YAXPAXI@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?__empty_global_delete@@YAXPAXI@Z PROC			; __empty_global_delete, COMDAT

	push	ebp
	mov	ebp, esp
	pop	ebp
	ret	0
?__empty_global_delete@@YAXPAXI@Z ENDP			; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu
; File D:\Réseau neuronnes - Projet Raven\Réseau\solution_lab_apprentissage_a_partir_bot\solution_lab_apprentissage_a_partir_bot\Buckland_Chapter7 to 10_Raven_apprentissage\goals\Goal_FollowPath.cpp
;	COMDAT ?__empty_global_delete@@YAXPAX@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?__empty_global_delete@@YAXPAX@Z PROC			; __empty_global_delete, COMDAT

	push	ebp
	mov	ebp, esp
	pop	ebp
	ret	0
?__empty_global_delete@@YAXPAX@Z ENDP			; __empty_global_delete
_TEXT	ENDS
END
